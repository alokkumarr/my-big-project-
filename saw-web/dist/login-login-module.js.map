{"version":3,"sources":["webpack:///./src/app/login/components/index.ts","webpack:///./src/app/login/components/login/index.ts","webpack:///./src/app/login/components/login/login.component.html","webpack:///./src/app/login/components/login/login.component.scss","webpack:///./src/app/login/components/login/login.component.ts","webpack:///./src/app/login/components/password-change/index.ts","webpack:///./src/app/login/components/password-change/password-change.component.html","webpack:///./src/app/login/components/password-change/password-change.component.scss","webpack:///./src/app/login/components/password-change/password-change.component.ts","webpack:///./src/app/login/components/password-pre-reset/index.ts","webpack:///./src/app/login/components/password-pre-reset/password-pre-reset.component.html","webpack:///./src/app/login/components/password-pre-reset/password-pre-reset.component.scss","webpack:///./src/app/login/components/password-pre-reset/password-pre-reset.component.ts","webpack:///./src/app/login/components/password-reset/index.ts","webpack:///./src/app/login/components/password-reset/password-reset.component.html","webpack:///./src/app/login/components/password-reset/password-reset.component.scss","webpack:///./src/app/login/components/password-reset/password-reset.component.ts","webpack:///./src/app/login/guards/index.ts","webpack:///./src/app/login/guards/not-logged-in-guard.service.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/page/index.ts","webpack:///./src/app/login/page/login-page.component.html","webpack:///./src/app/login/page/login-page.component.ts","webpack:///./src/app/login/routes.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["export { LoginComponent } from './login';\nexport { PasswordChangeComponent } from './password-change';\nexport { PasswordPreResetComponent } from './password-pre-reset';\nexport { PasswordResetComponent } from './password-reset';\n","export { LoginComponent } from './login.component';\n","module.exports = \"<div>\\n  <h1>Login</h1>\\n\\n  <div class=\\\"login-info\\\">\\n    <span>Use the login credentials given at time of sign up. If you don't</span>\\n    <br />\\n    <span>have an account yet contact your system administrator</span>\\n  </div>\\n\\n  <form #loginForm=\\\"ngForm\\\" name=\\\"loginForm\\\" class=\\\"login-form\\\" method=\\\"post\\\">\\n    <div class=\\\"error-msg\\\" e2e=\\\"error-msg-section\\\" [innerHtml]=\\\"states.error\\\"></div>\\n\\n    <mat-form-field>\\n      <input matInput maxlength=\\\"30\\\" [(ngModel)]=\\\"dataHolder.username\\\" [ngModelOptions]=\\\"{standalone: true}\\\"\\n        placeholder=\\\"Username\\\" e2e=\\\"username-input\\\" required />\\n    </mat-form-field>\\n    <br />\\n\\n    <mat-form-field>\\n      <input matInput type=\\\"password\\\" maxlength=\\\"30\\\" [(ngModel)]=\\\"dataHolder.password\\\" placeholder=\\\"Password\\\"\\n        [ngModelOptions]=\\\"{standalone: true}\\\" e2e=\\\"password-input\\\" required />\\n    </mat-form-field>\\n    <div class=\\\"login-buttons button-row\\\">\\n      <div class=\\\"forgot-password\\\">\\n        <a (click)=\\\"reset()\\\" e2e=\\\"forgot-password\\\">Forgot Password?</a>\\n      </div>\\n      <button mat-raised-button color=\\\"primary\\\" e2e=\\\"login-btn\\\" type=\\\"submit\\\" (click)=\\\"login()\\\">Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \".login-form mat-form-field {\\n  width: 100%; }\\n\\n.login-buttons .mat-button {\\n  padding: 0 !important; }\\n\\n.login-buttons .forgot-password {\\n  margin-top: 10px;\\n  float: left; }\\n\\n.login-buttons .mat-raised-button {\\n  float: right; }\\n\\nlayout-footer .powered-logo-container {\\n  text-align: center; }\\n\\nlayout-footer .powered-logo-container .powered-logo {\\n    margin: 0 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYXJuYW11bXR5YW4vUHJvamVjdHMvbW9kdXMvc2lwL3Nhdy13ZWIvc3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBRUkscUJBQXFCLEVBQUE7O0FBRnpCO0VBTUksZ0JBQWdCO0VBQ2hCLFdBQVcsRUFBQTs7QUFQZjtFQVdJLFlBQVksRUFBQTs7QUFJaEI7RUFDRSxrQkFBa0IsRUFBQTs7QUFEcEI7SUFJSSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luLWZvcm0gbWF0LWZvcm0tZmllbGQge1xuICB3aWR0aDogMTAwJTtcbn1cblxuLmxvZ2luLWJ1dHRvbnMge1xuICAubWF0LWJ1dHRvbiB7XG4gICAgcGFkZGluZzogMCAhaW1wb3J0YW50O1xuICB9XG5cbiAgLmZvcmdvdC1wYXNzd29yZCB7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgfVxuXG4gIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICB9XG59XG5cbmxheW91dC1mb290ZXIgLnBvd2VyZWQtbG9nby1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbiAgLnBvd2VyZWQtbG9nbyB7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gIH1cbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as isEmpty from 'lodash/isEmpty';\nimport {\n  JwtService,\n  UserService,\n  ConfigService\n} from '../../../common/services';\n\n@Component({\n  selector: 'login-form',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    public _JwtService: JwtService,\n    public _UserService: UserService,\n    public _configService: ConfigService,\n    public _router: Router,\n    public _route: ActivatedRoute\n  ) {}\n\n  public dataHolder = {\n    username: null,\n    password: null\n  };\n\n  public states = {\n    error: null\n  };\n\n  ngOnInit() {\n    this.states.error = '';\n    this._route.queryParams.subscribe(({ changePassMsg }) => {\n      if (changePassMsg) {\n        this.states.error = changePassMsg;\n      }\n    });\n  }\n\n  login() {\n    if (isEmpty(this.dataHolder.username) || isEmpty(this.dataHolder.password)) {\n      this.states.error = 'Please enter a valid Username and Password';\n      return false;\n    }\n    const params = {\n      masterLoginId: this.dataHolder.username,\n      authpwd: this.dataHolder.password\n    };\n    this._UserService.attemptAuth(params).then(data => {\n      this.states.error = '';\n      if (this._JwtService.isValid(data)) {\n        this._configService.getConfig().subscribe(\n          () => {\n            this._router.navigate(['']);\n          },\n          () => {\n            this._router.navigate(['']);\n          }\n        );\n      } else {\n        this.states.error = this._JwtService.getValidityReason(data);\n      }\n    });\n  }\n\n  reset() {\n    this._router.navigate(['login', 'preResetPwd']);\n  }\n}\n","export { PasswordChangeComponent } from './password-change.component';\n","module.exports = \"<div>\\n  <h1 e2e=\\\"Change-Password\\\">Change Password</h1>\\n  <div class=\\\"error-msg\\\" e2e=\\\"error-msg\\\" [innerHtml]=\\\"errorMsg\\\"></div>\\n  <form name=\\\"changePwdForm\\\" method=\\\"post\\\">\\n    <mat-form-field class=\\\"changePwd-formField\\\">\\n      <input matInput type=\\\"password\\\" [(ngModel)]=\\\"formData.oldPwd\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Old Password\\\" required />\\n    </mat-form-field>\\n    <br/>\\n\\n    <mat-form-field  class=\\\"changePwd-formField\\\">\\n      <input matInput type=\\\"password\\\" [(ngModel)]=\\\"formData.newPwd\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"New Password\\\" required />\\n    </mat-form-field>\\n    <br/>\\n\\n    <mat-form-field  class=\\\"changePwd-formField\\\">\\n      <input matInput type=\\\"password\\\" [(ngModel)]=\\\"formData.confNewPwd\\\" e2e=\\\"confirm-password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Confirm Password\\\" required />\\n    </mat-form-field>\\n    <br/>\\n\\n    <div class=\\\"login-buttons\\\" layout=\\\"row\\\">\\n      <button (click)=\\\"changePwd()\\\" class=\\\"changePwd-change\\\"\\n            mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!formData.oldPwd || !formData.newPwd || !formData.confNewPwd\\\" i18n>\\n        Change\\n      </button>\\n      <button mat-button class=\\\"changePwd-cancel\\\" i18n (click)=\\\"cancel()\\\">Cancel</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \".changePwd-change {\\n  float: left !important; }\\n\\n.changePwd-formField {\\n  width: 420px !important; }\\n\\n.changePwd-cancel {\\n  margin-left: 10px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYXJuYW11bXR5YW4vUHJvamVjdHMvbW9kdXMvc2lwL3Nhdy13ZWIvc3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL3Bhc3N3b3JkLWNoYW5nZS9wYXNzd29yZC1jaGFuZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0IsRUFBQTs7QUFHeEI7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSw0QkFBNEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2NvbXBvbmVudHMvcGFzc3dvcmQtY2hhbmdlL3Bhc3N3b3JkLWNoYW5nZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGFuZ2VQd2QtY2hhbmdlIHtcbiAgZmxvYXQ6IGxlZnQgIWltcG9ydGFudDtcbn1cblxuLmNoYW5nZVB3ZC1mb3JtRmllbGQge1xuICB3aWR0aDogNDIwcHggIWltcG9ydGFudDtcbn1cblxuLmNoYW5nZVB3ZC1jYW5jZWwge1xuICBtYXJnaW4tbGVmdDogMTBweCAhaW1wb3J0YW50O1xufVxuIl19 */\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtService, UserService } from '../../../common/services';\n\n@Component({\n  selector: 'password-change',\n  templateUrl: 'password-change.component.html',\n  styleUrls: ['./password-change.component.scss']\n})\nexport class PasswordChangeComponent {\n  constructor(\n    public _JwtService: JwtService,\n    public _UserService: UserService,\n    public _router: Router\n  ) {}\n\n  public formData = {\n    oldPwd: null,\n    newPwd: null,\n    confNewPwd: null\n  };\n\n  public errorMsg;\n\n  public formState: boolean;\n\n  changePwd() {\n    const token = this._JwtService.get();\n\n    if (!token) {\n      this.errorMsg = 'Please login to change password';\n      return;\n    }\n\n    this._UserService.changePwd(this).then((res: any) => {\n      if (res.valid) {\n        this._UserService.logout('logout').then(() => {\n          this._router.navigate(['login'], {\n            queryParams: { changePassMsg: res.validityMessage }\n          });\n        });\n      } else {\n        this.errorMsg = res.validityMessage;\n      }\n    });\n  }\n\n  cancel() {\n    this._router.navigate(['login']);\n  }\n}\n","export { PasswordPreResetComponent } from './password-pre-reset.component';\n","module.exports = \"<div class=\\\"reset-password-form\\\">\\n  <h1 e2e=\\\"Reset-Password\\\">Reset Password</h1>\\n  <div class=\\\"error-msg\\\" e2e=\\\"error-msg\\\" [innerHtml]=\\\"errorMsg\\\"></div>\\n  <form name=\\\"changePwdForm\\\" method=\\\"post\\\">\\n    <mat-form-field  class=\\\"changePwd-formField\\\">\\n      <input matInput maxlength=\\\"30\\\" [(ngModel)]=\\\"dataHolder.masterLoginId\\\" [ngModelOptions]=\\\"{standalone: true}\\\" placeholder=\\\"Username\\\" e2e=\\\"Username\\\" required />\\n    </mat-form-field>\\n    <br/>\\n    <div class=\\\"login-buttons\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"changePwd-change\\\" type=\\\"submit\\\" [disabled]=\\\"!dataHolder.masterLoginId\\\" (click)=\\\"resetPwd()\\\" e2e=\\\"Reset\\\">Reset</button>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"changePwd-change changePwd-cancel mat-primary\\\" (click)=\\\"login()\\\" e2e=\\\"Login\\\">Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \".reset-password-form {\\n  width: 300px; }\\n  .reset-password-form form mat-form-field {\\n    width: 100% !important; }\\n  .changePwd-cancel {\\n  margin-left: 10px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYXJuYW11bXR5YW4vUHJvamVjdHMvbW9kdXMvc2lwL3Nhdy13ZWIvc3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL3Bhc3N3b3JkLXByZS1yZXNldC9wYXNzd29yZC1wcmUtcmVzZXQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZLEVBQUE7RUFEZDtJQUlJLHNCQUFzQixFQUFBO0VBSTFCO0VBQ0UsNEJBQTRCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL3Bhc3N3b3JkLXByZS1yZXNldC9wYXNzd29yZC1wcmUtcmVzZXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVzZXQtcGFzc3dvcmQtZm9ybSB7XG4gIHdpZHRoOiAzMDBweDtcblxuICBmb3JtIG1hdC1mb3JtLWZpZWxkIHtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5jaGFuZ2VQd2QtY2FuY2VsIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHggIWltcG9ydGFudDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../common/services';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'password-pre-reset',\n  templateUrl: 'password-pre-reset.component.html',\n  styleUrls: ['./password-pre-reset.component.scss']\n})\nexport class PasswordPreResetComponent implements OnInit {\n  constructor(private _UserService: UserService, public _router: Router) {}\n\n  public dataHolder = {\n    masterLoginId: null\n  };\n\n  public errorMsg;\n\n  ngOnInit() {\n    this.errorMsg = '';\n  }\n\n  resetPwd() {\n    this._UserService.preResetPwd(this.dataHolder).then((res: any) => {\n      this.errorMsg = res.validityMessage;\n    });\n  }\n\n  login() {\n    this._router.navigate(['/#/login']);\n  }\n}\n","export { PasswordResetComponent } from './password-reset.component';\n","module.exports = \"<div>\\n  <h1 e2e=\\\"Reset-Password\\\">Reset Password</h1>\\n  <div class=\\\"error-msg\\\" e2e=\\\"error-msg\\\" [innerHtml]=\\\"errorMsg\\\"></div>\\n  <form name=\\\"resetPwdForm\\\" method=\\\"post\\\">\\n    <mat-form-field class=\\\"changePwd-formField\\\">\\n      <input matInput type=\\\"password\\\" maxlength=\\\"30\\\" [(ngModel)]=\\\"newPwd\\\"  placeholder=\\\"New Password\\\" e2e=\\\"New-Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required />\\n    </mat-form-field>\\n    <br/>\\n\\n    <mat-form-field class=\\\"changePwd-formField\\\">\\n      <input matInput type=\\\"password\\\" maxlength=\\\"30\\\" [(ngModel)]=\\\"confNewPwd\\\"  placeholder=\\\"Confirm New Password\\\" e2e=\\\"Confirm-New-Password\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required />\\n    </mat-form-field>\\n    <br/>\\n\\n\\n    <div class=\\\"login-buttons\\\" layout=\\\"row\\\" layout-align=\\\"space-between center\\\">\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"changePwd-change\\\"  e2e=\\\"Change-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!newPwd || !confNewPwd\\\"  (click)=\\\"resetPwd()\\\">Reset</button>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"changePwd-change changePwd-cancel mat-primary\\\" e2e=\\\"Cancel-btn\\\"  (click)=\\\"login()\\\">Login</button>\\n    </div>\\n  </form>\\n</div>\\n\"","module.exports = \".changePwd-cancel {\\n  margin-left: 10px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iYXJuYW11bXR5YW4vUHJvamVjdHMvbW9kdXMvc2lwL3Nhdy13ZWIvc3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL3Bhc3N3b3JkLXJlc2V0L3Bhc3N3b3JkLXJlc2V0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNEJBQTRCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9jb21wb25lbnRzL3Bhc3N3b3JkLXJlc2V0L3Bhc3N3b3JkLXJlc2V0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYW5nZVB3ZC1jYW5jZWwge1xuICBtYXJnaW4tbGVmdDogMTBweCAhaW1wb3J0YW50O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport * as isEmpty from 'lodash/isEmpty';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserService } from '../../../common/services';\n\n@Component({\n  selector: 'password-reset',\n  templateUrl: 'password-reset.component.html',\n  styleUrls: ['./password-reset.component.scss']\n})\nexport class PasswordResetComponent implements OnInit {\n  constructor(\n    public _UserService: UserService,\n    public _router: Router,\n    public _route: ActivatedRoute\n  ) {}\n\n  public errorMsg;\n  public username;\n  public confNewPwd;\n  public rhcToken;\n  public newPwd;\n\n  ngOnInit() {\n    this.errorMsg = '';\n    this._route.queryParams.subscribe(({ rhc }) => {\n      const params = { rhc };\n      this._UserService.verify(params).then((res: any) => {\n        if (res.valid) {\n          this.username = res.masterLoginID;\n          this.rhcToken = rhc;\n        } else {\n          this.errorMsg =\n            res.validityReason + '. Please regenerate the link once again';\n        }\n      });\n    });\n  }\n\n  resetPwd() {\n    if (isEmpty(this.newPwd) || isEmpty(this.confNewPwd)) {\n      this.errorMsg = 'Please enter all required fields';\n    } else {\n      this._UserService.resetPwd(this).then((res: any) => {\n        this.errorMsg = res.validityMessage;\n      });\n    }\n  }\n\n  login() {\n    this._router.navigate(['/#/login']);\n  }\n}\n","export { IsUserNotLoggedInGuard } from './not-logged-in-guard.service';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, Router } from '@angular/router';\nimport { UserService } from '../../common/services';\n\n@Injectable()\nexport class IsUserNotLoggedInGuard implements CanActivate, CanActivateChild {\n  constructor(\n    public _user: UserService,\n    public _router: Router\n    ) {}\n\n  canActivate() {\n    return this.isLoggedOut();\n  }\n\n  canActivateChild() {\n    return this.isLoggedOut();\n  }\n\n  isLoggedOut() {\n    if (this._user.isLoggedIn()) {\n      // redirect to app\n      setTimeout(() => this._router.navigate(['']));\n      return false;\n    }\n    return true;\n  }\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from '../material.module';\nimport { IsUserNotLoggedInGuard } from './guards';\n\nimport {\n  LoginComponent,\n  PasswordChangeComponent,\n  PasswordPreResetComponent,\n  PasswordResetComponent\n} from './components';\nimport { LoginPageComponent } from './page';\nimport { routes } from './routes';\n\nconst COMPONENTS = [\n  LoginPageComponent,\n  LoginComponent,\n  PasswordChangeComponent,\n  PasswordPreResetComponent,\n  PasswordResetComponent\n];\n\nconst GUARDS = [IsUserNotLoggedInGuard];\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    HttpClientModule,\n    FormsModule,\n    MaterialModule,\n    FlexLayoutModule\n  ],\n  declarations: COMPONENTS,\n  entryComponents: COMPONENTS,\n  providers: [...GUARDS],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  exports: COMPONENTS\n})\nexport class LoginModule {}\n","export { LoginPageComponent } from './login-page.component';\n","module.exports = \"<div class=\\\"login-view\\\">\\n  <div class=\\\"bg-container-wrapper\\\"\\n       fxLayout=\\\"row\\\"\\n       fxLayoutAlign=\\\"center center\\\"\\n  >\\n    <div class=\\\"bg-container\\\"\\n         fxLayout=\\\"row\\\"\\n         fxLayoutAlign=\\\"center center\\\"\\n    >\\n      <div class=\\\"login-container\\\"\\n           fxLayout=\\\"column\\\"\\n           fxLayoutAlign=\\\"space-around start\\\"\\n      >\\n        <div class=\\\"brand-logo\\\" e2e=\\\"brand-logo\\\"></div>\\n        <router-outlet></router-outlet>\\n      </div>\\n      <div class=\\\"middle-logo-container\\\"></div>\\n    </div>\\n    <div class=\\\"white-container\\\"></div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'login-page',\n  templateUrl: './login-page.component.html',\n  styles: [`\n    :host {\n      height: 100%;\n      display: block;\n    }\n  `]\n})\n\nexport class LoginPageComponent implements OnInit {\n  constructor(\n    public _title: Title\n  ) {}\n\n  ngOnInit() {\n    this._title.setTitle(`Login`);\n  }\n}\n","import { Routes } from '@angular/router';\nimport {\n  LoginComponent,\n  PasswordChangeComponent,\n  PasswordPreResetComponent,\n  PasswordResetComponent\n} from './components';\nimport { IsUserNotLoggedInGuard } from './guards';\nimport { LoginPageComponent } from './page';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: LoginPageComponent,\n    children: [\n      {\n        path: '',\n        component: LoginComponent,\n        canActivate: [IsUserNotLoggedInGuard],\n        pathMatch: 'full'\n      },\n      {\n        // name: 'changePassword',\n        path: 'changePwd',\n        component: PasswordChangeComponent\n      },\n      {\n        // name: 'preResetPassword',\n        path: 'preResetPwd',\n        canActivate: [IsUserNotLoggedInGuard],\n        component: PasswordPreResetComponent\n      },\n      {\n        // name: 'resetPassword',\n        path: 'resetPassword',\n        canActivate: [IsUserNotLoggedInGuard],\n        component: PasswordResetComponent\n      }\n    ]\n  }\n];\n"],"sourceRoot":""}