!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@turf/bbox"),require("@turf/helpers"),require("mapbox-gl"),require("rxjs"),require("rxjs/operators"),require("supercluster"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-mapbox-gl",["exports","@angular/core","@turf/bbox","@turf/helpers","mapbox-gl","rxjs","rxjs/operators","supercluster","@angular/common"],e):e(t["ngx-mapbox-gl"]={},t.ng.core,t.bbox,t.helpers,t.MapboxGl,t.rxjs,t.rxjs.operators,t.supercluster,t.ng.common)}(this,function(t,o,a,u,i,c,h,e,n){"use strict";a=a&&a.hasOwnProperty("default")?a["default"]:a,e=e&&e.hasOwnProperty("default")?e["default"]:e;var p=function(){return(p=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function r(e,s,a,u){return new(a||(a=Promise))(function(t,n){function r(t){try{i(u.next(t))}catch(e){n(e)}}function o(t){try{i(u["throw"](t))}catch(e){n(e)}}function i(e){e.done?t(e.value):new a(function(t){t(e.value)}).then(r,o)}i((u=u.apply(e,s||[])).next())})}function m(n,r){var o,i,s,t,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return t={next:e(0),"throw":e(1),"return":e(2)},"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(t){if(o)throw new TypeError("Generator is already executing.");for(;a;)try{if(o=1,i&&(s=2&t[0]?i["return"]:t[0]?i["throw"]||((s=i["return"])&&s.call(i),0):i.next)&&!(s=s.call(i,t[1])).done)return s;switch(i=0,s&&(t=[2&t[0],s.value]),t[0]){case 0:case 1:s=t;break;case 4:return a.label++,{value:t[1],done:!1};case 5:a.label++,i=t[1],t=[0];continue;case 7:t=a.ops.pop(),a.trys.pop();continue;default:if(!(s=0<(s=a.trys).length&&s[s.length-1])&&(6===t[0]||2===t[0])){a=0;continue}if(3===t[0]&&(!s||t[1]>s[0]&&t[1]<s[3])){a.label=t[1];break}if(6===t[0]&&a.label<s[1]){a.label=s[1],s=t;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(t);break}s[2]&&a.ops.pop(),a.trys.pop();continue}t=r.call(n,a)}catch(e){t=[6,e],i=0}finally{o=s=0}if(5&t[0])throw t[1];return{value:t[0]?t[1]:void 0,done:!0}}([e,t])}}}function s(t){var e="function"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}var l=new o.InjectionToken("MapboxApiKey"),d=function(){},f=function(){function t(t,e,n){this.zone=t,this.MAPBOX_API_KEY=e,this.MglResizeEventEmitter=n,this.mapCreated=new c.AsyncSubject,this.mapLoaded=new c.AsyncSubject,this.layerIdsToRemove=[],this.sourceIdsToRemove=[],this.markersToRemove=[],this.popupsToRemove=[],this.imageIdsToRemove=[],this.subscription=new c.Subscription,this.mapCreated$=this.mapCreated.asObservable(),this.mapLoaded$=this.mapLoaded.asObservable()}return t.prototype.setup=function(t){var e=this;this.zone.onStable.pipe(h.first()).subscribe(function(){e.assign(i,"accessToken",t.accessToken||e.MAPBOX_API_KEY),t.customMapboxApiUrl&&e.assign(i,"config.API_URL",t.customMapboxApiUrl),e.createMap(t.mapOptions),e.hookEvents(t.mapEvents),e.mapEvents=t.mapEvents,e.mapCreated.next(undefined),e.mapCreated.complete()})},t.prototype.destroyMap=function(){this.subscription.unsubscribe(),this.mapInstance.remove()},t.prototype.updateMinZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setMinZoom(t)})},t.prototype.updateMaxZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setMaxZoom(t)})},t.prototype.updateScrollZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.scrollZoom.enable():e.mapInstance.scrollZoom.disable()})},t.prototype.updateDragRotate=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.dragRotate.enable():e.mapInstance.dragRotate.disable()})},t.prototype.updateTouchZoomRotate=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.touchZoomRotate.enable():e.mapInstance.touchZoomRotate.disable()})},t.prototype.updateDoubleClickZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.doubleClickZoom.enable():e.mapInstance.doubleClickZoom.disable()})},t.prototype.updateKeyboard=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.keyboard.enable():e.mapInstance.keyboard.disable()})},t.prototype.updateDragPan=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.dragPan.enable():e.mapInstance.dragPan.disable()})},t.prototype.updateBoxZoom=function(t){var e=this;return this.zone.runOutsideAngular(function(){t?e.mapInstance.boxZoom.enable():e.mapInstance.boxZoom.disable()})},t.prototype.updateStyle=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setStyle(t)})},t.prototype.updateMaxBounds=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.setMaxBounds(t)})},t.prototype.changeCanvasCursor=function(t){this.mapInstance.getCanvasContainer().style.cursor=t},t.prototype.queryRenderedFeatures=function(t,e){return this.mapInstance.queryRenderedFeatures(t,e)},t.prototype.panTo=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.panTo(t,e)})},t.prototype.move=function(t,e,n,r,o,i){var s=this;return this.zone.runOutsideAngular(function(){s.mapInstance[t](p({},e,{zoom:n||s.mapInstance.getZoom(),center:r||s.mapInstance.getCenter(),bearing:o||s.mapInstance.getBearing(),pitch:i||s.mapInstance.getPitch()}))})},t.prototype.addLayer=function(n,t,e){var r=this;this.zone.runOutsideAngular(function(){Object.keys(n.layerOptions).forEach(function(t){var e=t;n.layerOptions[e]===undefined&&delete n.layerOptions[e]}),r.mapInstance.addLayer(n.layerOptions,e),t&&(n.layerEvents.click.observers.length&&r.mapInstance.on("click",n.layerOptions.id,function(t){r.zone.run(function(){n.layerEvents.click.emit(t)})}),n.layerEvents.mouseEnter.observers.length&&r.mapInstance.on("mouseenter",n.layerOptions.id,function(t){r.zone.run(function(){n.layerEvents.mouseEnter.emit(t)})}),n.layerEvents.mouseLeave.observers.length&&r.mapInstance.on("mouseleave",n.layerOptions.id,function(t){r.zone.run(function(){n.layerEvents.mouseLeave.emit(t)})}),n.layerEvents.mouseMove.observers.length&&r.mapInstance.on("mousemove",n.layerOptions.id,function(t){r.zone.run(function(){n.layerEvents.mouseMove.emit(t)})}))})},t.prototype.removeLayer=function(t){this.layerIdsToRemove.push(t)},t.prototype.addMarker=function(e){var n=this,t={offset:e.markersOptions.offset,anchor:e.markersOptions.anchor,draggable:!!e.markersOptions.draggable};0<e.markersOptions.element.childNodes.length&&(t.element=e.markersOptions.element);var r=new i.Marker(t);e.markersEvents.dragStart.observers.length&&r.on("dragstart",function(t){return n.zone.run(function(){return e.markersEvents.dragStart.emit(t.target)})}),e.markersEvents.drag.observers.length&&r.on("drag",function(t){return n.zone.run(function(){return e.markersEvents.drag.emit(t.target)})}),e.markersEvents.dragEnd.observers.length&&r.on("dragend",function(t){return n.zone.run(function(){return e.markersEvents.dragEnd.emit(t.target)})});var o=e.markersOptions.feature?e.markersOptions.feature.geometry.coordinates:e.markersOptions.lngLat;return r.setLngLat(o),this.zone.runOutsideAngular(function(){return r.addTo(n.mapInstance),r})},t.prototype.removeMarker=function(t){this.markersToRemove.push(t)},t.prototype.createPopup=function(e,n){var r=this;return this.zone.runOutsideAngular(function(){Object.keys(e.popupOptions).forEach(function(t){return e.popupOptions[t]===undefined&&delete e.popupOptions[t]});var t=new i.Popup(e.popupOptions);return t.setDOMContent(n),e.popupEvents.close.observers.length&&t.on("close",function(){r.zone.run(function(){e.popupEvents.close.emit()})}),e.popupEvents.open.observers.length&&t.on("open",function(){r.zone.run(function(){e.popupEvents.open.emit()})}),t})},t.prototype.addPopupToMap=function(t,e,n){var r=this;return void 0===n&&(n=!1),this.zone.runOutsideAngular(function(){n&&t._listeners&&delete t._listeners.open,t.setLngLat(e),t.addTo(r.mapInstance)})},t.prototype.addPopupToMarker=function(t,e){return this.zone.runOutsideAngular(function(){t.setPopup(e)})},t.prototype.removePopupFromMap=function(t,e){void 0===e&&(e=!1),e&&t._listeners&&delete t._listeners.close,this.popupsToRemove.push(t)},t.prototype.removePopupFromMarker=function(t){return this.zone.runOutsideAngular(function(){t.setPopup(undefined)})},t.prototype.addControl=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.addControl(t,e)})},t.prototype.removeControl=function(t){var e=this;return this.zone.runOutsideAngular(function(){e.mapInstance.removeControl(t)})},t.prototype.loadAndAddImage=function(i,e,s){return r(this,void 0,void 0,function(){var o=this;return m(this,function(t){return[2,this.zone.runOutsideAngular(function(){return new Promise(function(n,r){o.mapInstance.loadImage(e,function(t,e){t?r(t):(o.addImage(i,e,s),n())})})})]})})},t.prototype.addImage=function(t,e,n){var r=this;return this.zone.runOutsideAngular(function(){r.mapInstance.addImage(t,e,n)})},t.prototype.removeImage=function(t){this.imageIdsToRemove.push(t)},t.prototype.addSource=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){Object.keys(e).forEach(function(t){return e[t]===undefined&&delete e[t]}),n.mapInstance.addSource(t,e)})},t.prototype.getSource=function(t){return this.mapInstance.getSource(t)},t.prototype.removeSource=function(t){this.sourceIdsToRemove.push(t)},t.prototype.setAllLayerPaintProperty=function(e,n){var r=this;return this.zone.runOutsideAngular(function(){Object.keys(n).forEach(function(t){r.mapInstance.setPaintProperty(e,t,n[t])})})},t.prototype.setAllLayerLayoutProperty=function(e,n){var r=this;return this.zone.runOutsideAngular(function(){Object.keys(n).forEach(function(t){r.mapInstance.setLayoutProperty(e,t,n[t])})})},t.prototype.setLayerFilter=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.setFilter(t,e)})},t.prototype.setLayerBefore=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.moveLayer(t,e)})},t.prototype.setLayerZoomRange=function(t,e,n){var r=this;return this.zone.runOutsideAngular(function(){r.mapInstance.setLayerZoomRange(t,e||0,n||20)})},t.prototype.fitBounds=function(t,e){var n=this;return this.zone.runOutsideAngular(function(){n.mapInstance.fitBounds(t,e)})},t.prototype.fitScreenCoordinates=function(t,e,n){var r=this;return this.zone.runOutsideAngular(function(){r.mapInstance.fitScreenCoordinates(t[0],t[1],e,n)})},t.prototype.getCurrentViewportBbox=function(){var t=this.mapInstance.getCanvas(),e=parseInt(t.style.width,10),n=parseInt(t.style.height,10),r=this.mapInstance.unproject([0,0]).toArray(),o=this.mapInstance.unproject([e,0]).toArray(),i=this.mapInstance.unproject([e,n]).toArray(),s=this.mapInstance.unproject([0,n]).toArray();return a(u.polygon([[r,o,i,s,r]]))},t.prototype.applyChanges=function(){var t=this;this.zone.runOutsideAngular(function(){t.removeLayers(),t.removeSources(),t.removeMarkers(),t.removePopups(),t.removeImages()})},t.prototype.createMap=function(n){var t=this;o.NgZone.assertNotInAngularZone(),Object.keys(n).forEach(function(t){var e=t;n[e]===undefined&&delete n[e]}),this.mapInstance=new i.Map(n);var e=this.zone.onMicrotaskEmpty.subscribe(function(){return t.applyChanges()});if(this.MglResizeEventEmitter){var r=this.MglResizeEventEmitter.resizeEvent.subscribe(function(){t.mapInstance.resize()});this.subscription.add(r)}this.subscription.add(e)},t.prototype.removeLayers=function(){var t,e;try{for(var n=s(this.layerIdsToRemove),r=n.next();!r.done;r=n.next()){var o=r.value;this.mapInstance.removeLayer(o)}}catch(i){t={error:i}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.layerIdsToRemove=[]},t.prototype.removeSources=function(){var t,e;try{for(var n=s(this.sourceIdsToRemove),r=n.next();!r.done;r=n.next()){var o=r.value;this.mapInstance.removeSource(o)}}catch(i){t={error:i}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.sourceIdsToRemove=[]},t.prototype.removeMarkers=function(){var t,e;try{for(var n=s(this.markersToRemove),r=n.next();!r.done;r=n.next()){r.value.remove()}}catch(o){t={error:o}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.markersToRemove=[]},t.prototype.removePopups=function(){var t,e;try{for(var n=s(this.popupsToRemove),r=n.next();!r.done;r=n.next()){r.value.remove()}}catch(o){t={error:o}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.popupsToRemove=[]},t.prototype.removeImages=function(){var t,e;try{for(var n=s(this.imageIdsToRemove),r=n.next();!r.done;r=n.next()){var o=r.value;this.mapInstance.removeImage(o)}}catch(i){t={error:i}}finally{try{r&&!r.done&&(e=n["return"])&&e.call(n)}finally{if(t)throw t.error}}this.imageIdsToRemove=[]},t.prototype.hookEvents=function(e){var n=this;this.mapInstance.on("load",function(){n.mapLoaded.next(undefined),n.mapLoaded.complete(),n.zone.run(function(){return e.load.emit(n.mapInstance)})}),e.resize.observers.length&&this.mapInstance.on("resize",function(){return n.zone.run(function(){return e.resize.emit()})}),e.remove.observers.length&&this.mapInstance.on("remove",function(){return n.zone.run(function(){return e.remove.emit()})}),e.mouseDown.observers.length&&this.mapInstance.on("mousedown",function(t){return n.zone.run(function(){return e.mouseDown.emit(t)})}),e.mouseUp.observers.length&&this.mapInstance.on("mouseup",function(t){return n.zone.run(function(){return e.mouseUp.emit(t)})}),e.mouseMove.observers.length&&this.mapInstance.on("mousemove",function(t){return n.zone.run(function(){return e.mouseMove.emit(t)})}),e.click.observers.length&&this.mapInstance.on("click",function(t){return n.zone.run(function(){return e.click.emit(t)})}),e.dblClick.observers.length&&this.mapInstance.on("dblclick",function(t){return n.zone.run(function(){return e.dblClick.emit(t)})}),e.mouseEnter.observers.length&&this.mapInstance.on("mouseenter",function(t){return n.zone.run(function(){return e.mouseEnter.emit(t)})}),e.mouseLeave.observers.length&&this.mapInstance.on("mouseleave",function(t){return n.zone.run(function(){return e.mouseLeave.emit(t)})}),e.mouseOver.observers.length&&this.mapInstance.on("mouseover",function(t){return n.zone.run(function(){return e.mouseOver.emit(t)})}),e.mouseOut.observers.length&&this.mapInstance.on("mouseout",function(t){return n.zone.run(function(){return e.mouseOut.emit(t)})}),e.contextMenu.observers.length&&this.mapInstance.on("contextmenu",function(t){return n.zone.run(function(){return e.contextMenu.emit(t)})}),e.touchStart.observers.length&&this.mapInstance.on("touchstart",function(t){return n.zone.run(function(){return e.touchStart.emit(t)})}),e.touchEnd.observers.length&&this.mapInstance.on("touchend",function(t){return n.zone.run(function(){return e.touchEnd.emit(t)})}),e.touchMove.observers.length&&this.mapInstance.on("touchmove",function(t){return n.zone.run(function(){return e.touchMove.emit(t)})}),e.touchCancel.observers.length&&this.mapInstance.on("touchcancel",function(t){return n.zone.run(function(){return e.touchCancel.emit(t)})}),e.wheel.observers.length&&this.mapInstance.on("wheel",function(t){return n.zone.run(function(){return e.wheel.emit(t)})}),e.moveStart.observers.length&&this.mapInstance.on("movestart",function(t){return n.zone.run(function(){return e.moveStart.emit(t)})}),e.move.observers.length&&this.mapInstance.on("move",function(t){return n.zone.run(function(){return e.move.emit(t)})}),e.moveEnd.observers.length&&this.mapInstance.on("moveend",function(t){return n.zone.run(function(){return e.moveEnd.emit(t)})}),e.dragStart.observers.length&&this.mapInstance.on("dragstart",function(t){return n.zone.run(function(){return e.dragStart.emit(t)})}),e.drag.observers.length&&this.mapInstance.on("drag",function(t){return n.zone.run(function(){return e.drag.emit(t)})}),e.dragEnd.observers.length&&this.mapInstance.on("dragend",function(t){return n.zone.run(function(){return e.dragEnd.emit(t)})}),e.zoomStart.observers.length&&this.mapInstance.on("zoomstart",function(t){return n.zone.run(function(){return e.zoomStart.emit(t)})}),e.zoomEvt.observers.length&&this.mapInstance.on("zoom",function(t){return n.zone.run(function(){return e.zoomEvt.emit(t)})}),e.zoomEnd.observers.length&&this.mapInstance.on("zoomend",function(t){return n.zone.run(function(){return e.zoomEnd.emit(t)})}),e.rotateStart.observers.length&&this.mapInstance.on("rotatestart",function(t){return n.zone.run(function(){return e.rotateStart.emit(t)})}),e.rotate.observers.length&&this.mapInstance.on("rotate",function(t){return n.zone.run(function(){return e.rotate.emit(t)})}),e.rotateEnd.observers.length&&this.mapInstance.on("rotateend",function(t){return n.zone.run(function(){return e.rotateEnd.emit(t)})}),e.pitchStart.observers.length&&this.mapInstance.on("pitchstart",function(t){return n.zone.run(function(){return e.pitchStart.emit(t)})}),e.pitchEvt.observers.length&&this.mapInstance.on("pitch",function(t){return n.zone.run(function(){return e.pitchEvt.emit(t)})}),e.pitchEnd.observers.length&&this.mapInstance.on("pitchend",function(t){return n.zone.run(function(){return e.pitchEnd.emit(t)})}),e.boxZoomStart.observers.length&&this.mapInstance.on("boxzoomstart",function(t){return n.zone.run(function(){return e.boxZoomStart.emit(t)})}),e.boxZoomEnd.observers.length&&this.mapInstance.on("boxzoomend",function(t){return n.zone.run(function(){return e.boxZoomEnd.emit(t)})}),e.boxZoomCancel.observers.length&&this.mapInstance.on("boxzoomcancel",function(t){return n.zone.run(function(){return e.boxZoomCancel.emit(t)})}),e.webGlContextLost.observers.length&&this.mapInstance.on("webglcontextlost",function(){return n.zone.run(function(){return e.webGlContextLost.emit()})}),e.webGlContextRestored.observers.length&&this.mapInstance.on("webglcontextrestored",function(){return n.zone.run(function(){return e.webGlContextRestored.emit()})}),e.render.observers.length&&this.mapInstance.on("render",function(){return n.zone.run(function(){return e.render.emit()})}),e.error.observers.length&&this.mapInstance.on("error",function(){return n.zone.run(function(){return e.error.emit()})}),e.data.observers.length&&this.mapInstance.on("data",function(t){return n.zone.run(function(){return e.data.emit(t)})}),e.styleData.observers.length&&this.mapInstance.on("styledata",function(t){return n.zone.run(function(){return e.styleData.emit(t)})}),e.sourceData.observers.length&&this.mapInstance.on("sourcedata",function(t){return n.zone.run(function(){return e.sourceData.emit(t)})}),e.dataLoading.observers.length&&this.mapInstance.on("dataloading",function(t){return n.zone.run(function(){return e.dataLoading.emit(t)})}),e.styleDataLoading.observers.length&&this.mapInstance.on("styledataloading",function(t){return n.zone.run(function(){return e.styleDataLoading.emit(t)})}),e.sourceDataLoading.observers.length&&this.mapInstance.on("sourcedataloading",function(t){return n.zone.run(function(){return e.sourceDataLoading.emit(t)})})},t.prototype.assign=function(t,e,n){if("string"==typeof e&&(e=e.split(".")),1<e.length){var r=e.shift();this.assign(t[r]="[object Object]"===Object.prototype.toString.call(t[r])?t[r]:{},e,n)}else t[e[0]]=n},t.decorators=[{type:o.Injectable}],t.ctorParameters=function(){return[{type:o.NgZone},{type:String,decorators:[{type:o.Optional},{type:o.Inject,args:[l]}]},{type:d,decorators:[{type:o.Optional}]}]},t}(),g=function(){function t(t){this.container=t}return t.prototype.onAdd=function(){return this.container},t.prototype.onRemove=function(){return this.container.parentNode.removeChild(this.container)},t.prototype.getDefaultPosition=function(){return"top-right"},t}(),y=function(){function t(t){this.MapService=t}return t.prototype.ngAfterContentInit=function(){var t=this;this.content.nativeElement.childNodes.length&&(this.control=new g(this.content.nativeElement),this.MapService.mapCreated$.subscribe(function(){t.MapService.addControl(t.control,t.position)}))},t.prototype.ngOnDestroy=function(){this.control&&this.MapService.removeControl(this.control)},t.decorators=[{type:o.Component,args:[{selector:"mgl-control",template:'<div class="mapboxgl-ctrl" #content><ng-content></ng-content></div>',changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={position:[{type:o.Input}],content:[{type:o.ViewChild,args:["content"]}]},t}(),v=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapCreated$.subscribe(function(){if(e.ControlComponent.control)throw new Error("Another control is already set for this control");var t={};e.compact!==undefined&&(t.compact=e.compact),e.ControlComponent.control=new i.AttributionControl(t),e.MapService.addControl(e.ControlComponent.control,e.ControlComponent.position)})},t.decorators=[{type:o.Directive,args:[{selector:"[mglAttribution]"}]}],t.ctorParameters=function(){return[{type:f},{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={compact:[{type:o.Input}]},t}(),b=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");t.ControlComponent.control=new i.FullscreenControl,t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:o.Directive,args:[{selector:"[mglFullscreen]"}]}],t.ctorParameters=function(){return[{type:f},{type:y,decorators:[{type:o.Host}]}]},t}(),I=require("@mapbox/mapbox-gl-geocoder"),C=new o.InjectionToken("MapboxApiKey"),E=function(){function t(t,e,n,r){this.MapService=t,this.zone=e,this.ControlComponent=n,this.MAPBOX_GEOCODER_API_KEY=r,this.clear=new o.EventEmitter,this.loading=new o.EventEmitter,this.results=new o.EventEmitter,this.result=new o.EventEmitter,this.error=new o.EventEmitter}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var n={proximity:t.proximity,country:t.country,placeholder:t.placeholder,zoom:t.zoom,bbox:t.bbox,types:t.types,flyTo:t.flyTo,minLength:t.minLength,limit:t.limit,language:t.language,filter:t.filter,localGeocoder:t.localGeocoder,accessToken:t.accessToken||t.MAPBOX_GEOCODER_API_KEY};Object.keys(n).forEach(function(t){var e=t;n[e]===undefined&&delete n[e]}),t.geocoder=new I(n),t.hookEvents(t),t.addControl()}),this.searchInput&&this.MapService.mapLoaded$.subscribe(function(){t.geocoder.query(t.searchInput)})},t.prototype.ngOnChanges=function(t){this.geocoder&&(t.proximity&&!t.proximity.isFirstChange()&&this.geocoder.setProximity(t.proximity.currentValue),t.searchInput&&this.geocoder.query(this.searchInput))},t.prototype.addControl=function(){this.ControlComponent.control=this.geocoder,this.MapService.addControl(this.ControlComponent.control,this.ControlComponent.position)},t.prototype.hookEvents=function(e){var n=this;e.results.observers.length&&this.geocoder.on("results",function(t){return n.zone.run(function(){return e.results.emit(t)})}),e.result.observers.length&&this.geocoder.on("result",function(t){n.lastResultId!==t.result.id&&(n.lastResultId=t.result.id,n.zone.run(function(){return e.result.emit(t)}))}),e.error.observers.length&&this.geocoder.on("error",function(t){return n.zone.run(function(){return e.error.emit(t)})}),e.loading.observers.length&&this.geocoder.on("loading",function(t){return n.zone.run(function(){return e.loading.emit(t)})}),e.clear.observers.length&&this.geocoder.on("clear",function(){return n.zone.run(function(){return e.clear.emit()})})},t.decorators=[{type:o.Directive,args:[{selector:"[mglGeocoder]"}]}],t.ctorParameters=function(){return[{type:f},{type:o.NgZone},{type:y,decorators:[{type:o.Host}]},{type:String,decorators:[{type:o.Optional},{type:o.Inject,args:[C]}]}]},t.propDecorators={country:[{type:o.Input}],placeholder:[{type:o.Input}],zoom:[{type:o.Input}],bbox:[{type:o.Input}],types:[{type:o.Input}],flyTo:[{type:o.Input}],minLength:[{type:o.Input}],limit:[{type:o.Input}],language:[{type:o.Input}],accessToken:[{type:o.Input}],filter:[{type:o.Input}],localGeocoder:[{type:o.Input}],proximity:[{type:o.Input}],searchInput:[{type:o.Input}],clear:[{type:o.Output}],loading:[{type:o.Output}],results:[{type:o.Output}],result:[{type:o.Output}],error:[{type:o.Output}]},t}(),S=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngOnInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){if(t.ControlComponent.control)throw new Error("Another control is already set for this control");var n={positionOptions:t.positionOptions,fitBoundsOptions:t.fitBoundsOptions,trackUserLocation:t.trackUserLocation,showUserLocation:t.showUserLocation};Object.keys(n).forEach(function(t){var e=t;n[e]===undefined&&delete n[e]}),t.ControlComponent.control=new i.GeolocateControl(n),t.MapService.addControl(t.ControlComponent.control,t.ControlComponent.position)})},t.decorators=[{type:o.Directive,args:[{selector:"[mglGeolocate]"}]}],t.ctorParameters=function(){return[{type:f},{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={positionOptions:[{type:o.Input}],fitBoundsOptions:[{type:o.Input}],trackUserLocation:[{type:o.Input}],showUserLocation:[{type:o.Input}]},t}(),O=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapCreated$.subscribe(function(){if(e.ControlComponent.control)throw new Error("Another control is already set for this control");var t={};e.showCompass!==undefined&&(t.showCompass=e.showCompass),e.showZoom!==undefined&&(t.showZoom=e.showZoom),e.ControlComponent.control=new i.NavigationControl(t),e.MapService.addControl(e.ControlComponent.control,e.ControlComponent.position)})},t.decorators=[{type:o.Directive,args:[{selector:"[mglNavigation]"}]}],t.ctorParameters=function(){return[{type:f},{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={showCompass:[{type:o.Input}],showZoom:[{type:o.Input}]},t}(),M=function(){function t(t,e){this.MapService=t,this.ControlComponent=e}return t.prototype.ngOnChanges=function(t){t.unit&&!t.unit.isFirstChange()&&this.ControlComponent.control.setUnit(t.unit.currentValue)},t.prototype.ngOnInit=function(){var e=this;this.MapService.mapCreated$.subscribe(function(){if(e.ControlComponent.control)throw new Error("Another control is already set for this control");var t={};e.maxWidth!==undefined&&(t.maxWidth=e.maxWidth),e.unit!==undefined&&(t.unit=e.unit),e.ControlComponent.control=new i.ScaleControl(t),e.MapService.addControl(e.ControlComponent.control,e.ControlComponent.position)})},t.decorators=[{type:o.Directive,args:[{selector:"[mglScale]"}]}],t.ctorParameters=function(){return[{type:f},{type:y,decorators:[{type:o.Host}]}]},t.propDecorators={maxWidth:[{type:o.Input}],unit:[{type:o.Input}]},t}(),z=function(){function t(t){this.MapService=t,this.dragStart=new o.EventEmitter,this.drag=new o.EventEmitter,this.dragEnd=new o.EventEmitter}return t.prototype.ngOnInit=function(){if(this.feature&&this.lngLat)throw new Error("feature and lngLat input are mutually exclusive")},t.prototype.ngOnChanges=function(t){t.lngLat&&!t.lngLat.isFirstChange()&&this.markerInstance.setLngLat(this.lngLat),t.feature&&!t.feature.isFirstChange()&&this.markerInstance.setLngLat(this.feature.geometry.coordinates),t.draggable&&!t.draggable.isFirstChange()&&this.markerInstance.setDraggable(!!this.draggable)},t.prototype.ngAfterViewInit=function(){var t=this;this.MapService.mapCreated$.subscribe(function(){t.markerInstance=t.MapService.addMarker({markersOptions:{offset:t.offset,anchor:t.anchor,draggable:!!t.draggable,element:t.content.nativeElement,feature:t.feature,lngLat:t.lngLat},markersEvents:{dragStart:t.dragStart,drag:t.drag,dragEnd:t.dragEnd}})})},t.prototype.ngOnDestroy=function(){this.MapService.removeMarker(this.markerInstance),this.markerInstance=undefined},t.prototype.togglePopup=function(){this.markerInstance.togglePopup()},t.prototype.updateCoordinates=function(t){this.markerInstance.setLngLat(t)},t.decorators=[{type:o.Component,args:[{selector:"mgl-marker",template:"<div #content><ng-content></ng-content></div>",encapsulation:o.ViewEncapsulation.None,changeDetection:o.ChangeDetectionStrategy.OnPush,styles:["\n    .mapboxgl-marker {\n      line-height: 0;\n    }\n  "]}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={offset:[{type:o.Input}],anchor:[{type:o.Input}],feature:[{type:o.Input}],lngLat:[{type:o.Input}],draggable:[{type:o.Input}],dragStart:[{type:o.Output}],drag:[{type:o.Output}],dragEnd:[{type:o.Output}],content:[{type:o.ViewChild,args:["content"]}]},t}(),w=function(){function t(t){this.MapService=t,this.updateFeatureData=new c.Subject,this.sub=new c.Subscription,this.sourceAdded=!1,this.featureIdCounter=0}return t.prototype.ngOnInit=function(){var e=this;this.data||(this.data={type:"FeatureCollection",features:[]}),this.MapService.mapLoaded$.subscribe(function(){e.init();var t=c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.filter(function(){return!e.MapService.mapInstance.getSource(e.id)})).subscribe(function(){e.init()});e.sub.add(t)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&((t.maxzoom&&!t.maxzoom.isFirstChange()||t.minzoom&&!t.minzoom.isFirstChange()||t.buffer&&!t.buffer.isFirstChange()||t.tolerance&&!t.tolerance.isFirstChange()||t.cluster&&!t.cluster.isFirstChange()||t.clusterRadius&&!t.clusterRadius.isFirstChange()||t.clusterMaxZoom&&!t.clusterMaxZoom.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit()),t.data&&!t.data.isFirstChange()&&this.MapService.getSource(this.id).setData(this.data))},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.addFeature=function(t){this.data.features.push(t),this.updateFeatureData.next()},t.prototype.removeFeature=function(t){var e=this.data,n=e.features.indexOf(t);-1<n&&e.features.splice(n,1),this.updateFeatureData.next()},t.prototype.getNewFeatureId=function(){return++this.featureIdCounter},t.prototype.init=function(){var t=this;this.MapService.addSource(this.id,{type:"geojson",data:this.data,maxzoom:this.maxzoom,minzoom:this.minzoom,buffer:this.buffer,tolerance:this.tolerance,cluster:this.cluster,clusterRadius:this.clusterRadius,clusterMaxZoom:this.clusterMaxZoom});var e=this.updateFeatureData.pipe(h.debounceTime(0)).subscribe(function(){t.MapService.getSource(t.id).setData(t.data)});this.sub.add(e),this.sourceAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-geojson-source",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],data:[{type:o.Input}],minzoom:[{type:o.Input}],maxzoom:[{type:o.Input}],buffer:[{type:o.Input}],tolerance:[{type:o.Input}],cluster:[{type:o.Input}],clusterRadius:[{type:o.Input}],clusterMaxZoom:[{type:o.Input}]},t}(),x=function(){function t(t){this.GeoJSONSourceComponent=t,this.type="Feature"}return t.prototype.ngOnInit=function(){this.id||(this.id=this.GeoJSONSourceComponent.getNewFeatureId()),this.feature={type:this.type,geometry:this.geometry,properties:this.properties?this.properties:{}},this.feature.id=this.id,this.GeoJSONSourceComponent.addFeature(this.feature)},t.prototype.ngOnDestroy=function(){this.GeoJSONSourceComponent.removeFeature(this.feature)},t.prototype.updateCoordinates=function(t){this.feature.geometry.coordinates=t,this.GeoJSONSourceComponent.updateFeatureData.next()},t.decorators=[{type:o.Component,args:[{selector:"mgl-feature",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:w,decorators:[{type:o.Inject,args:[o.forwardRef(function(){return w})]}]}]},t.propDecorators={id:[{type:o.Input}],geometry:[{type:o.Input}],properties:[{type:o.Input}]},t}(),k=function(){function t(t,e,n,r){this.MapService=t,this.NgZone=e,this.FeatureComponent=n,this.MarkerComponent=r,this.dragStart=new o.EventEmitter,this.dragEnd=new o.EventEmitter,this.drag=new o.EventEmitter,this.destroyed$=new c.ReplaySubject(1)}return t.prototype.ngOnInit=function(){var t,e,n;if(this.MarkerComponent){console.warn("[ngx-mapbox-gl] mglDraggable on Marker is deprecated, use draggable input instead");var r=this.MarkerComponent.content.nativeElement;1===r.children.length&&(r=r.children[0]),t=c.fromEvent(r,"mouseenter"),e=c.fromEvent(r,"mouseleave"),n=this.MarkerComponent.updateCoordinates.bind(this.MarkerComponent)}else{if(!this.FeatureComponent||!this.layer)throw new Error("mglDraggable can only be used on Feature (with a layer as input) or Marker");if(t=this.layer.mouseEnter,e=this.layer.mouseLeave,n=this.FeatureComponent.updateCoordinates.bind(this.FeatureComponent),"Point"!==this.FeatureComponent.geometry.type)throw new Error("mglDraggable only support point feature")}this.handleDraggable(t,e,n)},t.prototype.ngOnDestroy=function(){this.destroyed$.next(undefined),this.destroyed$.complete()},t.prototype.handleDraggable=function(o,i,s){var a=this,u=!1,p=!1;this.MapService.mapCreated$.subscribe(function(){var t=c.fromEvent(a.MapService.mapInstance,"mouseup"),e=o.pipe(h.takeUntil(a.destroyed$),h.filter(function(){return!u}),h.filter(function(t){return a.filterFeature(t)}),h.tap(function(){p=!0,a.MapService.changeCanvasCursor("move"),a.MapService.updateDragPan(!1)}),h.switchMap(function(){return c.fromEvent(a.MapService.mapInstance,"mousedown").pipe(h.takeUntil(i))})),n=e.pipe(h.switchMap(function(){return c.fromEvent(a.MapService.mapInstance,"mousemove").pipe(h.takeUntil(t))})),r=e.pipe(h.switchMap(function(){return t.pipe(h.take(1))}));e.subscribe(function(t){u=!0,a.dragStart.observers.length&&a.NgZone.run(function(){return a.dragStart.emit(t)})}),n.subscribe(function(t){s([t.lngLat.lng,t.lngLat.lat]),a.drag.observers.length&&a.NgZone.run(function(){return a.drag.emit(t)})}),r.subscribe(function(t){u=!1,a.dragEnd.observers.length&&a.NgZone.run(function(){return a.dragEnd.emit(t)}),p||(a.MapService.changeCanvasCursor(""),a.MapService.updateDragPan(!0))}),i.pipe(h.takeUntil(a.destroyed$),h.tap(function(){return p=!1}),h.filter(function(){return!u})).subscribe(function(){a.MapService.changeCanvasCursor(""),a.MapService.updateDragPan(!0)})})},t.prototype.filterFeature=function(t){if(this.FeatureComponent&&this.layer&&!this.MapService.queryRenderedFeatures(t.point,{layers:[this.layer.id],filter:["all",["==","$type","Point"],["==","$id",this.FeatureComponent.id]]})[0])return!1;return!0},t.decorators=[{type:o.Directive,args:[{selector:"[mglDraggable]"}]}],t.ctorParameters=function(){return[{type:f},{type:o.NgZone},{type:x,decorators:[{type:o.Optional},{type:o.Host}]},{type:z,decorators:[{type:o.Optional},{type:o.Host}]}]},t.propDecorators={layer:[{type:o.Input,args:["mglDraggable"]}],dragStart:[{type:o.Output}],dragEnd:[{type:o.Output}],drag:[{type:o.Output}]},t}(),D=function(){function t(t,e){this.MapService=t,this.zone=e,this.error=new o.EventEmitter,this.loaded=new o.EventEmitter,this.isAdded=!1,this.isAdding=!1}return t.prototype.ngOnInit=function(){var t=this;this.sub=this.MapService.mapLoaded$.pipe(h.switchMap(function(){return c.fromEvent(t.MapService.mapInstance,"styledata").pipe(h.startWith(undefined),h.filter(function(){return!t.isAdding&&!t.MapService.mapInstance.hasImage(t.id)}))})).subscribe(function(){return t.init()})},t.prototype.ngOnChanges=function(t){(t.data&&!t.data.isFirstChange()||t.options&&!t.options.isFirstChange()||t.url&&!t.url.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.isAdded&&this.MapService.removeImage(this.id),this.sub&&this.sub.unsubscribe()},t.prototype.init=function(){return r(this,void 0,void 0,function(){var e,n=this;return m(this,function(t){switch(t.label){case 0:return this.isAdding=!0,this.data?(this.MapService.addImage(this.id,this.data,this.options),this.isAdded=!0,this.isAdding=!1,[3,5]):[3,1];case 1:if(!this.url)return[3,5];t.label=2;case 2:return t.trys.push([2,4,,5]),[4,this.MapService.loadAndAddImage(this.id,this.url,this.options)];case 3:return t.sent(),this.isAdded=!0,this.isAdding=!1,this.zone.run(function(){n.loaded.emit()}),[3,5];case 4:return e=t.sent(),this.zone.run(function(){n.error.emit(e)}),[3,5];case 5:return[2]}})})},t.decorators=[{type:o.Component,args:[{selector:"mgl-image",template:""}]}],t.ctorParameters=function(){return[{type:f},{type:o.NgZone}]},t.propDecorators={id:[{type:o.Input}],data:[{type:o.Input}],options:[{type:o.Input}],url:[{type:o.Input}],error:[{type:o.Output}],loaded:[{type:o.Output}]},t}(),P=function(){function t(t){this.MapService=t,this.click=new o.EventEmitter,this.mouseEnter=new o.EventEmitter,this.mouseLeave=new o.EventEmitter,this.mouseMove=new o.EventEmitter,this.layerAdded=!1}return t.prototype.ngOnInit=function(){var e=this;this.sub=this.MapService.mapLoaded$.pipe(h.switchMap(function(){return c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.mapTo(!1),h.filter(function(){return!e.MapService.mapInstance.getLayer(e.id)}),h.startWith(!0))})).subscribe(function(t){return e.init(t)})},t.prototype.ngOnChanges=function(t){this.layerAdded&&(t.paint&&!t.paint.isFirstChange()&&this.MapService.setAllLayerPaintProperty(this.id,t.paint.currentValue),t.layout&&!t.layout.isFirstChange()&&this.MapService.setAllLayerLayoutProperty(this.id,t.layout.currentValue),t.filter&&!t.filter.isFirstChange()&&this.MapService.setLayerFilter(this.id,t.filter.currentValue),t.before&&!t.before.isFirstChange()&&this.MapService.setLayerBefore(this.id,t.before.currentValue),(t.minzoom&&!t.minzoom.isFirstChange()||t.maxzoom&&!t.maxzoom.isFirstChange())&&this.MapService.setLayerZoomRange(this.id,this.minzoom,this.maxzoom))},t.prototype.ngOnDestroy=function(){this.layerAdded&&this.MapService.removeLayer(this.id),this.sub&&this.sub.unsubscribe()},t.prototype.init=function(t){var e={layerOptions:{id:this.id,type:this.type,source:this.source,metadata:this.metadata,"source-layer":this.sourceLayer,minzoom:this.minzoom,maxzoom:this.maxzoom,filter:this.filter,layout:this.layout,paint:this.paint},layerEvents:{click:this.click,mouseEnter:this.mouseEnter,mouseLeave:this.mouseLeave,mouseMove:this.mouseMove}};this.MapService.addLayer(e,t,this.before),this.layerAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-layer",template:""}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],source:[{type:o.Input}],type:[{type:o.Input}],metadata:[{type:o.Input}],sourceLayer:[{type:o.Input}],filter:[{type:o.Input}],layout:[{type:o.Input}],paint:[{type:o.Input}],before:[{type:o.Input}],minzoom:[{type:o.Input}],maxzoom:[{type:o.Input}],click:[{type:o.Output}],mouseEnter:[{type:o.Output}],mouseLeave:[{type:o.Output}],mouseMove:[{type:o.Output}]},t}(),A=function(){function t(t){this.MapService=t,this.movingMethod="flyTo",this.resize=new o.EventEmitter,this.remove=new o.EventEmitter,this.mouseDown=new o.EventEmitter,this.mouseUp=new o.EventEmitter,this.mouseMove=new o.EventEmitter,this.click=new o.EventEmitter,this.dblClick=new o.EventEmitter,this.mouseEnter=new o.EventEmitter,this.mouseLeave=new o.EventEmitter,this.mouseOver=new o.EventEmitter,this.mouseOut=new o.EventEmitter,this.contextMenu=new o.EventEmitter,this.touchStart=new o.EventEmitter,this.touchEnd=new o.EventEmitter,this.touchMove=new o.EventEmitter,this.touchCancel=new o.EventEmitter,this.wheel=new o.EventEmitter,this.moveStart=new o.EventEmitter,this.move=new o.EventEmitter,this.moveEnd=new o.EventEmitter,this.dragStart=new o.EventEmitter,this.drag=new o.EventEmitter,this.dragEnd=new o.EventEmitter,this.zoomStart=new o.EventEmitter,this.zoomEvt=new o.EventEmitter,this.zoomEnd=new o.EventEmitter,this.rotateStart=new o.EventEmitter,this.rotate=new o.EventEmitter,this.rotateEnd=new o.EventEmitter,this.pitchStart=new o.EventEmitter,this.pitchEvt=new o.EventEmitter,this.pitchEnd=new o.EventEmitter,this.boxZoomStart=new o.EventEmitter,this.boxZoomEnd=new o.EventEmitter,this.boxZoomCancel=new o.EventEmitter,this.webGlContextLost=new o.EventEmitter,this.webGlContextRestored=new o.EventEmitter,this.load=new o.EventEmitter,this.render=new o.EventEmitter,this.error=new o.EventEmitter,this.data=new o.EventEmitter,this.styleData=new o.EventEmitter,this.sourceData=new o.EventEmitter,this.dataLoading=new o.EventEmitter,this.styleDataLoading=new o.EventEmitter,this.sourceDataLoading=new o.EventEmitter}return Object.defineProperty(t.prototype,"mapInstance",{get:function(){return this.MapService.mapInstance},enumerable:!0,configurable:!0}),t.prototype.ngAfterViewInit=function(){this.MapService.setup({accessToken:this.accessToken,customMapboxApiUrl:this.customMapboxApiUrl,mapOptions:{container:this.mapContainer.nativeElement,minZoom:this.minZoom,maxZoom:this.maxZoom,style:this.style,hash:this.hash,interactive:this.interactive,bearingSnap:this.bearingSnap,pitchWithRotate:this.pitchWithRotate,classes:this.classes,attributionControl:this.attributionControl,logoPosition:this.logoPosition,failIfMajorPerformanceCaveat:this.failIfMajorPerformanceCaveat,preserveDrawingBuffer:this.preserveDrawingBuffer,refreshExpiredTiles:this.refreshExpiredTiles,maxBounds:this.maxBounds,scrollZoom:this.scrollZoom,boxZoom:this.boxZoom,dragRotate:this.dragRotate,dragPan:this.dragPan,keyboard:this.keyboard,doubleClickZoom:this.doubleClickZoom,touchZoomRotate:this.touchZoomRotate,trackResize:this.trackResize,center:this.center,zoom:this.zoom,bearing:this.bearing,pitch:this.pitch,renderWorldCopies:this.renderWorldCopies,maxTileCacheSize:this.maxTileCacheSize,localIdeographFontFamily:this.localIdeographFontFamily,transformRequest:this.transformRequest},mapEvents:this}),this.cursorStyle&&this.MapService.changeCanvasCursor(this.cursorStyle)},t.prototype.ngOnDestroy=function(){this.MapService.destroyMap()},t.prototype.ngOnChanges=function(e){return r(this,void 0,void 0,function(){return m(this,function(t){switch(t.label){case 0:return[4,this.MapService.mapCreated$.toPromise()];case 1:return t.sent(),e.cursorStyle&&!e.cursorStyle.isFirstChange()&&this.MapService.changeCanvasCursor(e.cursorStyle.currentValue),e.minZoom&&!e.minZoom.isFirstChange()&&this.MapService.updateMinZoom(e.minZoom.currentValue),e.maxZoom&&!e.maxZoom.isFirstChange()&&this.MapService.updateMaxZoom(e.maxZoom.currentValue),e.scrollZoom&&!e.scrollZoom.isFirstChange()&&this.MapService.updateScrollZoom(e.scrollZoom.currentValue),e.dragRotate&&!e.dragRotate.isFirstChange()&&this.MapService.updateDragRotate(e.dragRotate.currentValue),e.touchZoomRotate&&!e.touchZoomRotate.isFirstChange()&&this.MapService.updateTouchZoomRotate(e.touchZoomRotate.currentValue),e.doubleClickZoom&&!e.doubleClickZoom.isFirstChange()&&this.MapService.updateDoubleClickZoom(e.doubleClickZoom.currentValue),e.keyboard&&!e.keyboard.isFirstChange()&&this.MapService.updateKeyboard(e.keyboard.currentValue),e.dragPan&&!e.dragPan.isFirstChange()&&this.MapService.updateDragPan(e.dragPan.currentValue),e.boxZoom&&!e.boxZoom.isFirstChange()&&this.MapService.updateBoxZoom(e.boxZoom.currentValue),e.style&&!e.style.isFirstChange()&&this.MapService.updateStyle(e.style.currentValue),e.maxBounds&&!e.maxBounds.isFirstChange()&&this.MapService.updateMaxBounds(e.maxBounds.currentValue),e.fitBounds&&e.fitBounds.currentValue&&((this.center||this.zoom||this.pitch)&&e.fitBounds.isFirstChange()&&console.warn("[ngx-mapbox-gl] center / zoom / pitch inputs are being overridden by fitBounds input"),this.MapService.fitBounds(e.fitBounds.currentValue,this.fitBoundsOptions)),e.fitScreenCoordinates&&e.fitScreenCoordinates.currentValue&&((this.center||this.zoom||this.pitch||this.fitBounds)&&e.fitScreenCoordinates.isFirstChange()&&console.warn("[ngx-mapbox-gl] center / zoom / pitch / fitBounds inputs are being overridden by fitScreenCoordinates input"),this.MapService.fitScreenCoordinates(e.fitScreenCoordinates.currentValue,this.bearing?this.bearing[0]:0,this.movingOptions)),!this.centerWithPanTo||!e.center||e.center.isFirstChange()||e.zoom||e.bearing||e.pitch?(e.center&&!e.center.isFirstChange()||e.zoom&&!e.zoom.isFirstChange()||e.bearing&&!e.bearing.isFirstChange()&&!e.fitScreenCoordinates||e.pitch&&!e.pitch.isFirstChange())&&this.MapService.move(this.movingMethod,this.movingOptions,e.zoom&&this.zoom?this.zoom[0]:undefined,e.center?this.center:undefined,e.bearing&&this.bearing?this.bearing[0]:undefined,e.pitch&&this.pitch?this.pitch[0]:undefined):this.MapService.panTo(this.center,this.panToOptions),[2]}})})},t.decorators=[{type:o.Component,args:[{selector:"mgl-map",template:"<div #container></div>",providers:[f],changeDetection:o.ChangeDetectionStrategy.OnPush,styles:["\n  :host {\n    display: block;\n  }\n  div {\n    height: 100%;\n    width: 100%;\n  }\n  "]}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={accessToken:[{type:o.Input}],customMapboxApiUrl:[{type:o.Input}],hash:[{type:o.Input}],refreshExpiredTiles:[{type:o.Input}],failIfMajorPerformanceCaveat:[{type:o.Input}],classes:[{type:o.Input}],bearingSnap:[{type:o.Input}],interactive:[{type:o.Input}],pitchWithRotate:[{type:o.Input}],attributionControl:[{type:o.Input}],logoPosition:[{type:o.Input}],maxTileCacheSize:[{type:o.Input}],localIdeographFontFamily:[{type:o.Input}],preserveDrawingBuffer:[{type:o.Input}],renderWorldCopies:[{type:o.Input}],trackResize:[{type:o.Input}],transformRequest:[{type:o.Input}],minZoom:[{type:o.Input}],maxZoom:[{type:o.Input}],scrollZoom:[{type:o.Input}],dragRotate:[{type:o.Input}],touchZoomRotate:[{type:o.Input}],doubleClickZoom:[{type:o.Input}],keyboard:[{type:o.Input}],dragPan:[{type:o.Input}],boxZoom:[{type:o.Input}],style:[{type:o.Input}],center:[{type:o.Input}],maxBounds:[{type:o.Input}],zoom:[{type:o.Input}],bearing:[{type:o.Input}],pitch:[{type:o.Input}],movingMethod:[{type:o.Input}],movingOptions:[{type:o.Input}],fitBounds:[{type:o.Input}],fitBoundsOptions:[{type:o.Input}],fitScreenCoordinates:[{type:o.Input}],centerWithPanTo:[{type:o.Input}],panToOptions:[{type:o.Input}],cursorStyle:[{type:o.Input}],resize:[{type:o.Output}],remove:[{type:o.Output}],mouseDown:[{type:o.Output}],mouseUp:[{type:o.Output}],mouseMove:[{type:o.Output}],click:[{type:o.Output}],dblClick:[{type:o.Output}],mouseEnter:[{type:o.Output}],mouseLeave:[{type:o.Output}],mouseOver:[{type:o.Output}],mouseOut:[{type:o.Output}],contextMenu:[{type:o.Output}],touchStart:[{type:o.Output}],touchEnd:[{type:o.Output}],touchMove:[{type:o.Output}],touchCancel:[{type:o.Output}],wheel:[{type:o.Output}],moveStart:[{type:o.Output}],move:[{type:o.Output}],moveEnd:[{type:o.Output}],dragStart:[{type:o.Output}],drag:[{type:o.Output}],dragEnd:[{type:o.Output}],zoomStart:[{type:o.Output}],zoomEvt:[{type:o.Output}],zoomEnd:[{type:o.Output}],rotateStart:[{type:o.Output}],rotate:[{type:o.Output}],rotateEnd:[{type:o.Output}],pitchStart:[{type:o.Output}],pitchEvt:[{type:o.Output}],pitchEnd:[{type:o.Output}],boxZoomStart:[{type:o.Output}],boxZoomEnd:[{type:o.Output}],boxZoomCancel:[{type:o.Output}],webGlContextLost:[{type:o.Output}],webGlContextRestored:[{type:o.Output}],load:[{type:o.Output}],render:[{type:o.Output}],error:[{type:o.Output}],data:[{type:o.Output}],styleData:[{type:o.Output}],sourceData:[{type:o.Output}],dataLoading:[{type:o.Output}],styleDataLoading:[{type:o.Output}],sourceDataLoading:[{type:o.Output}],mapContainer:[{type:o.ViewChild,args:["container"]}]},t}(),F=function(){function t(){}return t.decorators=[{type:o.Directive,args:[{selector:"ng-template[mglPoint]"}]}],t}(),L=function(){function t(){}return t.decorators=[{type:o.Directive,args:[{selector:"ng-template[mglClusterPoint]"}]}],t}(),Z=function(){function t(t,e,n){var r=this;this.MapService=t,this.ChangeDetectorRef=e,this.zone=n,this.load=new o.EventEmitter,this.sub=new c.Subscription,this.getLeavesFn=function(n){return function(t,e){return r.supercluster.getLeaves(n.properties.cluster_id,t,e)}},this.getChildrenFn=function(t){return function(){return r.supercluster.getChildren(t.properties.cluster_id)}},this.getClusterExpansionZoomFn=function(t){return function(){return r.supercluster.getClusterExpansionZoom(t.properties.cluster_id)}}}return t.prototype.ngOnInit=function(){var n={radius:this.radius,maxZoom:this.maxZoom,minZoom:this.minZoom,extent:this.extent,nodeSize:this.nodeSize,log:this.log,reduce:this.reduce,initial:this.initial,map:this.map};Object.keys(n).forEach(function(t){var e=t;n[e]===undefined&&delete n[e]}),this.supercluster=e(n),this.supercluster.load(this.data.features),this.load.emit(this.supercluster)},t.prototype.ngOnChanges=function(t){t.data&&!t.data.isFirstChange()&&this.supercluster.load(this.data.features)},t.prototype.ngAfterContentInit=function(){var e=this;this.MapService.mapCreated$.subscribe(function(){var t=c.merge(c.fromEvent(e.MapService.mapInstance,"zoomChange"),c.fromEvent(e.MapService.mapInstance,"move")).pipe(h.startWith(undefined)).subscribe(function(){e.zone.run(function(){e.updateCluster()})});e.sub.add(t)})},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe()},t.prototype.updateCluster=function(){var t=this.MapService.getCurrentViewportBbox(),e=Math.round(this.MapService.mapInstance.getZoom());this.clusterPoints=this.supercluster.getClusters(t,e),this.ChangeDetectorRef.markForCheck()},t.decorators=[{type:o.Component,args:[{selector:"mgl-marker-cluster",template:'\n    <ng-container *ngFor="let feature of clusterPoints">\n      <ng-container *ngIf="feature.properties.cluster; else point">\n        <mgl-marker\n          [feature]="feature"\n        >\n          <ng-container *ngTemplateOutlet="clusterPointTpl; context: {\n            $implicit: feature,\n            getLeavesFn: getLeavesFn(feature),\n            getChildrenFn: getChildrenFn(feature),\n            getClusterExpansionZoomFn: getClusterExpansionZoomFn(feature)\n          }"></ng-container>\n        </mgl-marker>\n      </ng-container>\n      <ng-template #point>\n        <mgl-marker\n          [feature]="feature"\n        >\n          <ng-container *ngTemplateOutlet="pointTpl; context: { $implicit: feature }"></ng-container>\n        </mgl-marker>\n      </ng-template>\n    </ng-container>\n  ',changeDetection:o.ChangeDetectionStrategy.OnPush,preserveWhitespaces:!1}]}],t.ctorParameters=function(){return[{type:f},{type:o.ChangeDetectorRef},{type:o.NgZone}]},t.propDecorators={radius:[{type:o.Input}],maxZoom:[{type:o.Input}],minZoom:[{type:o.Input}],extent:[{type:o.Input}],nodeSize:[{type:o.Input}],log:[{type:o.Input}],reduce:[{type:o.Input}],initial:[{type:o.Input}],map:[{type:o.Input}],data:[{type:o.Input}],load:[{type:o.Output}],pointTpl:[{type:o.ContentChild,args:[F,{read:o.TemplateRef}]}],clusterPointTpl:[{type:o.ContentChild,args:[L,{read:o.TemplateRef}]}]},t}(),R=function(){function t(t){this.MapService=t,this.close=new o.EventEmitter,this.open=new o.EventEmitter}return t.prototype.ngOnInit=function(){if(this.lngLat&&this.marker||this.feature&&this.lngLat||this.feature&&this.marker)throw new Error("marker, lngLat, feature input are mutually exclusive")},t.prototype.ngOnChanges=function(t){if(t.lngLat&&!t.lngLat.isFirstChange()||t.feature&&!t.feature.isFirstChange()){var e=t.lngLat?this.lngLat:this.feature.geometry.coordinates;this.MapService.removePopupFromMap(this.popupInstance,!0);var n=this.createPopup();this.MapService.addPopupToMap(n,e,this.popupInstance.isOpen()),this.popupInstance=n}if(t.marker&&!t.marker.isFirstChange()){var r=t.marker.previousValue;r.markerInstance&&this.MapService.removePopupFromMarker(r.markerInstance),this.marker&&this.marker.markerInstance&&this.popupInstance&&this.MapService.addPopupToMarker(this.marker.markerInstance,this.popupInstance)}},t.prototype.ngAfterViewInit=function(){this.popupInstance=this.createPopup(),this.addPopup(this.popupInstance)},t.prototype.ngOnDestroy=function(){this.popupInstance&&(this.lngLat?this.MapService.removePopupFromMap(this.popupInstance):this.marker&&this.marker.markerInstance&&this.MapService.removePopupFromMarker(this.marker.markerInstance)),this.popupInstance=undefined},t.prototype.createPopup=function(){return this.MapService.createPopup({popupOptions:{closeButton:this.closeButton,closeOnClick:this.closeOnClick,anchor:this.anchor,offset:this.offset},popupEvents:{open:this.open,close:this.close}},this.content.nativeElement)},t.prototype.addPopup=function(t){var e=this;this.MapService.mapCreated$.subscribe(function(){if(e.lngLat||e.feature)e.MapService.addPopupToMap(t,e.lngLat?e.lngLat:e.feature.geometry.coordinates);else{if(!e.marker||!e.marker.markerInstance)throw new Error("mgl-popup need either lngLat/marker/feature to be set");e.MapService.addPopupToMarker(e.marker.markerInstance,t)}})},t.decorators=[{type:o.Component,args:[{selector:"mgl-popup",template:"<div #content><ng-content></ng-content></div>",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={closeButton:[{type:o.Input}],closeOnClick:[{type:o.Input}],anchor:[{type:o.Input}],offset:[{type:o.Input}],feature:[{type:o.Input}],lngLat:[{type:o.Input}],marker:[{type:o.Input}],close:[{type:o.Output}],open:[{type:o.Output}],content:[{type:o.ViewChild,args:["content"]}]},t}(),T=function(){function t(t){this.MapService=t,this.sourceAdded=!1,this.sub=new c.Subscription}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapLoaded$.subscribe(function(){e.init();var t=c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.filter(function(){return!e.MapService.mapInstance.getSource(e.id)})).subscribe(function(){e.init()});e.sub.add(t)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.coordinates&&!t.coordinates.isFirstChange()||t.canvas&&!t.canvas.isFirstChange()||t.animate&&!t.animate.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){var t={type:"canvas",coordinates:this.coordinates,canvas:this.canvas,animate:this.animate};this.MapService.addSource(this.id,t),this.sourceAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-canvas-source",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],coordinates:[{type:o.Input}],canvas:[{type:o.Input}],animate:[{type:o.Input}]},t}(),j=function(){function t(t){this.MapService=t,this.sourceAdded=!1,this.sub=new c.Subscription}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapLoaded$.subscribe(function(){e.init();var t=c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.filter(function(){return!e.MapService.mapInstance.getSource(e.id)})).subscribe(function(){e.init()});e.sub.add(t)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.url&&!t.url.isFirstChange()||t.coordinates&&!t.coordinates.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){this.MapService.addSource(this.id,{type:"image",url:this.url,coordinates:this.coordinates}),this.sourceAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-image-source",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],url:[{type:o.Input}],coordinates:[{type:o.Input}]},t}(),B=function(){function t(t){this.MapService=t,this.type="raster",this.sourceAdded=!1,this.sub=new c.Subscription}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapLoaded$.subscribe(function(){e.init();var t=c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.filter(function(){return!e.MapService.mapInstance.getSource(e.id)})).subscribe(function(){e.init()});e.sub.add(t)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.url&&!t.url.isFirstChange()||t.tiles&&!t.tiles.isFirstChange()||t.bounds&&!t.bounds.isFirstChange()||t.minzoom&&!t.minzoom.isFirstChange()||t.maxzoom&&!t.maxzoom.isFirstChange()||t.tileSize&&!t.tileSize.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){var t={type:this.type,url:this.url,tiles:this.tiles,bounds:this.bounds,minzoom:this.minzoom,maxzoom:this.maxzoom,tileSize:this.tileSize};this.MapService.addSource(this.id,t),this.sourceAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-raster-source",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],url:[{type:o.Input}],tiles:[{type:o.Input}],bounds:[{type:o.Input}],minzoom:[{type:o.Input}],maxzoom:[{type:o.Input}],tileSize:[{type:o.Input}]},t}(),V=function(){function t(t){this.MapService=t,this.type="vector",this.sourceAdded=!1,this.sub=new c.Subscription}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapLoaded$.subscribe(function(){e.init();var t=c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.filter(function(){return!e.MapService.mapInstance.getSource(e.id)})).subscribe(function(){e.init()});e.sub.add(t)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.url&&!t.url.isFirstChange()||t.tiles&&!t.tiles.isFirstChange()||t.minzoom&&!t.minzoom.isFirstChange()||t.maxzoom&&!t.maxzoom.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){this.MapService.addSource(this.id,{type:this.type,url:this.url,tiles:this.tiles,minzoom:this.minzoom,maxzoom:this.maxzoom}),this.sourceAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-vector-source",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],url:[{type:o.Input}],tiles:[{type:o.Input}],minzoom:[{type:o.Input}],maxzoom:[{type:o.Input}]},t}(),$=function(){function t(t){this.MapService=t,this.sourceAdded=!1,this.sub=new c.Subscription}return t.prototype.ngOnInit=function(){var e=this;this.MapService.mapLoaded$.subscribe(function(){e.init();var t=c.fromEvent(e.MapService.mapInstance,"styledata").pipe(h.filter(function(){return!e.MapService.mapInstance.getSource(e.id)})).subscribe(function(){e.init()});e.sub.add(t)})},t.prototype.ngOnChanges=function(t){this.sourceAdded&&(t.urls&&!t.urls.isFirstChange()||t.coordinates&&!t.coordinates.isFirstChange())&&(this.ngOnDestroy(),this.ngOnInit())},t.prototype.ngOnDestroy=function(){this.sub.unsubscribe(),this.sourceAdded&&this.MapService.removeSource(this.id)},t.prototype.init=function(){this.MapService.addSource(this.id,{type:"video",urls:this.urls,coordinates:this.coordinates}),this.sourceAdded=!0},t.decorators=[{type:o.Component,args:[{selector:"mgl-video-source",template:"",changeDetection:o.ChangeDetectionStrategy.OnPush}]}],t.ctorParameters=function(){return[{type:f}]},t.propDecorators={id:[{type:o.Input}],urls:[{type:o.Input}],coordinates:[{type:o.Input}]},t}(),N=function(){function e(){}return e.withConfig=function(t){return{ngModule:e,providers:[{provide:l,useValue:t.accessToken},{provide:C,useValue:t.geocoderAccessToken||t.accessToken}]}},e.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule],declarations:[A,P,k,D,V,w,B,j,$,T,x,z,R,y,b,O,E,S,v,M,F,L,Z],exports:[A,P,k,D,V,w,B,j,$,T,x,z,R,y,b,O,E,S,v,M,F,L,Z]}]}],e}();t.NgxMapboxGLModule=N,t.CustomControl=g,t.ControlComponent=y,t.MAPBOX_API_KEY=l,t.MglResizeEventEmitter=d,t.MapService=f,t.MapComponent=A,t.ɵr=v,t.ɵm=b,t.ɵp=E,t.ɵo=C,t.ɵq=S,t.ɵn=O,t.ɵs=M,t.ɵb=k,t.ɵf=D,t.ɵa=P,t.ɵu=L,t.ɵv=Z,t.ɵt=F,t.ɵe=z,t.ɵl=R,t.ɵk=T,t.ɵc=x,t.ɵd=w,t.ɵi=j,t.ɵh=B,t.ɵg=V,t.ɵj=$,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-mapbox-gl.umd.min.js.map