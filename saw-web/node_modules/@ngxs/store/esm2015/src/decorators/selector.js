/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { createSelector } from '../utils/selector-utils';
/**
 * Decorator for memoizing a state selector.
 * @param {?=} selectors
 * @return {?}
 */
export function Selector(selectors) {
    return (target, key, descriptor) => {
        if (descriptor.value !== null) {
            /** @type {?} */
            const originalFn = descriptor.value;
            /** @type {?} */
            const memoizedFn = createSelector(selectors, originalFn, { containerClass: target, selectorName: key });
            return {
                configurable: true,
                /**
                 * @return {?}
                 */
                get() {
                    return memoizedFn;
                }
            };
        }
        else {
            throw new Error('Selectors only work on methods');
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4cy9zdG9yZS8iLCJzb3VyY2VzIjpbInNyYy9kZWNvcmF0b3JzL3NlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7OztBQUt6RCxNQUFNLFVBQVUsUUFBUSxDQUFDLFNBQWlCO0lBQ3hDLE9BQU8sQ0FBQyxNQUFXLEVBQUUsR0FBVyxFQUFFLFVBQThCLEVBQUUsRUFBRTtRQUNsRSxJQUFJLFVBQVUsQ0FBQyxLQUFLLEtBQUssSUFBSSxFQUFFOztrQkFDdkIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxLQUFLOztrQkFFN0IsVUFBVSxHQUFHLGNBQWMsQ0FDL0IsU0FBUyxFQUNULFVBQVUsRUFDVixFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLEdBQUcsRUFBRSxDQUM5QztZQUVELE9BQU87Z0JBQ0wsWUFBWSxFQUFFLElBQUk7Ozs7Z0JBQ2xCLEdBQUc7b0JBQ0QsT0FBTyxVQUFVLENBQUM7Z0JBQ3BCLENBQUM7YUFDRixDQUFDO1NBQ0g7YUFBTTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztTQUNuRDtJQUNILENBQUMsQ0FBQztBQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciB9IGZyb20gJy4uL3V0aWxzL3NlbGVjdG9yLXV0aWxzJztcclxuXHJcbi8qKlxyXG4gKiBEZWNvcmF0b3IgZm9yIG1lbW9pemluZyBhIHN0YXRlIHNlbGVjdG9yLlxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIFNlbGVjdG9yKHNlbGVjdG9ycz86IGFueVtdKSB7XHJcbiAgcmV0dXJuICh0YXJnZXQ6IGFueSwga2V5OiBzdHJpbmcsIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvcikgPT4ge1xyXG4gICAgaWYgKGRlc2NyaXB0b3IudmFsdWUgIT09IG51bGwpIHtcclxuICAgICAgY29uc3Qgb3JpZ2luYWxGbiA9IGRlc2NyaXB0b3IudmFsdWU7XHJcblxyXG4gICAgICBjb25zdCBtZW1vaXplZEZuID0gY3JlYXRlU2VsZWN0b3IoXHJcbiAgICAgICAgc2VsZWN0b3JzLFxyXG4gICAgICAgIG9yaWdpbmFsRm4sXHJcbiAgICAgICAgeyBjb250YWluZXJDbGFzczogdGFyZ2V0LCBzZWxlY3Rvck5hbWU6IGtleSB9XHJcbiAgICAgICk7XHJcblxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcclxuICAgICAgICBnZXQoKSB7XHJcbiAgICAgICAgICByZXR1cm4gbWVtb2l6ZWRGbjtcclxuICAgICAgICB9XHJcbiAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1NlbGVjdG9ycyBvbmx5IHdvcmsgb24gbWV0aG9kcycpO1xyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuIl19