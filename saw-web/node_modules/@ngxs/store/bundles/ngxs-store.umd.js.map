{"version":3,"file":"ngxs-store.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@ngxs/store/src/symbols.ts","ng://@ngxs/store/src/internal/internals.ts","ng://@ngxs/store/src/utils/utils.ts","ng://@ngxs/store/src/operators/of-action.ts","ng://@ngxs/store/src/operators/zone.ts","ng://@ngxs/store/src/actions-stream.ts","ng://@ngxs/store/src/utils/compose.ts","ng://@ngxs/store/src/internal/state-stream.ts","ng://@ngxs/store/src/plugin-manager.ts","ng://@ngxs/store/src/internal/dispatcher.ts","ng://@ngxs/store/src/utils/freeze.ts","ng://@ngxs/store/src/internal/state-operations.ts","ng://@ngxs/store/src/internal/state-context-factory.ts","ng://@ngxs/store/src/internal/state-factory.ts","ng://@ngxs/store/src/utils/memoize.ts","ng://@ngxs/store/src/utils/selector-utils.ts","ng://@ngxs/store/src/store.ts","ng://@ngxs/store/src/decorators/select.ts","ng://@ngxs/store/src/actions/actions.ts","ng://@ngxs/store/src/module.ts","ng://@ngxs/store/src/decorators/action.ts","ng://@ngxs/store/src/decorators/state.ts","ng://@ngxs/store/src/decorators/selector.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport const ROOT_STATE_TOKEN = new InjectionToken<any>('ROOT_STATE_TOKEN');\r\nexport const FEATURE_STATE_TOKEN = new InjectionToken<any>('FEATURE_STATE_TOKEN');\r\nexport const META_KEY = 'NGXS_META';\r\nexport const SELECTOR_META_KEY = 'NGXS_SELECTOR_META';\r\n\r\nexport const NGXS_PLUGINS = new InjectionToken('NGXS_PLUGINS');\r\nexport type NgxsPluginConstructor = new (...args: any[]) => NgxsPlugin;\r\nexport type NgxsPluginFn = (state: any, mutation: any, next: NgxsNextPluginFn) => any;\r\n\r\n/**\r\n * The NGXS config settings.\r\n */\r\nexport class NgxsConfig {\r\n  /**\r\n   * Run in development mode. This will add additional debugging features:\r\n   * - Object.freeze on the state and actions to guarantee immutability\r\n   * (default: false)\r\n   */\r\n  developmentMode: boolean;\r\n  compatibility: {\r\n    /**\r\n     * Support a strict Content Security Policy.\r\n     * This will cirumvent some optimisations that violate a strict CSP through the use of `new Function(...)`.\r\n     * (default: false)\r\n     */\r\n    strictContentSecurityPolicy: boolean;\r\n  };\r\n\r\n  constructor() {\r\n    this.compatibility = {\r\n      strictContentSecurityPolicy: false\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * State context provided to the actions in the state.\r\n */\r\nexport interface StateContext<T> {\r\n  /**\r\n   * Get the current state.\r\n   */\r\n  getState(): T;\r\n\r\n  /**\r\n   * Reset the state to a new value.\r\n   */\r\n  setState(val: T);\r\n\r\n  /**\r\n   * Patch the existing state with the provided value.\r\n   */\r\n  patchState(val: Partial<T>);\r\n\r\n  /**\r\n   * Dispatch a new action and return the dispatched observable.\r\n   */\r\n  dispatch(actions: any | any[]): Observable<void>;\r\n}\r\n\r\nexport type NgxsNextPluginFn = (state: any, mutation: any) => any;\r\n\r\n/**\r\n * Plugin interface\r\n */\r\nexport interface NgxsPlugin {\r\n  /**\r\n   * Handle the state/action before its submitted to the state handlers.\r\n   */\r\n  handle(state: any, action: any, next: NgxsNextPluginFn): any;\r\n}\r\n\r\n/**\r\n * Options that can be provided to the store.\r\n */\r\nexport interface StoreOptions<T> {\r\n  /**\r\n   * Name of the state. Required.\r\n   */\r\n  name: string;\r\n\r\n  /**\r\n   * Default values for the state. If not provided, uses empty object.\r\n   */\r\n  defaults?: T;\r\n\r\n  /**\r\n   * Sub states for the given state.\r\n   */\r\n  children?: any[];\r\n}\r\n\r\n/**\r\n * Actions that can be provided in a action decorator.\r\n */\r\nexport interface ActionOptions {\r\n  /**\r\n   * Cancel the previous uncompleted observable(s).\r\n   */\r\n  cancelUncompleted?: boolean;\r\n}\r\n\r\n/**\r\n * On init interface\r\n */\r\nexport interface NgxsOnInit {\r\n  ngxsOnInit(ctx?: StateContext<any>): void | any;\r\n}\r\n\r\nexport type NgxsLifeCycle = Partial<NgxsOnInit>;\r\n","import { META_KEY, ActionOptions, SELECTOR_META_KEY, NgxsConfig } from '../symbols';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface ObjectKeyMap<T> {\r\n  [key: string]: T;\r\n}\r\n\r\nexport interface StateClass {\r\n  [META_KEY]?: MetaDataModel;\r\n}\r\n\r\nexport type StateKeyGraph = ObjectKeyMap<string[]>;\r\n\r\nexport interface ActionHandlerMetaData {\r\n  fn: string;\r\n  options: ActionOptions;\r\n  type: string;\r\n}\r\n\r\nexport interface StateOperations<T> {\r\n  getState(): T;\r\n  setState(val: T);\r\n  dispatch(actions: any | any[]): Observable<void>;\r\n}\r\n\r\nexport interface MetaDataModel {\r\n  name: string;\r\n  actions: ObjectKeyMap<ActionHandlerMetaData[]>;\r\n  defaults: any;\r\n  path: string;\r\n  selectFromAppState: SelectFromState;\r\n  children: StateClass[];\r\n  instance: any;\r\n}\r\n\r\nexport type SelectFromState = (state: any) => any;\r\n\r\nexport interface SelectorMetaDataModel {\r\n  selectFromAppState: SelectFromState;\r\n  originalFn: Function;\r\n  containerClass: any;\r\n  selectorName: string;\r\n}\r\n\r\nexport interface MappedStore {\r\n  name: string;\r\n  actions: ObjectKeyMap<ActionHandlerMetaData[]>;\r\n  defaults: any;\r\n  instance: any;\r\n  depth: string;\r\n}\r\n\r\n/**\r\n * Ensures metadata is attached to the class and returns it.\r\n *\r\n * @ignore\r\n */\r\nexport function ensureStoreMetadata(target): MetaDataModel {\r\n  if (!target.hasOwnProperty(META_KEY)) {\r\n    const defaultMetadata: MetaDataModel = {\r\n      name: null,\r\n      actions: {},\r\n      defaults: {},\r\n      path: null,\r\n      selectFromAppState: null,\r\n      children: [],\r\n      instance: null\r\n    };\r\n\r\n    Object.defineProperty(target, META_KEY, { value: defaultMetadata });\r\n  }\r\n  return getStoreMetadata(target);\r\n}\r\n\r\n/**\r\n * Get the metadata attached to the class if it exists.\r\n *\r\n * @ignore\r\n */\r\nexport function getStoreMetadata(target): MetaDataModel {\r\n  return target[META_KEY];\r\n}\r\n\r\n/**\r\n * Ensures metadata is attached to the selector and returns it.\r\n *\r\n * @ignore\r\n */\r\nexport function ensureSelectorMetadata(target): SelectorMetaDataModel {\r\n  if (!target.hasOwnProperty(SELECTOR_META_KEY)) {\r\n    const defaultMetadata: SelectorMetaDataModel = {\r\n      selectFromAppState: null,\r\n      originalFn: null,\r\n      containerClass: null,\r\n      selectorName: null\r\n    };\r\n\r\n    Object.defineProperty(target, SELECTOR_META_KEY, { value: defaultMetadata });\r\n  }\r\n\r\n  return getSelectorMetadata(target);\r\n}\r\n\r\n/**\r\n * Get the metadata attached to the selector if it exists.\r\n *\r\n * @ignore\r\n */\r\nexport function getSelectorMetadata(target): SelectorMetaDataModel {\r\n  return target[SELECTOR_META_KEY];\r\n}\r\n\r\n/**\r\n * Get a deeply nested value. Example:\r\n *\r\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\r\n *\r\n * Note: This is not as fast as the `fastPropGetter` but is strict Content Security Policy compliant.\r\n * See perf hit: https://jsperf.com/fast-value-getter-given-path/1\r\n *\r\n * @ignore\r\n */\r\nfunction compliantPropGetter(paths: string[]): (x: any) => any {\r\n  const copyOfPaths = [...paths];\r\n  return obj => copyOfPaths.reduce((acc: any, part: string) => acc && acc[part], obj);\r\n}\r\n\r\n/**\r\n * The generated function is faster than:\r\n * - pluck (Observable operator)\r\n * - memoize\r\n *\r\n * @ignore\r\n */\r\nfunction fastPropGetter(paths: string[]): (x: any) => any {\r\n  const segments = paths;\r\n  let seg = 'store.' + segments[0];\r\n  let i = 0;\r\n  const l = segments.length;\r\n\r\n  let expr = seg;\r\n  while (++i < l) {\r\n    expr = expr + ' && ' + (seg = seg + '.' + segments[i]);\r\n  }\r\n\r\n  const fn = new Function('store', 'return ' + expr + ';');\r\n\r\n  return <(x: any) => any>fn;\r\n}\r\n\r\n/**\r\n * Get a deeply nested value. Example:\r\n *\r\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\r\n *\r\n * @ignore\r\n */\r\nexport function propGetter(paths: string[], config: NgxsConfig) {\r\n  if (config && config.compatibility && config.compatibility.strictContentSecurityPolicy) {\r\n    return compliantPropGetter(paths);\r\n  } else {\r\n    return fastPropGetter(paths);\r\n  }\r\n}\r\n\r\n/**\r\n * Given an array of states, it will return a object graph. Example:\r\n *    const states = [\r\n *      Cart,\r\n *      CartSaved,\r\n *      CartSavedItems\r\n *    ]\r\n *\r\n * would return:\r\n *\r\n *  const graph = {\r\n *    cart: ['saved'],\r\n *    saved: ['items'],\r\n *    items: []\r\n *  };\r\n *\r\n * @ignore\r\n */\r\nexport function buildGraph(stateClasses: StateClass[]): StateKeyGraph {\r\n  const findName = (stateClass: StateClass) => {\r\n    const meta = stateClasses.find(g => g === stateClass);\r\n    if (!meta) {\r\n      throw new Error(`Child state not found: ${stateClass}`);\r\n    }\r\n\r\n    if (!meta[META_KEY]) {\r\n      throw new Error('States must be decorated with @State() decorator');\r\n    }\r\n\r\n    return meta[META_KEY].name;\r\n  };\r\n\r\n  return stateClasses.reduce<StateKeyGraph>((result: StateKeyGraph, stateClass: StateClass) => {\r\n    if (!stateClass[META_KEY]) {\r\n      throw new Error('States must be decorated with @State() decorator');\r\n    }\r\n\r\n    const { name, children } = stateClass[META_KEY];\r\n    result[name] = (children || []).map(findName);\r\n    return result;\r\n  }, {});\r\n}\r\n\r\n/**\r\n * Given a states array, returns object graph\r\n * returning the name and state metadata. Example:\r\n *\r\n *  const graph = {\r\n *    cart: { metadata }\r\n *  };\r\n *\r\n * @ignore\r\n */\r\nexport function nameToState(states: StateClass[]): ObjectKeyMap<StateClass> {\r\n  return states.reduce<ObjectKeyMap<StateClass>>((result: ObjectKeyMap<StateClass>, stateClass: StateClass) => {\r\n    if (!stateClass[META_KEY]) {\r\n      throw new Error('States must be decorated with @State() decorator');\r\n    }\r\n\r\n    const meta = stateClass[META_KEY];\r\n    result[meta.name] = stateClass;\r\n    return result;\r\n  }, {});\r\n}\r\n\r\n/**\r\n * Given a object relationship graph will return the full path\r\n * for the child items. Example:\r\n *\r\n *  const graph = {\r\n *    cart: ['saved'],\r\n *    saved: ['items'],\r\n *    items: []\r\n *  };\r\n *\r\n * would return:\r\n *\r\n *  const r = {\r\n *    cart: 'cart',\r\n *    saved: 'cart.saved',\r\n *    items: 'cart.saved.items'\r\n *  };\r\n *\r\n * @ignore\r\n */\r\nexport function findFullParentPath(obj: StateKeyGraph, newObj: ObjectKeyMap<string> = {}): ObjectKeyMap<string> {\r\n  const visit = (child: StateKeyGraph, keyToFind: string): string => {\r\n    for (const key in child) {\r\n      if (child.hasOwnProperty(key) && child[key].indexOf(keyToFind) >= 0) {\r\n        const parent = visit(child, key);\r\n        return parent !== null ? `${parent}.${key}` : key;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      const parent = visit(obj, key);\r\n      newObj[key] = parent ? `${parent}.${key}` : key;\r\n    }\r\n  }\r\n\r\n  return newObj;\r\n}\r\n\r\n/**\r\n * Given a object graph, it will return the items topologically sorted Example:\r\n *\r\n *  const graph = {\r\n *    cart: ['saved'],\r\n *    saved: ['items'],\r\n *    items: []\r\n *  };\r\n *\r\n * would return:\r\n *\r\n *  const results = [\r\n *    'items',\r\n *    'saved',\r\n *    'cart'\r\n *  ];\r\n *\r\n * @ignore\r\n */\r\nexport function topologicalSort(graph: StateKeyGraph): string[] {\r\n  const sorted: string[] = [];\r\n  const visited: ObjectKeyMap<boolean> = {};\r\n\r\n  const visit = (name: string, ancestors: string[] = []) => {\r\n    if (!Array.isArray(ancestors)) {\r\n      ancestors = [];\r\n    }\r\n\r\n    ancestors.push(name);\r\n    visited[name] = true;\r\n\r\n    graph[name].forEach((dep: string) => {\r\n      if (ancestors.indexOf(dep) >= 0) {\r\n        throw new Error(`Circular dependency '${dep}' is required by '${name}': ${ancestors.join(' -> ')}`);\r\n      }\r\n\r\n      if (visited[dep]) {\r\n        return;\r\n      }\r\n\r\n      visit(dep, ancestors.slice(0));\r\n    });\r\n\r\n    if (sorted.indexOf(name) < 0) {\r\n      sorted.push(name);\r\n    }\r\n  };\r\n\r\n  Object.keys(graph).forEach(k => visit(k));\r\n\r\n  return sorted.reverse();\r\n}\r\n\r\n/**\r\n * Returns if the parameter is a object or not.\r\n *\r\n * @ignore\r\n */\r\nexport function isObject(obj) {\r\n  return (typeof obj === 'object' && obj !== null) || typeof obj === 'function';\r\n}\r\n","/**\r\n * Returns the type from an action instance.\r\n * @ignore\r\n */\r\nexport function getActionTypeFromInstance(action: any): string {\r\n  if (action.constructor && action.constructor.type) {\r\n    return action.constructor.type;\r\n  }\r\n\r\n  return action.type;\r\n}\r\n\r\n/**\r\n * Matches a action\r\n * @ignore\r\n */\r\nexport function actionMatcher(action1: any) {\r\n  const type1 = getActionTypeFromInstance(action1);\r\n\r\n  return function(action2: any) {\r\n    return type1 === getActionTypeFromInstance(action2);\r\n  };\r\n}\r\n\r\n/**\r\n * Set a deeply nested value. Example:\r\n *\r\n *   setValue({ foo: { bar: { eat: false } } },\r\n *      'foo.bar.eat', true) //=> { foo: { bar: { eat: true } } }\r\n *\r\n * While it traverses it also creates new objects from top down.\r\n *\r\n * @ignore\r\n */\r\nexport const setValue = (obj: any, prop: string, val: any) => {\r\n  obj = { ...obj };\r\n\r\n  const split = prop.split('.');\r\n  const lastIndex = split.length - 1;\r\n\r\n  split.reduce((acc, part, index) => {\r\n    if (index === lastIndex) {\r\n      acc[part] = val;\r\n    } else {\r\n      acc[part] = Array.isArray(acc[part]) ? [...acc[part]] : { ...acc[part] };\r\n    }\r\n\r\n    return acc && acc[part];\r\n  }, obj);\r\n\r\n  return obj;\r\n};\r\n\r\n/**\r\n * Get a deeply nested value. Example:\r\n *\r\n *    getValue({ foo: bar: [] }, 'foo.bar') //=> []\r\n *\r\n * @ignore\r\n */\r\nexport const getValue = (obj: any, prop: string) =>\r\n  prop.split('.').reduce((acc: any, part: string) => acc && acc[part], obj);\r\n","import { OperatorFunction, Observable } from 'rxjs';\r\nimport { map, filter } from 'rxjs/operators';\r\nimport { getActionTypeFromInstance } from '../utils/utils';\r\nimport { ActionContext, ActionStatus } from '../actions-stream';\r\n\r\nexport function ofAction<T>(allowedType): OperatorFunction<any, T>;\r\nexport function ofAction<T>(...allowedTypes): OperatorFunction<any, T>;\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will grab actions that have just been dispatched as well as actions that have completed\r\n */\r\nexport function ofAction(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been dispatched\r\n */\r\nexport function ofActionDispatched(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, ActionStatus.Dispatched);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been successfully completed\r\n */\r\nexport function ofActionSuccessful(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, ActionStatus.Successful);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just been canceled\r\n */\r\nexport function ofActionCanceled(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, ActionStatus.Canceled);\r\n}\r\n\r\n/**\r\n * RxJS operator for selecting out specific actions.\r\n *\r\n * This will ONLY grab actions that have just thrown an error\r\n */\r\nexport function ofActionErrored(...allowedTypes: any[]) {\r\n  return ofActionOperator(allowedTypes, ActionStatus.Errored);\r\n}\r\n\r\nfunction ofActionOperator(allowedTypes: any[], status?: ActionStatus) {\r\n  const allowedMap = createAllowedMap(allowedTypes);\r\n  return function(o: Observable<any>) {\r\n    return o.pipe(\r\n      filterStatus(allowedMap, status),\r\n      mapAction()\r\n    );\r\n  };\r\n}\r\n\r\nfunction filterStatus(allowedTypes: { [key: string]: boolean }, status?: ActionStatus) {\r\n  return filter((ctx: ActionContext) => {\r\n    const actionType = getActionTypeFromInstance(ctx.action);\r\n    const type = allowedTypes[actionType];\r\n    return status ? type && ctx.status === status : type;\r\n  });\r\n}\r\n\r\nfunction mapAction() {\r\n  return map((ctx: ActionContext) => ctx.action);\r\n}\r\n\r\nfunction createAllowedMap(types: any[]): { [key: string]: boolean } {\r\n  return types.reduce((acc: any, klass: any) => {\r\n    acc[getActionTypeFromInstance(klass)] = true;\r\n    return acc;\r\n  }, {});\r\n}\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { NgZone } from '@angular/core';\r\n\r\n/**\r\n * Operator to run the `subscribe` in a Angular zone.\r\n */\r\nexport function enterZone<T>(zone: NgZone) {\r\n  return (source: Observable<T>) => {\r\n    return new Observable((sink: Observer<T>) => {\r\n      return source.subscribe({\r\n        next(x) {\r\n          zone.run(() => sink.next(x));\r\n        },\r\n        error(e) {\r\n          zone.run(() => sink.error(e));\r\n        },\r\n        complete() {\r\n          zone.run(() => sink.complete());\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\nimport { enterZone } from './operators/zone';\r\n\r\n/**\r\n * Status of a dispatched action\r\n */\r\nexport const enum ActionStatus {\r\n  Dispatched = 'DISPATCHED',\r\n  Successful = 'SUCCESSFUL',\r\n  Canceled = 'CANCELED',\r\n  Errored = 'ERRORED'\r\n}\r\n\r\nexport interface ActionContext {\r\n  status: ActionStatus;\r\n  action: any;\r\n  error?: Error;\r\n}\r\n\r\n/**\r\n * Custom Subject that ensures that subscribers are notified of values in the order that they arrived.\r\n * A standard Subject does not have this guarantee.\r\n * For example, given the following code:\r\n * ```typescript\r\n *   const subject = new Subject<string>();\r\n     subject.subscribe(value => {\r\n       if (value === 'start') subject.next('end');\r\n     });\r\n     subject.subscribe(value => { });\r\n     subject.next('start');\r\n * ```\r\n * When `subject` is a standard `Subject<T>` the second subscriber would recieve `end` and then `start`.\r\n * When `subject` is a `OrderedSubject<T>` the second subscriber would recieve `start` and then `end`.\r\n */\r\nexport class OrderedSubject<T> extends Subject<T> {\r\n  private _itemQueue: T[] = [];\r\n  private _busyPushingNext = false;\r\n\r\n  next(value?: T): void {\r\n    if (this._busyPushingNext) {\r\n      this._itemQueue.unshift(value);\r\n      return;\r\n    }\r\n    this._busyPushingNext = true;\r\n    super.next(value);\r\n    while (this._itemQueue.length > 0) {\r\n      const nextValue = this._itemQueue.pop();\r\n      super.next(nextValue);\r\n    }\r\n    this._busyPushingNext = false;\r\n  }\r\n}\r\n\r\n/**\r\n * Internal Action stream that is emitted anytime an action is dispatched.\r\n */\r\n@Injectable()\r\nexport class InternalActions extends OrderedSubject<ActionContext> {}\r\n\r\n/**\r\n * Action stream that is emitted anytime an action is dispatched.\r\n *\r\n * You can listen to this in services to react without stores.\r\n */\r\n@Injectable()\r\nexport class Actions extends Observable<any> {\r\n  constructor(actions$: InternalActions, ngZone: NgZone) {\r\n    super(observer => {\r\n      actions$\r\n        .pipe(enterZone(ngZone))\r\n        .subscribe(res => observer.next(res), err => observer.error(err), () => observer.complete());\r\n    });\r\n  }\r\n}\r\n","/**\r\n * Composes a array of functions from left to right. Example:\r\n *\r\n *      compose([fn, final])(state, action);\r\n *\r\n * then the funcs have a signature like:\r\n *\r\n *      function fn (state, action, next) {\r\n *          console.log('here', state, action, next);\r\n *          return next(state, action);\r\n *      }\r\n *\r\n *      function final (state, action) {\r\n *          console.log('here', state, action);\r\n *          return state;\r\n *      }\r\n *\r\n * the last function should not call `next`.\r\n *\r\n * @ignore\r\n */\r\nexport const compose = funcs => (...args) => {\r\n  const curr = funcs.shift();\r\n  return curr(...args, (...nextArgs) => compose(funcs)(...nextArgs));\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * BehaviorSubject of the entire state.\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class StateStream extends BehaviorSubject<any> {\r\n  constructor() {\r\n    super({});\r\n  }\r\n}\r\n","import { Injectable, Optional, SkipSelf, Inject } from '@angular/core';\r\nimport { NgxsPluginFn, NGXS_PLUGINS, NgxsPlugin } from './symbols';\r\n\r\n/**\r\n * Plugin manager class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class PluginManager {\r\n  plugins: NgxsPluginFn[] = [];\r\n\r\n  constructor(\r\n    @Optional()\r\n    @SkipSelf()\r\n    private _parentManager: PluginManager,\r\n    @Inject(NGXS_PLUGINS)\r\n    @Optional()\r\n    private _plugins: NgxsPlugin[]\r\n  ) {\r\n    this.register();\r\n  }\r\n\r\n  private register() {\r\n    if (!this._plugins) {\r\n      return;\r\n    }\r\n\r\n    this.plugins = this._plugins.map(plugin => {\r\n      if (plugin.handle) {\r\n        return plugin.handle.bind(plugin);\r\n      } else {\r\n        return plugin;\r\n      }\r\n    });\r\n\r\n    if (this._parentManager) {\r\n      this._parentManager.plugins.push(...this.plugins);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, ErrorHandler, NgZone } from '@angular/core';\r\nimport { Observable, of, forkJoin, empty, Subject, throwError } from 'rxjs';\r\nimport { shareReplay, filter, exhaustMap, take } from 'rxjs/operators';\r\n\r\nimport { compose } from '../utils/compose';\r\nimport { InternalActions, ActionStatus, ActionContext } from '../actions-stream';\r\nimport { StateStream } from './state-stream';\r\nimport { PluginManager } from '../plugin-manager';\r\nimport { enterZone } from '../operators/zone';\r\n\r\n/**\r\n * Internal Action result stream that is emitted when an action is completed.\r\n * This is used as a method of returning the action result to the dispatcher\r\n * for the observable returned by the dispatch(...) call.\r\n * The dispatcher then asynchronously pushes the result from this stream onto the main action stream as a result.\r\n */\r\n@Injectable()\r\nexport class InternalDispatchedActionResults extends Subject<ActionContext> {}\r\n\r\n@Injectable()\r\nexport class InternalDispatcher {\r\n  constructor(\r\n    private _errorHandler: ErrorHandler,\r\n    private _actions: InternalActions,\r\n    private _actionResults: InternalDispatchedActionResults,\r\n    private _pluginManager: PluginManager,\r\n    private _stateStream: StateStream,\r\n    private _ngZone: NgZone\r\n  ) {}\r\n\r\n  /**\r\n   * Dispatches event(s).\r\n   */\r\n  dispatch(event: any | any[]): Observable<any> {\r\n    const result: Observable<any> = this._ngZone.runOutsideAngular(() => {\r\n      if (Array.isArray(event)) {\r\n        return forkJoin(event.map(a => this.dispatchSingle(a)));\r\n      } else {\r\n        return this.dispatchSingle(event);\r\n      }\r\n    });\r\n\r\n    result.subscribe({\r\n      error: error => this._ngZone.run(() => this._errorHandler.handleError(error))\r\n    });\r\n\r\n    return result.pipe(enterZone(this._ngZone));\r\n  }\r\n\r\n  private dispatchSingle(action: any): Observable<any> {\r\n    const prevState = this._stateStream.getValue();\r\n    const plugins = this._pluginManager.plugins;\r\n\r\n    return (compose([\r\n      ...plugins,\r\n      (nextState, nextAction) => {\r\n        if (nextState !== prevState) {\r\n          this._stateStream.next(nextState);\r\n        }\r\n        const actionResult$ = this.getActionResultStream(nextAction);\r\n        actionResult$.subscribe(ctx => this._actions.next(ctx));\r\n        this._actions.next({ action: nextAction, status: ActionStatus.Dispatched });\r\n        return this.createDispatchObservable(actionResult$);\r\n      }\r\n    ])(prevState, action) as Observable<any>).pipe(shareReplay());\r\n  }\r\n\r\n  private getActionResultStream(action: any): Observable<ActionContext> {\r\n    return this._actionResults.pipe(\r\n      filter((ctx: ActionContext) => ctx.action === action && ctx.status !== ActionStatus.Dispatched),\r\n      take(1),\r\n      shareReplay()\r\n    );\r\n  }\r\n\r\n  private createDispatchObservable(actionResult$: Observable<ActionContext>): Observable<any> {\r\n    return actionResult$\r\n      .pipe(\r\n        exhaustMap((ctx: ActionContext) => {\r\n          switch (ctx.status) {\r\n            case ActionStatus.Successful:\r\n              return of(this._stateStream.getValue());\r\n            case ActionStatus.Errored:\r\n              return throwError(ctx.error);\r\n            default:\r\n              return empty();\r\n          }\r\n        })\r\n      )\r\n      .pipe(shareReplay());\r\n  }\r\n}\r\n","/**\r\n * Object freeze code\r\n * https://github.com/jsdf/deep-freeze\r\n */\r\nexport const deepFreeze = o => {\r\n  Object.freeze(o);\r\n\r\n  const oIsFunction = typeof o === 'function';\r\n  const hasOwnProp = Object.prototype.hasOwnProperty;\r\n\r\n  Object.getOwnPropertyNames(o).forEach(function(prop) {\r\n    if (\r\n      hasOwnProp.call(o, prop) &&\r\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\r\n      o[prop] !== null &&\r\n      (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\r\n      !Object.isFrozen(o[prop])\r\n    ) {\r\n      deepFreeze(o[prop]);\r\n    }\r\n  });\r\n\r\n  return o;\r\n};\r\n","import { Injectable, isDevMode } from '@angular/core';\r\n\r\nimport { StateOperations } from '../internal/internals';\r\nimport { InternalDispatcher } from '../internal/dispatcher';\r\nimport { StateStream } from './state-stream';\r\nimport { NgxsConfig } from '../symbols';\r\nimport { deepFreeze } from '../utils/freeze';\r\n\r\n/**\r\n * State Context factory class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class InternalStateOperations {\r\n  constructor(private _stateStream: StateStream, private _dispatcher: InternalDispatcher, private _config: NgxsConfig) {\r\n    this.verifyDevMode();\r\n  }\r\n\r\n  /**\r\n   * Returns the root state operators.\r\n   */\r\n  getRootStateOperations(): StateOperations<any> {\r\n    const rootStateOperations = {\r\n      getState: () => this._stateStream.getValue(),\r\n      setState: newState => this._stateStream.next(newState),\r\n      dispatch: actions => this._dispatcher.dispatch(actions)\r\n    };\r\n\r\n    if (this._config.developmentMode) {\r\n      return this.ensureStateAndActionsAreImmutable(rootStateOperations);\r\n    }\r\n\r\n    return rootStateOperations;\r\n  }\r\n\r\n  private verifyDevMode() {\r\n    const isNgxsDevMode = this._config.developmentMode;\r\n    const isNgDevMode = isDevMode();\r\n    const incorrectProduction = !isNgDevMode && isNgxsDevMode;\r\n    const incorrectDevelopment = isNgDevMode && !isNgxsDevMode;\r\n    const example = 'NgxsModule.forRoot(states, { developmentMode: !environment.production })';\r\n\r\n    if (incorrectProduction) {\r\n      console.warn(\r\n        'Angular is running in production mode but NGXS is still running in the development mode!\\n',\r\n        'Please set developmentMode to false on the NgxsModule options when in production mode.\\n',\r\n        example\r\n      );\r\n    } else if (incorrectDevelopment) {\r\n      console.warn(\r\n        'RECOMMENDATION: Set developmentMode to true on the NgxsModule when Angular is running in development mode.\\n',\r\n        example\r\n      );\r\n    }\r\n  }\r\n\r\n  private ensureStateAndActionsAreImmutable(root: StateOperations<any>): StateOperations<any> {\r\n    return {\r\n      getState: () => root.getState(),\r\n      setState: value => {\r\n        const frozenValue = deepFreeze(value);\r\n        return root.setState(frozenValue);\r\n      },\r\n      dispatch: actions => {\r\n        return root.dispatch(actions);\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { StateContext } from '../symbols';\r\nimport { MappedStore } from '../internal/internals';\r\nimport { setValue, getValue } from '../utils/utils';\r\nimport { InternalStateOperations } from '../internal/state-operations';\r\n\r\n/**\r\n * State Context factory class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class StateContextFactory {\r\n  constructor(private _internalStateOperations: InternalStateOperations) {}\r\n\r\n  /**\r\n   * Create the state context\r\n   */\r\n  createStateContext(metadata: MappedStore): StateContext<any> {\r\n    const root = this._internalStateOperations.getRootStateOperations();\r\n    return {\r\n      getState(): any {\r\n        const state = root.getState();\r\n        return getValue(state, metadata.depth);\r\n      },\r\n      patchState(val: any): any {\r\n        const isArray = Array.isArray(val);\r\n        const isPrimitive = typeof val !== 'object';\r\n\r\n        if (isArray) {\r\n          throw new Error('Patching arrays is not supported.');\r\n        } else if (isPrimitive) {\r\n          throw new Error('Patching primitives is not supported.');\r\n        }\r\n\r\n        const state = root.getState();\r\n        const local = getValue(state, metadata.depth);\r\n        const clone = { ...local };\r\n\r\n        for (const k in val) {\r\n          clone[k] = val[k];\r\n        }\r\n\r\n        const newState = setValue(state, metadata.depth, clone);\r\n        root.setState(newState);\r\n        return newState;\r\n      },\r\n      setState(val: any): any {\r\n        let state = root.getState();\r\n        state = setValue(state, metadata.depth, val);\r\n        root.setState(state);\r\n        return state;\r\n      },\r\n      dispatch(actions: any | any[]): Observable<any> {\r\n        return root.dispatch(actions);\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { Injector, Injectable, SkipSelf, Optional } from '@angular/core';\r\nimport { Observable, of, forkJoin, from, throwError } from 'rxjs';\r\nimport { shareReplay, takeUntil, map, catchError, filter, mergeMap, defaultIfEmpty } from 'rxjs/operators';\r\n\r\nimport { META_KEY, NgxsLifeCycle, NgxsConfig } from '../symbols';\r\nimport {\r\n  topologicalSort,\r\n  buildGraph,\r\n  findFullParentPath,\r\n  nameToState,\r\n  propGetter,\r\n  isObject,\r\n  StateClass,\r\n  MappedStore\r\n} from './internals';\r\nimport { getActionTypeFromInstance, setValue } from '../utils/utils';\r\nimport { ofActionDispatched } from '../operators/of-action';\r\nimport { InternalActions, ActionStatus, ActionContext } from '../actions-stream';\r\nimport { InternalDispatchedActionResults } from '../internal/dispatcher';\r\nimport { StateContextFactory } from '../internal/state-context-factory';\r\n\r\n/**\r\n * State factory class\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class StateFactory {\r\n  get states(): MappedStore[] {\r\n    return this._parentFactory ? this._parentFactory.states : this._states;\r\n  }\r\n\r\n  private _states: MappedStore[] = [];\r\n  private _connected = false;\r\n\r\n  constructor(\r\n    private _injector: Injector,\r\n    private _config: NgxsConfig,\r\n    @Optional()\r\n    @SkipSelf()\r\n    private _parentFactory: StateFactory,\r\n    private _actions: InternalActions,\r\n    private _actionResults: InternalDispatchedActionResults,\r\n    private _stateContextFactory: StateContextFactory\r\n  ) {}\r\n\r\n  /**\r\n   * Add a new state to the global defs.\r\n   */\r\n  add(oneOrManyStateClasses: StateClass | StateClass[]): MappedStore[] {\r\n    let stateClasses: StateClass[];\r\n    if (!Array.isArray(oneOrManyStateClasses)) {\r\n      stateClasses = [oneOrManyStateClasses];\r\n    } else {\r\n      stateClasses = oneOrManyStateClasses;\r\n    }\r\n\r\n    const stateGraph = buildGraph(stateClasses);\r\n    const sortedStates = topologicalSort(stateGraph);\r\n    const depths = findFullParentPath(stateGraph);\r\n    const nameGraph = nameToState(stateClasses);\r\n    const mappedStores: MappedStore[] = [];\r\n\r\n    for (const name of sortedStates) {\r\n      const stateClass = nameGraph[name];\r\n\r\n      if (!stateClass[META_KEY]) {\r\n        throw new Error('States must be decorated with @State() decorator');\r\n      }\r\n\r\n      const depth = depths[name];\r\n      const { actions } = stateClass[META_KEY];\r\n      let { defaults } = stateClass[META_KEY];\r\n\r\n      stateClass[META_KEY].path = depth;\r\n      stateClass[META_KEY].selectFromAppState = propGetter(depth.split('.'), this._config);\r\n\r\n      // ensure our store hasn't already been added\r\n      // but dont throw since it could be lazy\r\n      // loaded from different paths\r\n      const has = this.states.find(s => s.name === name);\r\n      if (!has) {\r\n        // create new instance of defaults\r\n        if (Array.isArray(defaults)) {\r\n          defaults = [...defaults];\r\n        } else if (isObject(defaults)) {\r\n          defaults = { ...defaults };\r\n        } else if (defaults === undefined) {\r\n          defaults = {};\r\n        }\r\n\r\n        const instance = this._injector.get(stateClass);\r\n\r\n        mappedStores.push({\r\n          actions,\r\n          instance,\r\n          defaults,\r\n          name,\r\n          depth\r\n        });\r\n      }\r\n    }\r\n\r\n    this.states.push(...mappedStores);\r\n\r\n    return mappedStores;\r\n  }\r\n\r\n  /**\r\n   * Add a set of states to the store and return the defaulsts\r\n   */\r\n  addAndReturnDefaults(stateClasses: any[]): { defaults: any; states: MappedStore[] } {\r\n    if (stateClasses) {\r\n      const states = this.add(stateClasses);\r\n      const defaults = states.reduce(\r\n        (result: any, meta: MappedStore) => setValue(result, meta.depth, meta.defaults),\r\n        {}\r\n      );\r\n      return { defaults, states };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind the actions to the handlers\r\n   */\r\n  connectActionHandlers() {\r\n    if (this._connected) return;\r\n    this._actions\r\n      .pipe(\r\n        filter((ctx: ActionContext) => ctx.status === ActionStatus.Dispatched),\r\n        mergeMap(({ action }) =>\r\n          this.invokeActions(this._actions, action).pipe(\r\n            map(() => <ActionContext>{ action, status: ActionStatus.Successful }),\r\n            defaultIfEmpty(<ActionContext>{ action, status: ActionStatus.Canceled }),\r\n            catchError(error => of(<ActionContext>{ action, status: ActionStatus.Errored, error }))\r\n          )\r\n        )\r\n      )\r\n      .subscribe(ctx => this._actionResults.next(ctx));\r\n    this._connected = true;\r\n  }\r\n\r\n  /**\r\n   * Invoke the init function on the states.\r\n   */\r\n  invokeInit(stateMetadatas: MappedStore[]) {\r\n    for (const metadata of stateMetadatas) {\r\n      const instance: NgxsLifeCycle = metadata.instance;\r\n\r\n      if (instance.ngxsOnInit) {\r\n        const stateContext = this.createStateContext(metadata);\r\n        instance.ngxsOnInit(stateContext);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invoke actions on the states.\r\n   */\r\n  invokeActions(actions$: InternalActions, action) {\r\n    const results = [];\r\n\r\n    for (const metadata of this.states) {\r\n      const type = getActionTypeFromInstance(action);\r\n      const actionMetas = metadata.actions[type];\r\n\r\n      if (actionMetas) {\r\n        for (const actionMeta of actionMetas) {\r\n          const stateContext = this.createStateContext(metadata);\r\n          try {\r\n            let result = metadata.instance[actionMeta.fn](stateContext, action);\r\n\r\n            if (result instanceof Promise) {\r\n              result = from(result);\r\n            }\r\n\r\n            if (result instanceof Observable) {\r\n              result = result.pipe(\r\n                actionMeta.options.cancelUncompleted\r\n                  ? takeUntil(actions$.pipe(ofActionDispatched(action)))\r\n                  : map(r => r)\r\n              ); // map acts like a noop\r\n            } else {\r\n              result = of({}).pipe(shareReplay());\r\n            }\r\n\r\n            results.push(result);\r\n          } catch (e) {\r\n            results.push(throwError(e));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!results.length) {\r\n      results.push(of({}));\r\n    }\r\n\r\n    return forkJoin(results);\r\n  }\r\n\r\n  /**\r\n   * Create the state context\r\n   */\r\n  private createStateContext(metadata: MappedStore) {\r\n    return this._stateContextFactory.createStateContext(metadata);\r\n  }\r\n}\r\n","function defaultEqualityCheck(a, b) {\r\n  return a === b;\r\n}\r\n\r\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\r\n  if (prev === null || next === null || prev.length !== next.length) {\r\n    return false;\r\n  }\r\n\r\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\r\n  const length = prev.length;\r\n  for (let i = 0; i < length; i++) {\r\n    if (!equalityCheck(prev[i], next[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Memoize a function on its last inputs only.\r\n * Oringinally from: https://github.com/reduxjs/reselect/blob/master/src/index.js\r\n *\r\n * @ignore\r\n */\r\nexport function memoize(func, equalityCheck = defaultEqualityCheck) {\r\n  let lastArgs = null;\r\n  let lastResult = null;\r\n  // we reference arguments instead of spreading them for performance reasons\r\n  return <(...args) => any>function memoized() {\r\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\r\n      // apply arguments instead of spreading for performance.\r\n      lastResult = func.apply(null, arguments);\r\n    }\r\n\r\n    lastArgs = arguments;\r\n    return lastResult;\r\n  };\r\n}\r\n","import { SelectFromState, ensureSelectorMetadata, getSelectorMetadata, getStoreMetadata } from '../internal/internals';\r\nimport { memoize } from '../utils/memoize';\r\n\r\n/**\r\n * Function for creating a selector\r\n * @param selectors The selectors to use to create the arguments of this function\r\n * @param originalFn The original function being made into a selector\r\n */\r\nexport function createSelector(\r\n  selectors: any[],\r\n  originalFn: any,\r\n  creationMetadata?: { containerClass: any; selectorName: string }\r\n) {\r\n  const wrappedFn = function wrappedSelectorFn(...args) {\r\n    const returnValue = originalFn(...args);\r\n    if (returnValue instanceof Function) {\r\n      const innerMemoizedFn = memoize.apply(null, [returnValue]);\r\n      return innerMemoizedFn;\r\n    }\r\n    return returnValue;\r\n  };\r\n  const memoizedFn = memoize(wrappedFn);\r\n  const containerClass = creationMetadata && creationMetadata.containerClass;\r\n\r\n  const fn = state => {\r\n    const results = [];\r\n\r\n    const selectorsToApply = [];\r\n\r\n    if (containerClass) {\r\n      // If we are on a state class, add it as the first selector parameter\r\n      const metadata = getStoreMetadata(containerClass);\r\n      if (metadata) {\r\n        selectorsToApply.push(containerClass);\r\n      }\r\n    }\r\n    if (selectors) {\r\n      selectorsToApply.push(...selectors);\r\n    }\r\n    // Determine arguments from the app state using the selectors\r\n    if (selectorsToApply) {\r\n      results.push(...selectorsToApply.map(a => getSelectorFn(a)(state)));\r\n    }\r\n\r\n    // if the lambda tries to access a something on the\r\n    // state that doesn't exist, it will throw a TypeError.\r\n    // since this is quite usual behaviour, we simply return undefined if so.\r\n    try {\r\n      return memoizedFn(...results);\r\n    } catch (ex) {\r\n      if (ex instanceof TypeError) {\r\n        return undefined;\r\n      }\r\n      throw ex;\r\n    }\r\n  };\r\n\r\n  const selectorMetaData = ensureSelectorMetadata(memoizedFn);\r\n  selectorMetaData.originalFn = originalFn;\r\n  selectorMetaData.selectFromAppState = fn;\r\n  if (creationMetadata) {\r\n    selectorMetaData.containerClass = creationMetadata.containerClass;\r\n    selectorMetaData.selectorName = creationMetadata.selectorName;\r\n  }\r\n  return memoizedFn;\r\n}\r\n\r\n/**\r\n * This function gets the selector function to be used to get the selected slice from the app state\r\n * @ignore\r\n */\r\nexport function getSelectorFn(selector: any): SelectFromState {\r\n  const metadata = getSelectorMetadata(selector) || getStoreMetadata(selector);\r\n  return (metadata && metadata.selectFromAppState) || selector;\r\n}\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, distinctUntilChanged, map, take } from 'rxjs/operators';\r\n\r\nimport { getSelectorFn } from './utils/selector-utils';\r\nimport { InternalStateOperations } from './internal/state-operations';\r\nimport { StateStream } from './internal/state-stream';\r\nimport { enterZone } from './operators/zone';\r\n\r\n@Injectable()\r\nexport class Store {\r\n  constructor(\r\n    private _ngZone: NgZone,\r\n    private _stateStream: StateStream,\r\n    private _internalStateOperations: InternalStateOperations\r\n  ) {}\r\n\r\n  /**\r\n   * Dispatches event(s).\r\n   */\r\n  dispatch(event: any | any[]): Observable<any> {\r\n    return this._internalStateOperations.getRootStateOperations().dispatch(event);\r\n  }\r\n\r\n  /**\r\n   * Selects a slice of data from the store.\r\n   */\r\n  select<T>(selector: (state: any, ...states: any[]) => T): Observable<T>;\r\n  select(selector: string | any): Observable<any>;\r\n  select(selector: any): Observable<any> {\r\n    const selectorFn = getSelectorFn(selector);\r\n    return this._stateStream.pipe(\r\n      map(selectorFn),\r\n      catchError(err => {\r\n        // if error is TypeError we swallow it to prevent usual errors with property access\r\n        if (err instanceof TypeError) {\r\n          return of(undefined);\r\n        }\r\n\r\n        // rethrow other errors\r\n        throw err;\r\n      }),\r\n      distinctUntilChanged(),\r\n      enterZone(this._ngZone)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Select one slice of data from the store.\r\n   */\r\n  selectOnce<T>(selector: (state: any, ...states: any[]) => T): Observable<T>;\r\n  selectOnce(selector: string | any): Observable<any>;\r\n  selectOnce(selector: any): Observable<any> {\r\n    return this.select(selector).pipe(take(1));\r\n  }\r\n\r\n  /**\r\n   * Select a snapshot from the state.\r\n   */\r\n  selectSnapshot<T>(selector: (state: any, ...states: any[]) => T): T;\r\n  selectSnapshot(selector: string | any): any;\r\n  selectSnapshot(selector: any): any {\r\n    const selectorFn = getSelectorFn(selector);\r\n    return selectorFn(this._stateStream.getValue());\r\n  }\r\n\r\n  /**\r\n   * Allow the user to subscribe to the root of the state\r\n   */\r\n  subscribe(fn?: any): Subscription {\r\n    return this._stateStream.pipe(enterZone(this._ngZone)).subscribe(fn);\r\n  }\r\n\r\n  /**\r\n   * Return the raw value of the state.\r\n   */\r\n  snapshot(): any {\r\n    return this._internalStateOperations.getRootStateOperations().getState();\r\n  }\r\n\r\n  /**\r\n   * Reset the state to a specific point in time. This method is useful\r\n   * for plugin's who need to modify the state directly or unit testing.\r\n   */\r\n  reset(state: any) {\r\n    return this._internalStateOperations.getRootStateOperations().setState(state);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Store } from '../store';\r\nimport { propGetter } from '../internal/internals';\r\nimport { META_KEY, NgxsConfig } from '../symbols';\r\n\r\n/**\r\n * Allows the select decorator to get access to the DI store.\r\n * @ignore\r\n */\r\n@Injectable()\r\nexport class SelectFactory {\r\n  static store: Store | undefined = undefined;\r\n  static config: NgxsConfig | undefined = undefined;\r\n  constructor(store: Store, config: NgxsConfig) {\r\n    SelectFactory.store = store;\r\n    SelectFactory.config = config;\r\n  }\r\n}\r\n\r\n/**\r\n * Decorator for selecting a slice of state from the store.\r\n */\r\nexport function Select(selectorOrFeature?, ...paths: string[]) {\r\n  return function(target: any, name: string) {\r\n    const selectorFnName = '__' + name + '__selector';\r\n\r\n    if (!selectorOrFeature) {\r\n      // if foo$ => make it just foo\r\n      selectorOrFeature = name.lastIndexOf('$') === name.length - 1 ? name.substring(0, name.length - 1) : name;\r\n    }\r\n\r\n    const createSelect = fn => {\r\n      const store = SelectFactory.store;\r\n\r\n      if (!store) {\r\n        throw new Error('SelectFactory not connected to store!');\r\n      }\r\n\r\n      return store.select(fn);\r\n    };\r\n\r\n    const createSelector = () => {\r\n      const config = SelectFactory.config;\r\n      if (typeof selectorOrFeature === 'string') {\r\n        const propsArray = paths.length ? [selectorOrFeature, ...paths] : selectorOrFeature.split('.');\r\n\r\n        return propGetter(propsArray, config);\r\n      } else if (selectorOrFeature[META_KEY] && selectorOrFeature[META_KEY].path) {\r\n        return propGetter(selectorOrFeature[META_KEY].path.split('.'), config);\r\n      } else {\r\n        return selectorOrFeature;\r\n      }\r\n    };\r\n\r\n    if (target[selectorFnName]) {\r\n      throw new Error('You cannot use @Select decorator and a ' + selectorFnName + ' property.');\r\n    }\r\n\r\n    if (delete target[name]) {\r\n      Object.defineProperty(target, selectorFnName, {\r\n        writable: true,\r\n        enumerable: false,\r\n        configurable: true\r\n      });\r\n\r\n      Object.defineProperty(target, name, {\r\n        get: function() {\r\n          return this[selectorFnName] || (this[selectorFnName] = createSelect.apply(this, [createSelector()]));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n      });\r\n    }\r\n  };\r\n}\r\n","/**\r\n * Init action\r\n */\r\nexport class InitState {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '@@INIT';\r\n  }\r\n}\r\n\r\n/**\r\n * Update action\r\n */\r\nexport class UpdateState {\r\n  static get type() {\r\n    // NOTE: Not necessary to declare the type in this way in your code. See https://github.com/ngxs/store/pull/644#issuecomment-436003138\r\n    return '@@UPDATE_STATE';\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, Optional, Inject, InjectionToken } from '@angular/core';\r\n\r\nimport { ROOT_STATE_TOKEN, FEATURE_STATE_TOKEN, NgxsConfig } from './symbols';\r\nimport { StateFactory } from './internal/state-factory';\r\nimport { StateContextFactory } from './internal/state-context-factory';\r\nimport { Actions, InternalActions } from './actions-stream';\r\nimport { InternalDispatcher, InternalDispatchedActionResults } from './internal/dispatcher';\r\nimport { InternalStateOperations } from './internal/state-operations';\r\nimport { Store } from './store';\r\nimport { SelectFactory } from './decorators/select';\r\nimport { StateStream } from './internal/state-stream';\r\nimport { PluginManager } from './plugin-manager';\r\nimport { InitState, UpdateState } from './actions/actions';\r\n\r\n/**\r\n * Root module\r\n * @ignore\r\n */\r\n@NgModule()\r\nexport class NgxsRootModule {\r\n  constructor(\r\n    factory: StateFactory,\r\n    internalStateOperations: InternalStateOperations,\r\n    store: Store,\r\n    select: SelectFactory,\r\n    @Optional()\r\n    @Inject(ROOT_STATE_TOKEN)\r\n    states: any[]\r\n  ) {\r\n    // add stores to the state graph and return their defaults\r\n    const results = factory.addAndReturnDefaults(states);\r\n\r\n    const stateOperations = internalStateOperations.getRootStateOperations();\r\n    if (results) {\r\n      // get our current stream\r\n      const cur = stateOperations.getState();\r\n\r\n      // set the state to the current + new\r\n      stateOperations.setState({ ...cur, ...results.defaults });\r\n    }\r\n\r\n    // connect our actions stream\r\n    factory.connectActionHandlers();\r\n\r\n    // dispatch the init action and invoke init function after\r\n    stateOperations.dispatch(new InitState()).subscribe(() => {\r\n      if (results) {\r\n        factory.invokeInit(results.states);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Feature module\r\n * @ignore\r\n */\r\n@NgModule({})\r\nexport class NgxsFeatureModule {\r\n  constructor(\r\n    store: Store,\r\n    internalStateOperations: InternalStateOperations,\r\n    factory: StateFactory,\r\n    @Optional()\r\n    @Inject(FEATURE_STATE_TOKEN)\r\n    states: any[][]\r\n  ) {\r\n    // Since FEATURE_STATE_TOKEN is a multi token, we need to\r\n    // flatten it [[Feature1State, Feature2State], [Feature3State]]\r\n    const flattenedStates = ([] as any[]).concat(...states);\r\n\r\n    // add stores to the state graph and return their defaults\r\n    const results = factory.addAndReturnDefaults(flattenedStates);\r\n\r\n    const stateOperations = internalStateOperations.getRootStateOperations();\r\n    if (results) {\r\n      // get our current stream\r\n      const cur = stateOperations.getState();\r\n\r\n      // set the state to the current + new\r\n      stateOperations.setState({ ...cur, ...results.defaults });\r\n    }\r\n\r\n    stateOperations.dispatch(new UpdateState()).subscribe(() => {\r\n      if (results) {\r\n        factory.invokeInit(results.states);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport type ModuleOptions = Partial<NgxsConfig>;\r\n\r\nexport function ngxsConfigFactory(options: ModuleOptions): NgxsConfig {\r\n  const config = Object.assign(new NgxsConfig(), options);\r\n  return config;\r\n}\r\n\r\nexport const ROOT_OPTIONS = new InjectionToken<ModuleOptions>('ROOT_OPTIONS');\r\n\r\n/**\r\n * Ngxs Module\r\n */\r\n@NgModule({})\r\nexport class NgxsModule {\r\n  /**\r\n   * Root module factory\r\n   */\r\n  static forRoot(states: any[] = [], options: ModuleOptions = {}): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxsRootModule,\r\n      providers: [\r\n        StateFactory,\r\n        StateContextFactory,\r\n        Actions,\r\n        InternalActions,\r\n        InternalDispatcher,\r\n        InternalDispatchedActionResults,\r\n        InternalStateOperations,\r\n        Store,\r\n        StateStream,\r\n        SelectFactory,\r\n        PluginManager,\r\n        ...states,\r\n        {\r\n          provide: ROOT_STATE_TOKEN,\r\n          useValue: states\r\n        },\r\n        {\r\n          provide: ROOT_OPTIONS,\r\n          useValue: options\r\n        },\r\n        {\r\n          provide: NgxsConfig,\r\n          useFactory: ngxsConfigFactory,\r\n          deps: [ROOT_OPTIONS]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Feature module factory\r\n   */\r\n  static forFeature(states: any[]): ModuleWithProviders {\r\n    return {\r\n      ngModule: NgxsFeatureModule,\r\n      providers: [\r\n        StateFactory,\r\n        PluginManager,\r\n        ...states,\r\n        {\r\n          provide: FEATURE_STATE_TOKEN,\r\n          multi: true,\r\n          useValue: states\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { ensureStoreMetadata } from '../internal/internals';\r\nimport { ActionOptions } from '../symbols';\r\n\r\n/**\r\n * Decorates a method with a action information.\r\n */\r\nexport function Action(actions: any | any[], options?: ActionOptions) {\r\n  return function(target: any, name: string, descriptor: TypedPropertyDescriptor<any>) {\r\n    const meta = ensureStoreMetadata(target.constructor);\r\n\r\n    if (!Array.isArray(actions)) {\r\n      actions = [actions];\r\n    }\r\n\r\n    for (const action of actions) {\r\n      const type = action.type;\r\n\r\n      if (!action.type) {\r\n        throw new Error(`Action ${action.name} is missing a static \"type\" property`);\r\n      }\r\n\r\n      if (!meta.actions[type]) {\r\n        meta.actions[type] = [];\r\n      }\r\n\r\n      meta.actions[type].push({\r\n        fn: name,\r\n        options: options || {},\r\n        type\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { ensureStoreMetadata } from '../internal/internals';\r\nimport { StoreOptions, META_KEY } from '../symbols';\r\n\r\nconst stateNameRegex = new RegExp('^[a-zA-Z0-9_]+$');\r\n\r\n/**\r\n * Error message\r\n * @ignore\r\n */\r\nexport const stateNameErrorMessage = name =>\r\n  `${name} is not a valid state name. It needs to be a valid object property name.`;\r\n\r\n/**\r\n * Decorates a class with ngxs state information.\r\n */\r\nexport function State<T>(options: StoreOptions<T>) {\r\n  return function(target: any) {\r\n    const meta = ensureStoreMetadata(target);\r\n\r\n    // Handle inheritance\r\n    if (Object.getPrototypeOf(target).hasOwnProperty(META_KEY)) {\r\n      const parentMeta = Object.getPrototypeOf(target)[META_KEY];\r\n\r\n      meta.actions = {\r\n        ...meta.actions,\r\n        ...parentMeta.actions\r\n      };\r\n    }\r\n\r\n    meta.children = options.children;\r\n    meta.defaults = options.defaults;\r\n    meta.name = options.name;\r\n\r\n    if (!options.name) {\r\n      throw new Error(`States must register a 'name' property`);\r\n    }\r\n\r\n    if (!stateNameRegex.test(options.name)) {\r\n      throw new Error(stateNameErrorMessage(options.name));\r\n    }\r\n  };\r\n}\r\n","import { createSelector } from '../utils/selector-utils';\r\n\r\n/**\r\n * Decorator for memoizing a state selector.\r\n */\r\nexport function Selector(selectors?: any[]) {\r\n  return (target: any, key: string, descriptor: PropertyDescriptor) => {\r\n    if (descriptor.value !== null) {\r\n      const originalFn = descriptor.value;\r\n\r\n      const memoizedFn = createSelector(\r\n        selectors,\r\n        originalFn,\r\n        { containerClass: target, selectorName: key }\r\n      );\r\n\r\n      return {\r\n        configurable: true,\r\n        get() {\r\n          return memoizedFn;\r\n        }\r\n      };\r\n    } else {\r\n      throw new Error('Selectors only work on methods');\r\n    }\r\n  };\r\n}\r\n"],"names":["InjectionToken","filter","map","Observable","tslib_1.__extends","Subject","Injectable","NgZone","BehaviorSubject","Optional","SkipSelf","Inject","forkJoin","shareReplay","take","exhaustMap","of","throwError","empty","ErrorHandler","isDevMode","tslib_1.__values","mergeMap","defaultIfEmpty","catchError","from","takeUntil","Injector","distinctUntilChanged","NgModule"],"mappings":"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"}
