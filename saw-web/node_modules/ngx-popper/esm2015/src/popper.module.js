/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from "@angular/common";
import { NgModule } from "@angular/core";
import { PopperController } from './popper-directive';
import { PopperContent } from './popper-content';
const ɵ0 = {};
export class NgxPopperModule {
    /**
     * @return {?}
     */
    ngDoBootstrap() {
    }
    /**
     * @param {?=} popperBaseOptions
     * @return {?}
     */
    static forRoot(popperBaseOptions = {}) {
        return { ngModule: NgxPopperModule, providers: [{ provide: 'popperDefaults', useValue: popperBaseOptions }] };
    }
}
NgxPopperModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    PopperController,
                    PopperContent
                ],
                exports: [
                    PopperController,
                    PopperContent
                ],
                entryComponents: [
                    PopperContent
                ],
                providers: [
                    {
                        provide: 'popperDefaults', useValue: ɵ0
                    }
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wcGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1wb3BwZXIvIiwic291cmNlcyI6WyJzcmMvcG9wcGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztXQW1CSixFQUFFO0FBRzdDLE1BQU0sT0FBTyxlQUFlOzs7O0lBQzFCLGFBQWE7SUFDYixDQUFDOzs7OztJQUVNLE1BQU0sQ0FBQyxPQUFPLENBQUMsb0JBQTBDLEVBQUU7UUFDaEUsT0FBTyxFQUFDLFFBQVEsRUFBRSxlQUFlLEVBQUUsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFDLENBQUMsRUFBQyxDQUFDO0lBQzVHLENBQUM7OztZQTFCRixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLFlBQVk7aUJBQ2I7Z0JBQ0QsWUFBWSxFQUFFO29CQUNaLGdCQUFnQjtvQkFDaEIsYUFBYTtpQkFDZDtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsZ0JBQWdCO29CQUNoQixhQUFhO2lCQUNkO2dCQUNELGVBQWUsRUFBRTtvQkFDZixhQUFhO2lCQUNkO2dCQUNELFNBQVMsRUFBRTtvQkFDVDt3QkFDRSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsUUFBUSxJQUFJO3FCQUN4QztpQkFBQzthQUNMIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gXCJAYW5ndWxhci9jb21tb25cIjtcbmltcG9ydCB7TW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGV9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1BvcHBlckNvbnRlbnRPcHRpb25zfSBmcm9tICcuL3BvcHBlci1tb2RlbCc7XG5pbXBvcnQge1BvcHBlckNvbnRyb2xsZXJ9IGZyb20gJy4vcG9wcGVyLWRpcmVjdGl2ZSc7XG5pbXBvcnQge1BvcHBlckNvbnRlbnR9IGZyb20gJy4vcG9wcGVyLWNvbnRlbnQnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFBvcHBlckNvbnRyb2xsZXIsXG4gICAgUG9wcGVyQ29udGVudFxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgUG9wcGVyQ29udHJvbGxlcixcbiAgICBQb3BwZXJDb250ZW50XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIFBvcHBlckNvbnRlbnRcbiAgXSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogJ3BvcHBlckRlZmF1bHRzJywgdXNlVmFsdWU6IHt9XG4gICAgfV1cbn0pXG5leHBvcnQgY2xhc3MgTmd4UG9wcGVyTW9kdWxlIHtcbiAgbmdEb0Jvb3RzdHJhcCgpIHtcbiAgfVxuXG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdChwb3BwZXJCYXNlT3B0aW9uczogUG9wcGVyQ29udGVudE9wdGlvbnMgPSB7fSk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7bmdNb2R1bGU6IE5neFBvcHBlck1vZHVsZSwgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6ICdwb3BwZXJEZWZhdWx0cycsIHVzZVZhbHVlOiBwb3BwZXJCYXNlT3B0aW9uc31dfTtcbiAgfVxufSJdfQ==