% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lagger.R
\name{lagger}
\alias{lagger}
\alias{lagger.data.frame}
\alias{lagger.tbl_spark}
\title{DataFrame Lagger function}
\usage{
lagger(df, ...)

\method{lagger}{data.frame}(df, order_vars, group_vars = NULL, measure_vars,
  lags = 1L)

\method{lagger}{tbl_spark}(df, order_vars, group_vars = NULL, measure_vars,
  lags = 1L)
}
\arguments{
\item{df}{DataFrame}

\item{order_vars}{required vector of columns to arrange data by}

\item{group_vars}{optional grouping variables}

\item{measure_vars}{required vector of columns name to applied lag
transformations to}

\item{lags}{number of lag period. accepts more than one value as vector}
}
\value{
spark dataframe with lag values appended
}
\description{
Function that iteratively adds lagged values of specified column to a
dataframe
}
\details{
Iteratively calls mutater for each lag value provided
}
\examples{
library(dplyr)


# Create toy dataset
set.seed(319)
id_vars <- seq(101, 200, by=1)
dates <- seq(from=Sys.Date()-365, to=Sys.Date(), by="day")
cat1 <- c("A", "B")
cat2 <- c("X", "Y", "Z")

dat <- data.frame()
for(id in id_vars){
  n <- floor(runif(1)*100)
  d <- data.frame(id = id,
                 date = sample(dates, n, replace = T),
                 cat1 = sample(cat1, n, replace = T),
                 cat2 = sample(cat2, n, replace = T),
                 metric1 = sample(1:5, n, replace = T),
                 metric2 = rnorm(n, mean=50, sd = 5))
 dat <- rbind(dat, d)
}

df \%>\%
  lagger(order_vars = c("date"),
         group_vars = "id",
         mutate_vars = c("metric1"),
         lags = c(1, 3, 5))
}
