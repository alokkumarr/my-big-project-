% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/melter.R
\name{melter}
\alias{melter}
\alias{melter.data.frame}
\alias{melter.tbl_spark}
\title{DataFrame Melter function}
\usage{
melter(df, id_vars, measure_vars, variable_name, value_name, type)

\method{melter}{data.frame}(df, id_vars = NULL, measure_vars,
  variable_name = "variable", value_name = "value")

\method{melter}{tbl_spark}(df, id_vars = NULL, measure_vars,
  variable_name = "variable", value_name = "value", type = "DOUBLE")
}
\arguments{
\item{df}{dataframe}

\item{id_vars}{vector of string column names. Can be zero or more. Default is
NULL. Id variables are retained in wide form in the functional result}

\item{measure_vars}{vector of string column names. Requires a valid column
name. Accepts one or more. Measure variables are converted to long form}

\item{variable_name}{optional column name for resulting column of measure
variable names. Default is 'variable'}

\item{value_name}{option column name for resulting column of measure varaible
values}

\item{type}{measure_vars type. Used in spark.dataframe method only. default is
DOUBLE}
}
\description{
Data munging function that reshapes wide data into long format. Similiar to
reshape2::melt
}
\examples{
#'library(dplyr)


# Create toy dataset
set.seed(319)
id_vars <- seq(101, 200, by=1)
dates <- seq(from=Sys.Date()-365, to=Sys.Date(), by="day")
cat1 <- c("A", "B")
cat2 <- c("X", "Y", "Z")

dat <- data.frame()
for(id in id_vars){
  n <- floor(runif(1)*100)
  d <- data.frame(id = id,
                 date = sample(dates, n, replace = TRUE),
                 cat1 = sample(cat1, n, replace = TRUE),
                 cat2 = sample(cat2, n, replace = TRUE),
                 metric1 = sample(1:5, n, replace = TRUE),
                 metric2 = rnorm(n, mean=50, sd = 5))
 dat <- rbind(dat, d)
}

melter(dat,
      id_vars = c("id", "date", "cat1", "cat2"),
      measure_vars = c("metric1", "metric2"),
      variable_name = "metric",
      value_name = "value")

}
