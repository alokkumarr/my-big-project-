<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sncr</groupId>
    <artifactId>saw-security</artifactId>
    <version>${revision}</version>
    <packaging>war</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <start-class>com.sncr.saw.security.app.NSSOApplication</start-class>
        <commons.io.version>2.4</commons.io.version>
        <jjwt.version>0.7.0</jjwt.version>
        <gson.version>2.8.0</gson.version>
        <spring-security.version>4.0.2.RELEASE</spring-security.version>
        
        <!-- to be specified in command line -->
        <prod.release>0</prod.release>
        <project.release>${prod.release}</project.release>
        
        <rpm.version>${revision.nodash}</rpm.version>
        
        <!-- 
            Release version number cannot be removed optionally.
            Solution for this will be rename the rpm once obtained from build
        -->
        <rpm.release>${project.release}</rpm.release>
        <app.name>saw-security</app.name> <!-- ${project.artifactId} -->
        <app.version>${rpm.version}</app.version>
        <app.release>${rpm.release}</app.release>
        <app.nameVer>${app.name}-${app.version}</app.nameVer>
        
        <!-- Directories -->
        <app.optParDir>/opt/bda</app.optParDir>
        <app.optDir>${app.optParDir}/${app.nameVer}</app.optDir>
        <app.varDir>/var/bda/${app.name}</app.varDir>
        <app.etcDir>/etc/bda</app.etcDir>
        
        <app.user>saw</app.user>
        <app.group>saw</app.group>
    </properties>

<!--     <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Camden.SR5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
 -->
    <dependencies>
<!--         
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
    		<groupId>org.mockito</groupId>
    		<artifactId>mockito-core</artifactId>
    		<version>1.9.5</version>
    		<scope>test</scope>
		</dependency>
		 <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-test</artifactId>
    		<version>3.1.2.RELEASE</version>
    		<scope>test</scope>
		</dependency>

<!--         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-remote-shell</artifactId>
        </dependency>
 -->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>    
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.4.0</version>
        </dependency>

        
        <dependency>
            <!-- org.springframework.context.* -->
            <!-- org.springframework.web.filter -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <!-- springfox.documentation.* -->
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <!-- io.jsonwebtoken -->
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <!-- com.google.gson -->
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
<!--        <dependency>
             org.springframework.security.config.annotation.web.builders 
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.spring-security-config</artifactId>
            <version>4.2.2.RELEASE_1</version>
        </dependency>-->
        <dependency>
            <!-- org.springframework.security.web.header.writers -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <!-- version>4.0.1.RELEASE</version -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.25</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache-clustered</artifactId>
		</dependency>
    </dependencies>	    

    <build>
        <defaultGoal>package</defaultGoal>
        <plugins>
            <!--
              How do I create a JAR containing the classes in my webapp?
              http://maven.apache.org/plugins/maven-war-plugin/faq.html#attached
            -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                </configuration>
            </plugin>
            
            <!-- Codehaus rpm plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <version>2.1.5</version>
                <extensions>true</extensions>
               <executions>
                    <execution>
                        <id>generate-rpm</id>
                        <goals>
                            <goal>rpm</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <license>Synchronoss proprietary product</license>
                    <distribution>BDA distribution</distribution>
                    <needarch>false</needarch>
                    <targetOS>i386-linux</targetOS>
                    <group>BDA Saw Security</group>
                    <packager>BDA</packager>
                    <name>${project.artifactId}</name>
                    <defineStatements>
                        <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
                    </defineStatements>
                    <defaultUsername>${app.user}</defaultUsername>
                    <defaultGroupname>${app.group}</defaultGroupname>
                    <defaultDirmode>0755</defaultDirmode>
                    <defaultFilemode>0444</defaultFilemode>
                    <requires>
                      <require>java-1.8.0-openjdk-headless &gt;= 1.8.0</require>
                      <require>MySQL-python &gt;= 1.2.5</require>
                    </requires>
                    <mappings>
                        <!-- home dir -->
                        <mapping>
                            <directory>${app.optDir}</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/bin</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/conf</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/conf/templates</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/lib</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/setup</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/setup/sql</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/entry</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/entry/conf</directory>
                        </mapping>
                        
                        <!-- var directory for saw security (/var/bda/saw-security) -->
                        <mapping>
                            <directory>${app.varDir}</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.varDir}/log</directory>
                        </mapping>
                        <mapping>
                            <directory>${app.varDir}/run</directory>
                        </mapping>
                        
                        <!-- 
                            etc directory for saw security (/var/bda/saw-security)
                            Place saw-secirity.vars in this directory
                        -->
                        <mapping>
                            <directory>${app.etcDir}</directory>
                            <!--
                            <filemode>0755</filemode>
                            <username>${app.user}</username>
                            <groupname>${app.group}</groupname>
                            -->
                        </mapping>
                        
                        <!-- Directory files -->
                        <!-- Executable files --> 
                        <mapping>
                            <directory>${app.optDir}/bin</directory>
                            <filemode>0555</filemode>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>${project.basedir}/bin</location>
                                    <includes>
                                        <include>saw-security-runner.sh</include>
                                        <include>saw-security.sh</include>
                                        <include>conf_init</include>
                                        <include>mk_conf.sh</include>
                                        <include>ccode.sh</include>
                                    </includes>
                                </source>
                                <source>
                                    <location>bin/templates/appl_info.template</location>
                                    <destination>appl_info</destination>
                                    <filter>true</filter>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/conf</directory>
                            <!-- final version, not template -->
                            <sources>
                                <source><location>
                                    ${project.basedir}/conf/logback.xml
                                </location></source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/conf/templates</directory>
                            <!-- templates -->
                            <sources>
                                <source>
                                    <location>${project.basedir}/conf/templates</location>
                                    <includes>
                                        <include>application.properties</include>
                                        <include>bootstrap.yml</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/lib</directory>
                            <sources>
                                <source>
                                    <location>${project.basedir}/target</location>
                                    <includes>
                                        <include>*.war</include>
                                        <include>*.jar</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db</directory>
                            <sources>
                                <source><location>
                                    ${project.basedir}/db/bda_init.py
                                </location></source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/setup</directory>
                            <filemode>0755</filemode>
                            <sources>
                                <source>
                                    <location>${project.basedir}/db/setup</location>
                                    <includes>
                                        <include>init</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/setup</directory>
                            <sources>
                                <source>
                                    <location>${project.basedir}/db/setup</location>
                                    <includes>
                                        <include>init.sql</include>
                                        <include>*.py</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/setup/sql</directory>
                            <sources>
                                <source>
                                    <location>${project.basedir}/db/setup/sql</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/entry</directory>
                            <sources>
                                <source>
                                    <location>${project.basedir}/db/entry</location>
                                    <includes>
                                        <include>table_structure_mapping.csv</include> 
                                        <include>Data_Entry_Automation.py</include>
                                        <include>Data_Entry_Automation_Utilities.py</include>
                                    </includes>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>${app.optDir}/db/entry/conf</directory>
                            <sources>
                                <source><location>
                                    ${project.basedir}/db/entry/conf/configuration.json
                                </location></source>
                            </sources>
                        </mapping>
                        
                         <!--Create softlink for app directory--> 
                        <mapping>
                            <directory>${app.optParDir}</directory>
                            <sources>
                                <softlinkSource>
                                     <!--ln -s <location> <destination>--> 
                                    <location>${app.nameVer}</location>
                                    <destination>${app.name}</destination>
                                </softlinkSource>
                            </sources>
                        </mapping>
                    </mappings>

                    <preinstallScriptlet>
                        <script>
echo pre-install started: ${app.nameVer}
echo check saw:saw user exists
getent group ${app.group} || {
    echo error: no such group: ${app.group}
    # groupadd -g 5100 saw
    exit 1
}
getent passwd ${app.user} || {
    echo error: no such user: ${app.user}
    # useradd -g 5100 -u 5100 saw
    exit 1
}

echo check /etc/bda/${app.name}.vars can be read
( &lt;/etc/bda/${app.name}.vars ) || exit 1

echo check Python module with "'import MySQLdb'"
( python -c 'import MySQLdb' ) || exit 1

echo pre-install completed: ${app.nameVer}
                        </script>
                    </preinstallScriptlet>
                    <preremoveScriptlet>
                        <script>
echo pre-remove starting: ${app.nameVer}
echo remove files in log/, run/ subdirs in ${app.varDir}
( set -x
  rm -f ${app.varDir}/{log,run}/*
  )
echo remove python compiled files
( set -x
  rm -f ${app.optDir}/db/*.pyc ${app.optDir}/db/*/*.pyc
  )
echo remove files generated from templates
( set -x
  rm -f ${app.optDir}/conf/{application.properties,bootstrap.yml}
  )
echo pre-remove completed: ${app.nameVer}
                        </script>
                    </preremoveScriptlet> 
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>
                  </descriptors>
                  <!-- Remove artifact classifier "bin" from archive name -->
                  <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                  <execution>
                    <phase>package</phase>
                    <goals>
                      <goal>single</goal>
                    </goals>
                  </execution>
                </executions>
            </plugin>
            <plugin>
              <groupId>io.fabric8</groupId>
              <artifactId>docker-maven-plugin</artifactId>
              <version>0.21.0</version>
              <configuration>
                <images>
                  <image>
                    <name>saw-security:${project.version}</name>
                    <alias>saw-security</alias>
                    <build>
                      <dockerFileDir>${project.basedir}/src/main/docker</dockerFileDir>
                      <assembly>
                        <inline xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
                                xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
                          <fileSets>
                            <fileSet>
                              <directory>${project.build.directory}</directory>
                              <outputDirectory>.</outputDirectory>
                              <includes>
                                <include>*.tgz</include>
                              </includes>
                            </fileSet>
                          </fileSets>
                        </inline>
                      </assembly>
                    </build>
                    <run>
                      <!-- Run privileged for systemd -->
                      <privileged>true</privileged>
                      <wait>
                        <!--
                            Wait until the container health check
                            reports that systemd services are up and
                            running
                        -->
                        <healthy>true</healthy>
                        <!--
                            Increase timeout to allow application
                            deployment to finish
                        -->
                        <time>120000</time>
                      </wait>
                    </run>
                  </image>
                </images>
              </configuration>
              <executions>
                <execution>
                  <id>start</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>build</goal>
                    <goal>start</goal>
                  </goals>
                </execution>
                <execution>
                  <id>stop</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
        </plugins>
    </build>

</project>
