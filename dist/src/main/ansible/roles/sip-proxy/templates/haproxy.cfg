global
  log /dev/log local0
  # Enable stats socket for HAProxy Prometheus exporter
  stats socket /var/lib/haproxy/stats mode 660 level admin group prometheus
  # Allow large HTTP request headers, matching saw-proxy.conf
  tune.bufsize 65536

defaults
  log global
  mode http
  option httplog
  timeout connect 5s
  # Note: Timeouts raised above typical defaults for long-living HTTP
  # requests related to synchronous query execution
  timeout client 600s
  timeout server 600s
  errorfile 503 /etc/haproxy/errors/503.http
  stats enable
  stats uri  /haproxy

frontend sip_proxy
  bind *:80
{% if sip_secure | default(false) %}
  bind *:443 ssl crt /etc/sip/sip-proxy.pem
{% endif %}
{% if sip_cors_allow_origin is defined %}
  # Define the ACL to Limit the access for monitoring URLs ( Prometheus/ Grafana) etc.
  acl network_allowed src {{ sip_internal_services_ip_allowed }}
  acl restricted_page path_beg /haproxy
  acl restricted_page path_beg /prometheus
  acl restricted_page path_beg /grafana
  block if restricted_page !network_allowed
{% endif %}
{% if sip_cors_allow_origin is defined %}
  # Set allowed origins for Cross-Origin Resource Sharing (CORS)
  http-response set-header Access-Control-Allow-Origin {{ sip_cors_allow_origin }}
  http-response set-header Access-Control-Allow-Methods GET,HEAD,POST,PUT,DELETE,OPTIONS
  http-response set-header Access-Control-Allow-Headers Accept,Accept-Language,Content-Type,Authorization,Origin,X-Requested-With
  http-response set-header Access-Control-Max-Age 1800
{% else %}
  # Remove any CORS headers set by services themselves
  http-response del-header Access-Control-Allow-Origin
  http-response del-header Access-Control-Allow-Methods
  http-response del-header Access-Control-Allow-Headers
  http-response del-header Access-Control-Max-Age
{% endif %}
  # Workaround: Rewrite requests for "/<module>" to "/saw/<module>"
  # for backward compatibility with clients from older branches during
  # a transition period.  Can be removed after all branches have been
  # updated to contain the URL path changes.
  reqrep ^([^\ :]*)\ /security/(.*)  \1\ /saw/security/\2
  reqrep ^([^\ :]*)\ /services/(.*)  \1\ /saw/services/\2
  reqrep ^([^\ :]*)\ /web/(.*)  \1\ /saw/web/\2
  # End workaround
  # Workaround: Rewrite incoming requests to "/saw" to use "/sip"
  # until all clients have been updated to use  "/sip"
  reqrep ^([^\ :]*)\ /saw/(.*)  \1\ /sip/\2
  use_backend sip_web if { path_beg /sip/web/ }
  use_backend sip_web if { path_beg /sip/pm/ }
  # create back-end service to support the notification endpoints outside of the SIP-gateways
  # service, authorization validation needs to be skipped for these api call, since trigger point
  # for these apis can be external notification channels like Email , SMS etc.
  # SIP-Gateways service needs to be enhanced to serve these request in future.
  use_backend sip_notification if { path_beg /sip/services/alerts/subscriber/ }
  use_backend sip_services if { path_beg /sip/services/ }
  use_backend sip_security_doc if { path_beg /sip/security/v2/api-docs }
  use_backend sip_security if { path_beg /sip/security/ }
  use_backend sip_rtis if { path_beg /sip/rtis/ }
  use_backend prometheus if { path_beg /prometheus/ }
  use_backend grafana if { path_beg /grafana/ }
  default_backend sip_root
  
backend sip_web
  reqrep ^([^\ :]*)\ /sip/web/(.*)  \1\ /saw/\2
  reqrep ^([^\ :]*)\ /sip/pm/(.*)  \1\ /pm/\2
{% for host in groups['saw-web'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:8080 check {% if sip_secure | default(false) %}ssl ca-file /etc/sip/internal-ca.crt{% endif %} 
{% endfor %}

backend sip_notification
  reqrep ^([^\ :]*)\ /sip/services/alerts/subscriber/(.*)  \1\ /alerts/subscriber/\2
  option httpchk GET /actuator/health
  default-server inter 10s
{% for host in groups['saw-services'] %}

  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9620 check {% if sip_secure | default(false) %}ssl ca-file /etc/sip/internal-ca.crt{% endif %}
{% endfor %}

backend sip_services
  reqrep ^([^\ :]*)\ /sip/services/(.*)  \1\ /\2
  option httpchk GET /actuator/health
  default-server inter 10s
{% for host in groups['saw-services'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9100 check {% if sip_secure | default(false) %}ssl ca-file /etc/sip/internal-ca.crt{% endif %} 
{% endfor %}

backend sip_security_doc
  reqrep ^([^\ :]*)\ /sip/security/(.*)  \1\ /\2
  option httpchk GET /actuator/health
{% for host in groups['saw-security'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9000 check {% if sip_secure | default(false) %}ssl ca-file /etc/sip/internal-ca.crt{% endif %} 
{% endfor %}

backend sip_security
  reqrep ^([^\ :]*)\ /sip/security/(.*)  \1\ /sip-security/\2
  option httpchk GET /actuator/health
{% for host in groups['saw-security'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9000 check {% if sip_secure | default(false) %}ssl ca-file /etc/sip/internal-ca.crt{% endif %} 
{% endfor %}

backend sip_rtis
  reqrep ^([^\ :]*)\ /sip/rtis/(.*)  \1\ /\2
{% for host in groups['sip-rtis'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9950 check {% if sip_secure | default(false) %}ssl ca-file /etc/sip/internal-ca.crt{% endif %} 
{% endfor %}

backend sip_root
  # Note: Let initial requests to the root path go through NGINX to
  # allow development environments to serve a static start page if it
  # exists.  It will redirect to "/sip/", as handled below, for
  # non-development environments.
  http-request redirect location /sip/web/ if { path_reg ^/(sip|saw)/?$ }
{% if sip_secure | default(false) %}
  http-response replace-header Location ^http://(.*) https://\1
{% endif %}
  server localhost 127.0.0.1:8900

backend prometheus
{% for host in groups['sip-admin'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9090 check
{% endfor %}

backend grafana
  reqrep ^([^\ ]*\ /)grafana[/]?(.*) \1\2
{% for host in groups['sip-admin'] %}
  server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:3000 check
{% endfor %}
