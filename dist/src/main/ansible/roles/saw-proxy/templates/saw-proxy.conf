# Root
location = / {
    # Use landing page if it exists (for example in a local
    # development environment).  Otherwise default to redirecting to
    # SAW.
    proxy_read_timeout 600;
    try_files /dev/ @saw;
    port_in_redirect off;
}

# Following is used by SIP-weather-widget to query openweathermap API
# and fetch weather data. 
location /sip/weatherdata/ { 
    if ($request_method = 'OPTIONS') {
        return 200;
     }
    rewrite ^/sip/weatherdata/(.*)$ /data/2.5/$1?APPID=
    {{- sip_openweathermap_api_token | default('1d60893d260345b7c4a62ec0842ed731')}} break;
    # Incoming requests from UI will contain JWT which wonâ€™t be recognized by
    # openweathermap resulting in failure. So overriding it before passing.
    proxy_set_header Authorization "";
    # X-Cache-Key response header contains APPID. So have to hide it.
    proxy_hide_header X-Cache-Key;
    proxy_pass http://api.openweathermap.org;
}

location /dev/ {
    # Substitute public hostname in "proxy.pac"
    sub_filter_types application/x-ns-proxy-autoconfig;
    sub_filter '%public_hostname%' '$host';
}

location @saw {
    # Redirect to the SAW application
    rewrite ^/$ $scheme://$http_host/saw/ redirect;
}

# Workaround: Rewrite references to internal API to old location
# until Transport Service updated.
#rewrite ^/services/api/internal/(.*)$ ^/services/$1;
