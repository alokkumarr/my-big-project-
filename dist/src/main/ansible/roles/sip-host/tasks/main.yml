- name: Make systemd journal persistent
  file: name=/var/log/journal state=directory
  notify: restart journald
  # Workaround: Restarting journald inside a container seems to cause
  # the sip-deploy service to fail, so skip it for development
  # containers for now
  when: lookup('env', 'container') != 'docker'
# If the host is configured using SELinux, Ansible requires that
# "libselinux-python" is installed (see the "Managed Node
# Requirements" section in the Ansible Installation Guide
- name: Install SELinux Python bindings for Ansible
  yum: name=libselinux-python
- name: Create SIP default batch dump folder directory
  file:
    path: /dfs
    state: directory
- name: Create SIP configuration directory
  file:
    path: /etc/sip
    state: directory
- name: Create SIP opt libexec directory
  file:
    path: /opt/sip/libexec
    state: directory
# Create old /etc/bda directory for backwards compatibility
- name: Create the /etc/bda directory
  file:
    path: /etc/bda
    state: directory
    mode: 0755
# Creating env file to hold the connector streaming
- name: Create the /etc/bda directory
  file:
    path: /etc/bda/secure.env
    state: touch
    mode: 0755

- name: Copy the content of the file when it is secure
  copy:
    content: "SECURE=https:"
    dest: "/etc/bda/secure.env"
  when: sip_secure

- name: Copy the content of the file when it is not secure
  copy:
    content: "SECURE=http:"
    dest: "/etc/bda/secure.env"
  when: not sip_secure

- name: Add MapR classpath utility for services
  copy:
    dest: /usr/bin/sip-mapr-classpath
    mode: a=rx
    content: |
      #!/bin/bash
      #
      # Output MapR classpath in format compatible with Spring
      # launcher "loader.path" option, as needed by SIP services
      # using Spring Boot Maven plug-in for packaging while still needing
      # to add the external MapR classpath at runtime
      #
      set -eu
      # Some patterns do not match anything, so use nullglob to keep going
      shopt -s nullglob
      # Get the MapR and Hadoop classpaths and remove colons to prepare
      # for glob expansion
      classpath=$((mapr classpath && hadoop classpath) | sed -e 's/:/ /g')
      # Expand glob patterns and separate entries by comma
      # as required by Spring "loader.path" option
      echo $classpath | sed -e 's/ /,/g'
# Workaround: Services have been renamed from "saw-*" to "sip-*", so
# stop any units with the old name before upgrading.  Stop sockets
# separately first, so that socket-activated units are not reactivated
# while stopping.  Can be removed once all environments have been
# upgraded to SIP 3.3.
- name: Stop systemd sockets with old SAW prefix before upgrading
  command: systemctl stop saw-*.socket
- name: Stop systemd units with old SAW prefix before upgrading
  command: systemctl stop saw-*
- name: Stop systemd sockets with old sip-transport-service before upgrading
  command: systemctl stop sip-transport*.socket
- name: Stop systemd units with old sip-transport-service before upgrading
  command: systemctl stop sip-transport*
- name: Ensure a list of packages installed
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - python
    - python-setuptools

- name: Installing pip on all saw-services hosts
  easy_install:
    name: pip
    state: latest

- name: Removing existing pyOpenSSL if exists
  yum:
    name: pyOpenSSL
    autoremove: true

- name: Installing libraries on all saw-services hosts using Ansible pip module
  pip:
    name: "{{ packages }}"
    extra_args: --ignore-installed -U
  vars:
    packages:
    - ipaddress
    - enum34
    - pyOpenSSL==19.0.0
