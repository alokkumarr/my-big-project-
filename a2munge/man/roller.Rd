% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roller.R
\name{roller}
\alias{roller}
\alias{roller.data.frame}
\alias{roller.tbl_spark}
\title{DataFrame Roller Function}
\usage{
roller(df, order_vars, group_vars, measure_vars, fun, width, by, partial,
  ...)

\method{roller}{data.frame}(df, order_vars, group_vars = NULL,
  measure_vars, fun, width, by = 1, partial = TRUE, ...)

\method{roller}{tbl_spark}(df, order_vars, group_vars = NULL,
  measure_vars, fun, width, ...)
}
\arguments{
\item{df}{DataFrame}

\item{order_vars}{optional vector of column names to arrange data by. can be
one or more columns. default is NULL. order matters - arranges left to
right. supports decreasing ordering - see examples.}

\item{group_vars}{optional vector of column names to group data by. can be one
or more columns. default is NULL}

\item{measure_vars}{vector of column names to apply functional transformation
to. can be one or more columns}

\item{fun}{transformation function. accepts either fun name string or a
expression wrapped in funs() call. see examples for example of using custom
function with funs()}

\item{width}{size of rolling window. Window is aligned right and to current
row only}

\item{by}{sequence that the rolling calculation should be applied to. Ex - by
of 2 would compute the rolling calculation for every other record. Only
enabled for roller.data.frame method. Default is 1.}

\item{partial}{logical argument if partial windows should be calculated. Only
enabled for roller.data.frame. Default is TRUE.}

\item{...}{additional arguments to pass to the transformation function}
}
\value{
DataFrame with additional calculated columns appended
}
\description{
Function appends rolling calculated fields to dataframe. Allows for grouping
and ordering calculations.
}
\examples{
library(dplyr)
# Create toy dataset
set.seed(319)
id_vars <- seq(101, 200, by=1)
dates <- seq(from=Sys.Date()-365, to=Sys.Date(), by="day")
cat1 <- c("A", "B")
cat2 <- c("X", "Y", "Z")

dat <- data.frame()
for(id in id_vars){
  n <- floor(runif(1)*100)
  d <- data.frame(id = id,
                 date = sample(dates, n, replace = TRUE),
                 cat1 = sample(cat1, n, replace = TRUE),
                 cat2 = sample(cat2, n, replace = TRUE),
                 metric1 = sample(1:5, n, replace = TRUE),
                 metric2 = rnorm(n, mean=50, sd = 5))
 dat <- rbind(dat, d)
}

d1 <- dat \%>\% roller(.,
order_vars = "date",
group_vars = c("id", "cat1", "cat2"),
measure_vars = c("metric1"),
fun = "mean",
width=5)
}
