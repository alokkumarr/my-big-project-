% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pivoter.R
\name{pivoter}
\alias{pivoter}
\alias{pivoter.tbl_spark}
\alias{pivoter.data.frame}
\title{DataFrame Pivoter Function}
\usage{
pivoter(df, id_vars, group_vars, measure_vars, fun = "sum", sep = "_",
  fill = NULL)

\method{pivoter}{tbl_spark}(df, id_vars, group_vars, measure_vars,
  fun = "sum", sep = "_", fill = NULL)

\method{pivoter}{data.frame}(df, id_vars, group_vars, measure_vars,
  fun = "sum", sep = "_", fill = NULL)
}
\arguments{
\item{df}{DataFrame}

\item{id_vars}{vector of column names. used as the left hand side of pivot.
can be one or more columns.}

\item{group_vars}{vector of column names. used as the right hand side of
pivot. unique values are transformed into columns. can be one or more
columns. should be categorical column}

\item{measure_vars}{vector of column names. used as the value amount in the
pivot. can be one or more columns.}

\item{fun}{function name. supports only single function. default is sum.
Current functions supported: min, max, sum, mean, variance, sd, kurtosis,
skewness}

\item{sep}{if NULL, new column names will be taken from group variable. If
not-NULL, the column names will be given by '<group_var name><sep><group_var
value><sep><measure_var name>'}

\item{fill}{optional fill value for structural missings. defaults to value
from applying fun to 0 length vector}

\item{...}{not currently implemented}
}
\value{
dataframe reshaped in wide format
}
\description{
Function to pivot data from long to wide format. Simliar to reshape2::dcast
function. Function allows for more than one group variable and measure
variable.
}
\examples{
library(dplyr)


# Create toy dataset
set.seed(319)
id_vars <- seq(101, 200, by=1)
dates <- seq(from=Sys.Date()-365, to=Sys.Date(), by="day")
cat1 <- c("A", "B")
cat2 <- c("X", "Y", "Z")

dat <- data.frame()
for(id in id_vars){
  n <- floor(runif(1)*100)
  d <- data.frame(id = id,
                 date = sample(dates, n, replace = TRUE),
                 cat1 = sample(cat1, n, replace = TRUE),
                 cat2 = sample(cat2, n, replace = TRUE),
                 metric1 = sample(1:5, n, replace = TRUE),
                 metric2 = rnorm(n, mean=50, sd = 5))
 dat <- rbind(dat, d)
}

pivoter(dat,
       id_vars = "id",
       group_vars = c("cat1"),
       measure_vars = "metric1",
       fun = "sum",
       fill=0)
}
