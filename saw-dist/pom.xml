<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.synchronoss.saw</groupId>
    <artifactId>saw</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>saw-dist</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>
  <name>saw-dist</name>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <docker.naming>none</docker.naming>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.sncr</groupId>
      <artifactId>saw-security</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.saw</groupId>
      <artifactId>saw-services-dist</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.synchronoss</groupId>
      <artifactId>bda-saw</artifactId>
      <version>${project.version}</version>
      <type>war</type>
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>3.0.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.restdocs</groupId>
      <artifactId>spring-restdocs-restassured</artifactId>
      <version>1.2.1.RELEASE</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.9.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/assembly.xml</descriptor>
          </descriptors>
          <!-- Leave version number of SAW bundle project out of
               artifact name, to avoid confusion as each SAW module at
               least for now has its own release cycle -->
          <finalName>${project.parent.artifactId}-${project.version}</finalName>
          <!-- Remove artifact classifier "bin" from archive name -->
          <appendAssemblyId>false</appendAssemblyId>
          <!-- Enable long file names without Maven warning -->
          <tarLongFileMode>posix</tarLongFileMode>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-failsafe-plugin</artifactId>
	<executions>
	  <execution>
	    <goals>
	      <goal>integration-test</goal>
	      <goal>verify</goal>
	    </goals>
          </execution>
        </executions>
        <configuration>
          <systemPropertyVariables>
            <saw.docker.port>${saw.docker.port}</saw.docker.port>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.22.1</version>
        <configuration>
          <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
          <!-- Workaround: Remove volumes created for Bamboo agent
               disk space workaround (see the VOLUME directive in
               "saw-dist/src/test/docker-mapr/Dockerfile". -->
          <removeVolumes>true</removeVolumes>
          <!-- Start containers in parallel to reduce startup time -->
          <startParallel>true</startParallel>
          <images>
            <image>
              <name>saw:${project.version}</name>
              <alias>saw</alias>
              <build>
                <dockerFileDir>${project.basedir}/src/test/docker</dockerFileDir>
                <assembly>
                  <inline xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                          xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
                          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">
                    <fileSets>
                      <fileSet>
                        <directory>${project.build.directory}</directory>
                        <outputDirectory>.</outputDirectory>
                        <includes>
                          <include>*.tgz</include>
                        </includes>
                      </fileSet>
                    </fileSets>
                  </inline>
                </assembly>
              </build>
              <run>
                <namingStrategy>${saw.docker.naming}</namingStrategy>
                <network>
                  <name>saw</name>
                </network>
                <ports>
                  <port>saw.docker.port:80</port>
                </ports>
                <!-- Run privileged for systemd -->
                <privileged>true</privileged>
                <volumes>
                  <bind>
                    <!-- Bind mount volume for saving system logs in
                         case needed for troubleshooting after a
                         failed run -->
                    <volume>${project.build.directory}:/build</volume>
                  </bind>
                </volumes>
                <wait>
                  <!-- Wait until the container health check reports
                       that systemd services are up and running -->
                  <healthy>true</healthy>
                  <!-- Increase timeout to allow application
                       deployment to finish -->
                  <time>600000</time>
                </wait>  
              </run>
            </image>
            <image>
              <name>saw-mapr:${project.version}</name>
              <alias>saw-mapr</alias>
              <build>
                <dockerFileDir>${project.basedir}/src/test/docker-mapr</dockerFileDir>
              </build>
              <run>
                <namingStrategy>${saw.docker.naming}</namingStrategy>
                <network>
                  <name>saw</name>
                  <alias>saw-mapr</alias>
                </network>
                <ports>
                  <port>saw.mcs.port:8443</port>
                  <port>saw.spark.master.port:8080</port>
                  <port>saw.spark.worker.port:8081</port>
                </ports>
                <!-- Run privileged for MapR -->
                <privileged>true</privileged>
                <wait>
                  <!-- Wait until the container health check reports
                       that MapR is up and running -->
                  <healthy>true</healthy>
                  <!-- Increase timeout to allow MapR to start -->
                  <time>600000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>build</goal>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
	<groupId>org.asciidoctor</groupId>
	<artifactId>asciidoctor-maven-plugin</artifactId>
	<version>1.5.3</version>
	<executions>
	  <execution>
	    <id>generate-docs</id>
	    <phase>post-integration-test</phase>
	    <goals>
	      <goal>process-asciidoc</goal>
	    </goals>
	    <configuration>
	      <backend>html</backend>
	      <doctype>book</doctype>
	    </configuration>
	  </execution>
	</executions>
	<dependencies>
	  <dependency>
	    <groupId>org.springframework.restdocs</groupId>
	    <artifactId>spring-restdocs-asciidoctor</artifactId>
	    <version>1.2.1.RELEASE</version>
	  </dependency>
	</dependencies>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>synchronoss</id>
      <url>http://maven-us.synchronoss.net:8081/nexus/content/repositories/releases-only</url>
    </repository>
  </repositories>
</project>
