<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sncr</groupId>
    <artifactId>saw-security</artifactId>
    <version>${revision}</version>
    <packaging>war</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.2.RELEASE</version>
        <relativePath></relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <start-class>com.sncr.saw.security.app.NSSOApplication</start-class>
        <commons.io.version>2.4</commons.io.version>
        <jjwt.version>0.7.0</jjwt.version>
        <gson.version>2.8.0</gson.version>
        <spring-security.version>4.0.2.RELEASE</spring-security.version>

        <!-- to be specified in command line -->
        <prod.release>0</prod.release>
        <project.release>${prod.release}</project.release>

        <rpm.version>${revision.nodash}</rpm.version>

        <!--
            Release version number cannot be removed optionally.
            Solution for this will be rename the rpm once obtained from build
        -->
        <rpm.release>${project.release}</rpm.release>
        <app.name>saw-security</app.name> <!-- ${project.artifactId} -->
        <app.version>${rpm.version}</app.version>
        <app.release>${rpm.release}</app.release>
        <app.nameVer>${app.name}-${app.version}</app.nameVer>

        <!-- Directories -->
        <app.optParDir>/opt/bda</app.optParDir>
        <app.optDir>${app.optParDir}/${app.nameVer}</app.optDir>
        <app.varDir>/var/bda/${app.name}</app.varDir>
        <app.etcDir>/etc/bda</app.etcDir>

        <app.user>saw</app.user>
        <app.group>saw</app.group>
    </properties>

<!--     <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Camden.SR5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
 -->
  <repositories>
  <repository>
    <id>spring-milestones</id>
    <name>Spring Milestones</name>
    <url>https://repo.spring.io/libs-milestone</url>
    <snapshots>
      <enabled>false</enabled>
    </snapshots>
  </repository>
  </repositories>

  <dependencies>
<!--
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web-services</artifactId>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
    		<groupId>org.mockito</groupId>
    		<artifactId>mockito-core</artifactId>
    		<version>1.9.5</version>
    		<scope>test</scope>
		</dependency>
		 <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>4.2.0</version>
        </dependency>
		<dependency>
    		<groupId>org.springframework</groupId>
    		<artifactId>spring-test</artifactId>
    		<version>3.1.2.RELEASE</version>
    		<scope>test</scope>
		</dependency>

<!--         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-remote-shell</artifactId>
        </dependency>
 -->
        <dependency>
            <groupId>org.jolokia</groupId>
            <artifactId>jolokia-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.4.0</version>
        </dependency>


        <dependency>
            <!-- org.springframework.context.* -->
            <!-- org.springframework.web.filter -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
        </dependency>
        <dependency>
            <!-- springfox.documentation.* -->
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <!-- io.jsonwebtoken -->
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <!-- com.google.gson -->
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
<!--        <dependency>
             org.springframework.security.config.annotation.web.builders
            <groupId>org.apache.servicemix.bundles</groupId>
            <artifactId>org.apache.servicemix.bundles.spring-security-config</artifactId>
            <version>4.2.2.RELEASE_1</version>
        </dependency>-->
        <dependency>
            <!-- org.springframework.security.web.header.writers -->
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <!-- version>4.0.1.RELEASE</version -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		    <version>1.7.25</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache-clustered</artifactId>
		</dependency>
    <dependency>
      <groupId>org.springframework.shell</groupId>
      <artifactId>spring-shell-starter</artifactId>
      <version>2.0.0.M2</version>
    </dependency>
    </dependencies>

    <build>
        <defaultGoal>package</defaultGoal>
        <plugins>
            <!--
              How do I create a JAR containing the classes in my webapp?
              http://maven.apache.org/plugins/maven-war-plugin/faq.html#attached
            -->
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <finalName>${project.artifactId}-${project.version}</finalName>
                </configuration>
            </plugin>

            <plugin>
              <groupId>de.dentrassi.maven</groupId>
              <artifactId>rpm</artifactId>
              <version>0.9.3</version>
              <executions>
                <execution>
                  <goals>
                    <goal>rpm</goal>
                  </goals>
                  <configuration>
                    <packageName>saw-security</packageName>
                    <version>${revision.nodash}</version>
                    <skipSigning>true</skipSigning>
                    <rulesets>
                      <ruleset>
                        <id>default</id>
                        <rules>
                          <rule>
                            <user>saw</user>
                            <group>saw</group>
                            <mode>0444</mode>
                          </rule>
                          <rule>
                            <when>
                              <type>directory</type>
                            </when>
                            <mode>0755</mode>
                          </rule>
                          <rule>
                            <when>
                              <prefix>${app.optDir}/bin/</prefix>
                            </when>
                            <mode>0555</mode>
                          </rule>
                          <rule>
                            <when>
                              <prefix>${app.optDir}/db/setup/init</prefix>
                            </when>
                            <mode>0755</mode>
                          </rule>
                          <rule>
                            <when>
                              <prefix>${app.optDir}/db/setup/init.sql</prefix>
                            </when>
                            <mode>0444</mode>
                          </rule>
                        </rules>
                      </ruleset>
                    </rulesets>
                    <entries>
                      <entry>
                        <name>${app.optParDir}/${app.name}</name>
                        <linkTo>${app.nameVer}</linkTo>
                        <user>saw</user>
                        <group>saw</group>
                      </entry>
                      <entry>
                        <name>${app.optDir}</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.etcDir}</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.varDir}</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.varDir}/run</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin/appl_info</name>
                        <file>bin/appl_info</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin/ccode.sh</name>
                        <file>bin/ccode.sh</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin/conf_init</name>
                        <file>bin/conf_init</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin/mk_conf.sh</name>
                        <file>bin/mk_conf.sh</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin/saw-security-runner.sh</name>
                        <file>bin/saw-security-runner.sh</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/bin/saw-security.sh</name>
                        <file>bin/saw-security.sh</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/conf</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/conf/logback.xml</name>
                        <file>conf/logback.xml</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/conf/templates</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/conf/templates</name>
                        <collect>
                          <from>conf/templates</from>
                        </collect>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/lib</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/lib/saw-security-${revision}.war</name>
                        <file>target/saw-security-${revision}.war</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/lib/saw-security-${revision}-classes.jar</name>
                        <file>target/saw-security-${revision}-classes.jar</file>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/db</name>
                        <directory>true</directory>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>${app.optDir}/db</name>
                        <collect>
                          <from>db</from>
                        </collect>
                        <ruleset>default</ruleset>
                      </entry>
                      <entry>
                        <name>/usr/lib/systemd/system/saw-security.service</name>
                        <file>src/main/system/saw-security.service</file>
                        <ruleset>default</ruleset>
                      </entry>
                    </entries>
                    <beforeInstallation>
echo pre-install started: ${app.nameVer}
echo check saw:saw user exists
getent group ${app.group} || {
    echo error: no such group: ${app.group}
    # groupadd -g 5100 saw
    exit 1
}
getent passwd ${app.user} || {
    echo error: no such user: ${app.user}
    # useradd -g 5100 -u 5100 saw
    exit 1
}

echo check /etc/bda/${app.name}.vars can be read
( &lt;/etc/bda/${app.name}.vars ) || exit 1

echo check Python module with "'import MySQLdb'"
( python -c 'import MySQLdb' ) || exit 1

echo pre-install completed: ${app.nameVer}
                    </beforeInstallation>
                    <afterInstallation>
echo pre-remove starting: ${app.nameVer}
echo remove files in log/, run/ subdirs in ${app.varDir}
( set -x
  rm -f ${app.varDir}/{log,run}/*
  )
echo remove python compiled files
( set -x
  rm -f ${app.optDir}/db/*.pyc ${app.optDir}/db/*/*.pyc
  )
echo remove files generated from templates
( set -x
  rm -f ${app.optDir}/conf/{application.properties,bootstrap.yml}
  )
echo pre-remove completed: ${app.nameVer}
                    </afterInstallation>
                    <requires>
                      <require>java-1.8.0-openjdk-headless &gt;= 1.8.0</require>
                      <require>MySQL-python &gt;= 1.2.5</require>
                    </requires>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                  <descriptors>
                    <descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>
                  </descriptors>
                  <!-- Enable long file names without Maven warning -->
                  <tarLongFileMode>posix</tarLongFileMode>
                </configuration>
                <executions>
                  <execution>
                    <phase>package</phase>
                    <goals>
                      <goal>single</goal>
                    </goals>
                  </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
