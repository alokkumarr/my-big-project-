<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.synchronoss</groupId>
    <artifactId>bda-rtps</artifactId>
    <version>2.0.0_dev</version>
  </parent>
  <!-- use app.name from parent pom -->
  <artifactId>${app.name}</artifactId>
  <repositories>
    <repository>
      <id>mapr-maven</id>
      <url>http://repository.mapr.com/maven</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <dependencies>
    <dependency>
      <groupId>com.synchronoss</groupId>
      <artifactId>rtps-common</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compile.version}</version>
        <executions>
          <execution>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>true</verbose>
          <fork>true</fork>
          <compilerVersion>${maven.compiler.version}</compilerVersion>
          <source>${maven.compiler.version}</source>
          <target>${maven.compiler.version}</target>
          <encoding>UTF-8</encoding>
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- RPM plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>rpm-maven-plugin</artifactId>
        <version>2.1.5</version>
        <executions>
          <execution>
            <id>rtps-rpm</id>
            <goals>
              <goal>rpm</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <license>Synchronoss proprietary product</license>
          <distribution>RealTime Processing Service</distribution>
          <needarch>false</needarch>
          <targetOS>i386-linux</targetOS>
          <group>RTPS/BackEnd Server</group>
          <packager>BDA</packager>
          <name>${rpm.name}</name>
          <!--
            Only applicable to a Mapping if filemode,
            username, AND groupname are NOT populated.
          -->
          <defaultUsername>${app.user}</defaultUsername>
          <defaultGroupname>${app.group}</defaultGroupname>
          <defaultDirmode>755</defaultDirmode>
          <defaultFilemode>444</defaultFilemode>
          <!-- -->
          <defineStatements>
            <defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
          </defineStatements>
          <mappings>
            <!-- dirs -->
            <mapping>
              <directory>${app.optDir}</directory>
            </mapping>
            <mapping>
              <directory>${app.optDir}/lib</directory>
            </mapping>
            <mapping>
              <directory>${app.optDir}/bin</directory>
            </mapping>
            <mapping>
              <directory>${app.optDir}/conf</directory>
            </mapping>
<!-- @@@ -->
            <!-- files -->
            <mapping>
              <directory>${app.optDir}/lib</directory>
              <directoryIncluded>false</directoryIncluded>
              <filemode>444</filemode>
              <username>${app.user}</username>
              <groupname>${app.group}</groupname>
              <sources>
                <source>
                  <location>target/${project.artifactId}-${project.version}.jar</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${app.optDir}/bin</directory>
              <directoryIncluded>false</directoryIncluded>
              <filemode>755</filemode>
              <username>${app.user}</username>
              <groupname>${app.group}</groupname>
              <sources>
                <source>
                  <location>src/main/scripts</location>
                  <includes>
                    <include>*.sh</include>
                  </includes>
                </source>
                <source>
                  <filter>true</filter>
                  <location>src/main/scripts/rtps_info</location>
                </source>
              </sources>
            </mapping>
            <mapping>
              <directory>${app.optDir}/conf</directory>
              <directoryIncluded>false</directoryIncluded>
              <filemode>444</filemode>
              <username>${app.user}</username>
              <groupname>${app.group}</groupname>
              <sources>
                <source>
                  <location>src/resources</location>
                </source>
              </sources>
            </mapping>
          </mappings>
          <preinstallScriptlet>
            <script>
#echo PreInstall done: ${app.nameVer}
            </script>
          </preinstallScriptlet>
          <postinstallScriptlet>
            <script>
echo PostInstall started: ${app.nameVer}
(
  cd ${app.optParDir} # /dfs/opt/bda
  rm -f ${app.name}-current
  ln -s xdf/${app.nameVer} ${app.name}-current
)
(
  cd ${app.optDir}
  ln -s bin sbin
)
echo Soft links created:
ls -l ${app.optParDir}/${app.name}-current ${app.optDir}/sbin
#
echo PostInstall done: ${app.nameVer}
            </script>
            <!-- scriptFile>src/main/scripts/postinstall</scriptFile -->
            <fileEncoding>utf-8</fileEncoding>
          </postinstallScriptlet>
          <preremoveScriptlet>
            <script>
echo PreRemove started: ${app.nameVer}
echo Remove soft links
rm -f ${app.optParDir}/${app.name}-current ${app.optDir}/sbin
echo PreRemove done: ${app.nameVer}
            </script>
            <!-- scriptFile>src/main/scripts/preremove</scriptFile -->
            <fileEncoding>utf-8</fileEncoding>
          </preremoveScriptlet>
        </configuration>
      </plugin>
      <!-- RPM plugin : end -->
      <!-- Nexus deployment -->
      <!-- Nexus URL should be provided as cmd parameter e.g. mvn package -pl :bda-rt-event-processing -am -Durl= -Durl=file:///cygdrive/c/projects/stash/repo -->
      <!--plugin><groupId>org.apache.maven.plugins</groupId><artifactId>maven-deploy-plugin</artifactId><version>2.8.2</version><executions><execution><id>deploy-bda-rtps</id><phase>package</phase><goals><goal>deploy-file</goal></goals><configuration -->
      <!-- repository URL should be provided in command line -->
      <!-- file>target/rpm/${project.artifactId}/RPMS/noarch/${project.artifactId}-${rpm.version}-${rpm.release}.noarch.rpm</file><groupId>com.synchronoss.bda-rt</groupId><artifactId>bda-rtps</artifactId><version>${project.version}</version><generatePom>false</generatePom><packaging>rpm</packaging></configuration></execution></executions></plugin -->
    </plugins>
  </build>
</project>