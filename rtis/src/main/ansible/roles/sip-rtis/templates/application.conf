# This is the main configuration file for the application.

play.crypto.secret="PbJ2]H^WhFEBqKT3rlNtJMY1i^PHUX>eMjiPyaC`w5RB[W]jihkhK?Vb1m`gJMw5"

# Port must be passed to play as CMD parameter, THERE IS NO DEFAULT VALUE
http.port=9950

play.i18n.langs = [ "en" ]
play.modules.enabled += "play.modules.swagger.SwaggerModule"

mapping = [

###
# Server sends messages (from events) to applications;
# each target application must be configured by populating
# application specific object below;
###
    {
      # Charter.SmartCare application specific parameters
		
      app_key = sip-rtis
      
      streams_1 = [
        {
            topic = data1
            queue = {{ sip_var_path }}/streams/stream_1
        }
      ]
      streams_2 = [
        {
            topic = data1
            queue = {{ sip_var_path }}/streams/stream_2
        }
      ]

      class = {{ sip_rtis_app_class }}

			# came from kafka
    	bootstrap.servers= "localhost:9092"
      batch.size=16384
      key.serializer=org.apache.kafka.common.serialization.StringSerializer
      value.serializer=org.apache.kafka.common.serialization.StringSerializer
      block.on.buffer.full=true
			timeout.ms=30000
    }
####
    
]

genericlog = {
   mapping = [
   ### Sample configuration
   ###{
   ###    customer = c
   ###    logtype = l
   ###    topic = data
   ###    queue = bda/data/streams/rta-pc_bt
   ###    class = mapr.streaming.LogMessageHandler
   ###    bootstrap.servers = "localhost:9092"
   ###    batch.size = 16384
   ###    key.serializer = org.apache.kafka.common.serialization.StringSerializer
   ###    value.serializer = org.apache.kafka.common.serialization.StringSerializer
   ###    block.on.buffer.full = true
   ###    timeout.ms = 30000
   ###    heartbeat.ms = 1000
   ###}
    ]
}

stream.file.location=/var/bda/rtis/run/stream.9950.dump

# Waiting time on send call to Kafka/MapR Streams client 
stream.send.timeout = 60

api.version="1"
swagger.api.info.title="Synchronoss Insights Platform (SIP ) Real Time Ingestion Service API"
swagger.api.info.description="SIP Real Time Ingestion Service is designed to accept events from client systems using a generic construct and JSON as the payload"
swagger.api.info.termsOfServiceUrl=""
swagger.api.info.contact="Suren.Nathan@synchronoss.com"
#swagger.api.info.license=""
#swagger.api.info.licenseUrl=""
swagger.api.basepath=""
swagger.api.host="TBS"

# example swagger authorisation filter
swagger.filter="security.AuthorisationFilter"
swagger.api.info.modelClasses = [ synchronoss.data.countly.model.BaseEvent ]

# Max request size ~64K (from netty)
play.server.netty.maxInitialLineLength=65536

stream.topic.selectormethod=random

