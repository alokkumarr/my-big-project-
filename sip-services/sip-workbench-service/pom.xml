<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.0.RELEASE</version>
    <relativePath/>
  </parent>

  <groupId>com.synchronoss.saw</groupId>
  <artifactId>sip-workbench-service</artifactId>
  <version>${revision}</version>
  <packaging>jar</packaging>
  <description></description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <json.validate>2.2.6</json.validate>
    <start-class>com.synchronoss.saw.workbench.SAWWorkBenchServiceApplication</start-class>
    <java.version>1.8</java.version>
    <jackson-coreutils>1.8</jackson-coreutils>
    <json-core>1.2.5</json-core>
    <jjwt.version>0.7.0</jjwt.version>
    <metadata.api>${revision}</metadata.api>
    <mapr.db.version>6.1.0-mapr</mapr.db.version>
    <mapr.hadoop.client.version>2.7.0-mapr-1808</mapr.hadoop.client.version>
    <jjwt.version>0.7.0</jjwt.version>
    <spark-version>2.3.2</spark-version>
    <scala.version.exclude>20_2.11</scala.version.exclude>
    <!-- TODO: Check livy version 0.5.0 (not getting resolved) -->
    <livy.version>0.5.0-incubating</livy.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpcore</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
	    <groupId>io.micrometer</groupId>
	    <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>${json.validate}</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>jackson-coreutils</artifactId>
      <version>${jackson-coreutils}</version>
    </dependency>
    <dependency>
      <groupId>com.github.fge</groupId>
      <artifactId>json-schema-core</artifactId>
      <version>${json-core}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
    </dependency>
    <dependency>
      <groupId>info.faljse</groupId>
      <artifactId>SDNotify</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>2.7.1</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <!-- springfox.documentation.* -->
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.4.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>19.0</version>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path-assert</artifactId>
    </dependency>

    <!-- APACHE COMMONS LANG -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>


    <!-- APACHE COMMONS IO -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>meta-api</artifactId>
      <version>${metadata.api}</version>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.saw</groupId>
      <artifactId>sip-date-extract-api</artifactId>
      <version>${revision}</version>
    </dependency>
    <dependency>
      <groupId>com.univocity</groupId>
      <artifactId>univocity-parsers</artifactId>
      <version>2.5.9</version>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.saw</groupId>
      <artifactId>sip-inspect-data-api</artifactId>
      <version>${revision}</version>
    </dependency>
    <dependency>
      <groupId>com.mapr.db</groupId>
      <artifactId>maprdb</artifactId>
      <version>${mapr.db.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>xdf</artifactId>
      <version>${revision}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <!--Exclude the xdf-esloader lib to resolve conflict with hadoop-es lib.-->
        <exclusion>
          <groupId>com.synchronoss.bda</groupId>
          <artifactId>xdf-esloader</artifactId>
        </exclusion>
        <exclusion>
        	<groupId>org.elasticsearch</groupId>
        	<artifactId>elasticsearch-spark-${scala.version.exclude}</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>xdf-component</artifactId>
      <version>${revision}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>xdf-ext</artifactId>
      <version>${revision}</version>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>xdf-sql</artifactId>
      <version>${revision}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>xdf-parser</artifactId>
      <version>${revision}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda</groupId>
      <artifactId>xdf-transformer</artifactId>
      <version>${revision}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.11</artifactId>
      <version>${spark-version}</version>
      <scope>provided</scope>
    </dependency>
     <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>2.11.8</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_2.11</artifactId>
      <version>${spark-version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.livy</groupId>
      <artifactId>livy-client-http</artifactId>
      <version>${livy.version}</version>
    </dependency>

    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt</artifactId>
      <version>${jjwt.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${mapr.hadoop.client.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>com.synchronoss.bda.sip</groupId>
      <artifactId>sip-common-components</artifactId>
      <version>${revision}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <compilerArgument>-Xlint:all</compilerArgument>
          <compilerArgument>-Xlint:-processing</compilerArgument>
          <testCompilerArgument>-Xlint:all</testCompilerArgument>
          <testCompilerArgument>-Xlint:-processing</testCompilerArgument>
          <showDeprecation>true</showDeprecation>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>**/*RemoteIT.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <!-- Workaround: The Spring Boot Maven plug-in repackaging causes issues
                        with the Maven Failsafe plug-in not finding classes (https://github.com/spring-projects/spring-boot/issues/6254),
                        so use a separate classifier until Maven Failsafe upgraded to 2.19.2. -->
          <classifier>exec</classifier>
          <!-- The Spring Boot Maven plug-in includes also dependencies with "provided" scope by default.  Exclude
                        Spark and Scala to reduce artifact size. -->
          <!--
              The spring-boot-start-test dependency adds JUnit in the
              compile scope so exclude JUnit explicitly from packaging
          -->
          <excludeGroupIds>ch.qos.logback,com.mapr.db,com.mapr.hadoop,javax.servlet,org.apache.hadoop,org.apache.zookeeper,junit,org.ojai</excludeGroupIds>
          <layout>ZIP</layout>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>create-bundle</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>de.dentrassi.maven</groupId>
        <artifactId>rpm</artifactId>
        <version>0.10.0</version>
        <executions>
          <execution>
            <goals>
              <goal>rpm</goal>
            </goals>
            <configuration>
              <packageName>sip-workbench</packageName>
              <version>${revision.nodash}</version>
              <obsoletes>saw-workbench</obsoletes>
              <entries>
                <entry>
                  <name>/opt/bda/saw-workbench-service</name>
                  <directory>true</directory>
                </entry>
                <entry>
                  <name>/opt/bda/saw-workbench-service/conf</name>
                  <directory>true</directory>
                </entry>
                <entry>
                  <name>/opt/bda/saw-workbench-service/saw-workbench.jar</name>
                  <file>target/sip-workbench-service-${revision}-exec.jar</file>
                </entry>
                <entry>
                  <name>/opt/bda/saw-workbench-service/saw-workbench-spark.jar</name>
                  <file>target/sip-workbench-service-${revision}-jar-with-dependencies.jar</file>
                </entry>
                <entry>
                  <name>/usr/lib/systemd/system/sip-workbench.service</name>
                  <file>src/main/system/sip-workbench.service</file>
                </entry>
                <entry>
                  <name>/usr/lib/systemd/system/sip-workbench-proxy.service</name>
                  <file>src/main/system/sip-workbench-proxy.service</file>
                </entry>
                <entry>
                  <name>/usr/lib/systemd/system/sip-workbench-proxy.socket</name>
                  <file>src/main/system/sip-workbench-proxy.socket</file>
                </entry>
              </entries>
              <afterInstallation>
                <script>systemctl daemon-reload</script>
              </afterInstallation>
              <afterRemoval>
                <script>systemctl daemon-reload</script>
              </afterRemoval>
              <signature>
                <skip>true</skip>
              </signature>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <repositories>
    <repository>
      <id>synchronoss</id>
      <url>http://mavenrepo.synchronoss.net:8081/nexus/content/repositories/releases-only</url>
    </repository>
    <repository>
      <id>synchronoss-snapshots</id>
      <url>http://mavenrepo.synchronoss.net:8081/nexus/content/repositories/snapshots-only/</url>
    </repository>

  </repositories>
  <distributionManagement>
    <repository>
      <id>client-releases</id>
      <name>SNCR Repository</name>
      <url>http://mavenrepo.synchronoss.net:8081/nexus/content/repositories/client-releases</url>
    </repository>
    <snapshotRepository>
      <id>client-snapshots</id>
      <name>SNCR Snapshot Repository</name>
      <url>http://mavenrepo.synchronoss.net:8081/nexus/content/repositories/client-snapshots</url>
    </snapshotRepository>
    <site>
      <id>sncr-libs-releases</id>
      <url>dav:http://mavenrepo.synchronoss.net:8081/nexus/content/sites/sites/components/sncr-gateway</url>
    </site>
  </distributionManagement>
</project>
