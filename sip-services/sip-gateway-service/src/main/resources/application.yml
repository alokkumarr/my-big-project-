info:
  component: Synchronoss Gateway Service
spring:
  application:
    name: saw-gateway-service
  servlet:
    multipart:
      enabled : true
      max-request-size: 25MB
      max-file-size: 25MB
      file-size-threshold: 2KB
  main:
    banner-mode: 'off'
logging:
  level:
    com.synchronoss.saw.gateway: INFO   

server:
  max-http-header-size: 65536
  address: localhost
  port: 9100
  compression:
    enabled: true
    mime-types: text/html,text/css,application/javascript,application/json
  servlet:
    context-path: ''
  #ssl:
   # key-store: /Users/spau0004/Desktop/keystore/keystore.jks
    #key-store-password: sip@123
    #trust-store: /Users/spau0004/Desktop/keystore/truststore.jks
    #trust-store-password: sip@123

connector: http
saw-security-port: 9000


analysis:
    service:
        host: http://localhost:9300
internal-analysis:
    service:
        host: http://localhost:9200
metadata:
    service:
        host: http://localhost:9200
semantic:
    service:
        host: http://localhost:9200
security:
    service:
        host: http://saw-rd611.eng-sip.dev01.us-west.sncrcloud.net/sip/security
export:
    service:
        host: http://localhost:9400
observe:
    service:
        host: http://localhost:9500
scheduler:
    service:
        host: http://localhost:9600
workbench:
    service:
        host: http://localhost:9700
proxy:
    service:
        host: http://localhost:9800
datapod:
    service:
        host: http://localhost:9900
batch:
    service:
        host: ${connector}://localhost:9642
        
api:
  gateway:
        endpoints:
        -   location: ${metadata.service.host}
            method: POST
            path: '[/]md*'
        -   location: ${metadata.service.host}
            method: POST
            path: '[/]dslanalysis.*'
        -   location: ${metadata.service.host}
            method: GET
            path: '[/]dslanalysis.*'
        -   location: ${metadata.service.host}
            method: PUT
            path: '[/]dslanalysis.*'
        -   location: ${metadata.service.host}
            method: DELETE
            path: '[/]dslanalysis.*'
        -   location: ${export.service.host}
            method: GET
            path: '[/]export.*'
        -   location: ${export.service.host}
            method : POST
            path : '[/]export.*'
        -   location: ${scheduler.service.host}
            method : GET
            path : '[/]scheduler.*'
        -   location: ${scheduler.service.host}
            method : POST
            path : '[/]scheduler.*'
        -   location: ${scheduler.service.host}
            method : DELETE
            path : '[/]scheduler.*'
        -   location: ${metadata.service.host}
            method: POST
            path: '[/]observe.*'
        -   location: ${metadata.service.host}
            method: GET
            path: '[/]observe.*'
        -   location: ${metadata.service.host}
            method: PUT
            path: '[/]observe.*'
        -   location: ${metadata.service.host}
            method: DELETE
            path: '[/]observe.*'
        -   location: ${proxy.service.host}
            method: POST
            path: '[/]filters.*'
        -   location: ${proxy.service.host}
            method: POST
            path: '[/]kpi.*'
        -   location: ${workbench.service.host}
            method: POST
            path: '[/]internal/workbench.*'
        -   location: ${workbench.service.host}
            method: GET
            path: '[/]internal/workbench.*'
        -   location: ${proxy.service.host}
            method: GET
            path: '[/]internal/proxy.*'
        -   location: ${proxy.service.host}
            method: POST
            path: '[/]internal/proxy.*'
        -   location: ${proxy.service.host}
            method: PUT
            path: '[/]internal/proxy.*'
        -   location: ${proxy.service.host}
            method: DELETE
            path: '[/]internal/proxy.*'
        -   location: ${metadata.service.host}
            method: POST
            path: '[/]internal/semantic.*'
        -   location: ${metadata.service.host}
            method: GET
            path: '[/]internal/semantic.*'
        -   location: ${metadata.service.host}
            method: PUT
            path: '[/]internal/semantic.*'
        -   location: ${batch.service.host}
            method: PUT
            path: '[/]ingestion/batch.*'
        -   location: ${batch.service.host}
            method: POST
            path: '[/]ingestion/batch.*'
        -   location: ${batch.service.host}
            method: GET
            path: '[/]ingestion/batch.*'
        -   location: ${batch.service.host}
            method: DELETE
            path: '[/]ingestion/batch.*'
        -   location: ${metadata.service.host}
            method: POST
            path: '[/]internal/rtisconfig.*'
        -   location: ${metadata.service.host}
            method: GET
            path: '[/]internal/rtisconfig.*'
        -   location: ${metadata.service.host}
            method: DELETE
            path: '[/]internal/rtisconfig.*'


sip:
   ssl:
     enable : false
   trust:
       store: /Users/spau0004/Desktop/keystore/truststore.jks
       password: sip@123
   key:
      store: /Users/spau0004/Desktop/keystore/keystore.jks
      password: sip@123
