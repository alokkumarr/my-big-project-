#!/bin/bash
#
# Run initial database setup
#
set -eu

dir=$(dirname $0)

# Use a marker file to ensure database setup is only run once.
marker=/etc/bda/saw-scheduler-initial-setup
if [ -f $marker ]; then
    echo "Initial database setup has already been run, so not running again"
    echo "(Marker file: $marker)"
    exit
fi
touch $marker

# Generate DB passwords ends here.

## Initialize SAW scheduler database
create_database="CREATE DATABASE saw_scheduler"

password=$( /opt/sip/sip-common-components/bin/ccode \
$(< /etc/bda/saw-scheduler-db-password) \
'20-89-C3-13-D6-29-9E-91-6C-35-C2-4D-0A-B5-2C-D4' decrypt)
root_password=$( /opt/sip/sip-common-components/bin/ccode \
$(< /etc/bda/mariadb-root-password) \
'20-89-C3-13-D6-29-9E-91-6C-35-C2-4D-0A-B5-2C-D4' decrypt)

create_user="CREATE USER 'saw_scheduler'@'localhost'"
#root password might be already initialized run the conditional statement
# to make sure its work for both cases.
if [ -f $root_password ] ; then
   # root password
   mysql -u root -p$root_password -e "$create_database"
   mysql -u root -p$root_password -e "$create_user IDENTIFIED BY '$password'"
   mysql -u root -p$root_password -e "GRANT ALL ON saw_scheduler.* TO 'saw_scheduler'@'localhost'"
 else
   mysql -u root -e "$create_database"
   mysql -u root -e "$create_user IDENTIFIED BY '$password'"
   mysql -u root -e "GRANT ALL ON saw_scheduler.* TO 'saw_scheduler'@'localhost'"
fi
