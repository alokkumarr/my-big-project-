- name: Copy SAW Transport Service package
  copy: src="{{ item }}" dest=/tmp/saw-transport.rpm
  with_fileglob: ["../rpms/sip-transport-*.rpm"]
# Workaround: The remove "/opt/saw/service" link operation in the RPM
# scripts of the "saw-transport" service package seems to be run after
# the creation of the same link in the new "sip-transport" package
# during upgrade using the "Obsoletes" RPM header, causing the
# installation to end up without any link at all.  So as a workaround,
# explicitly remove the old "saw-transport" package.  This workaround
# can be removed once all environments have been upgraded to SIP 3.3.
- name: Remove old differently named Transport Service package
  yum: name=saw-transport state=absent
- name: Install SAW Transport Service package
  yum: name=/tmp/saw-transport.rpm state=present
  notify:
    - restart sip-transport

- name: Install SAW Transport Service configuration file
  template: src=application.conf dest=/opt/saw/service/conf
  notify:
    - restart sip-transport

- name: Updating a environment variable in /opt/saw/service/conf/service.env
  blockinfile:
    path: /opt/saw/service/conf/service.env
    marker: "# {mark} SECURE"
    block: |
        SIP_SECURE=true
  notify:
    - restart sip-transport

  when: sip_secure

- name: Updating a environment variable in /opt/saw/service/conf/service.env
  blockinfile:
    path: /opt/saw/service/conf/service.env
    marker: "# {mark} SECURE"
    block: |
        SIP_SECURE=false
  notify:
    - restart sip-transport

  when: not sip_secure


- name: Updating a environment variable in /opt/saw/service/conf/service.env
  blockinfile:
    path: /opt/saw/service/conf/service.env
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    block: |
        KEY_STORE_PATH={{ store_path }}/{{ ansible_host }}/keystore.jks
        KEY_STORE_PASSWORD={{ sip_keystore_password }}
        HTTP_DISABLED=-Dhttp.port=disabled
  notify:
    - restart sip-transport

  when: sip_secure

- name: Create Transport Service environment file
  file: path=/etc/bda/saw-transport-service-env state=touch
# Workaround: The service restart handler will run only after all
# tasks have completed.  This causes the service to remain running
# using the old port when the new socket activation proxy starts up,
# resulting in a port already in use error.  So trigger the restart
# handler already here, to force the service to pick up the new port
# setting before starting the socket activation proxy.  Can be removed
# as no longer needed after the next SAW release.
- meta: flush_handlers
- name: Run SAW migration of Semantic id
  command: sh /opt/saw/service/bin/AnalysisUtility.sh
- name: Enable SIP Transport Service
  systemd: name=sip-transport-proxy.socket enabled=true state=started
- name: Enable SIP Transport Service Executor (regular)
  systemd: name="sip-transport-executor@regular-{{ item }}" enabled=true daemon_reload=true
  with_sequence: count={{ saw_transport_executor_regular_count | default('1') }}
- name: Enable SIP Transport Service Executor (fast)
  systemd: name="sip-transport-executor@fast-{{ item }}" enabled=true daemon_reload=true
  with_sequence: count={{ saw_transport_executor_fast_count | default('1') }}
