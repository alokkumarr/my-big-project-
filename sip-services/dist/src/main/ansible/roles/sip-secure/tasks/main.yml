# Creating store & certificate to every node for all service to be used by server & client
- name: Ensure a list of packages installed
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - python
    - python-setuptools

- name: Installing pip on all saw-services hosts
  easy_install:
    name: pip
    state: present

- name: Installing libraries on all saw-services hosts using Ansible pip module
  pip:
    name: "{{ packages }}"
    extra_args: --ignore-installed -U
  vars:
    packages:
    - ipaddress
    - enum34
    - pyOpenSSL==19.0.0

- name: Removing existing pyOpenSSL if exists
  yum:
    name: pyOpenSSL
    autoremove: true

- name: Create keystore configuration directory
  file:
    path: /etc/bda/keystore
    state: directory

- name: Ensure directory exists for local self-signed TLS certs.
  file:
    path: "{{ store_path }}/{{ ansible_host }}"
    state: directory
    mode: 0755

- name: Get private file contents and store it to variable
  command: "cat /etc/bda/{{ ansible_host }}-key.pem"
  register: privateKey

- name: Get certificate file contents and store it to variable
  command: "cat /etc/bda/{{ ansible_host }}-certificate.crt"
  register: certificate

- name: Create a keystore with a private key, create it if it doesn't exist
  java_keystore:
    name: sip
    certificate: "{{ certificate.stdout }}"
    private_key: "{{ privateKey.stdout }}"
    password: "{{ sip_keystore_password }}"
    dest: "{{ store_path }}/{{ ansible_host }}/keystore.jks"

- name: Import certificate to a truststore, create it if it doesn't exist
  java_cert:
    cert_alias: sip
    cert_path: "/etc/bda/{{ ansible_host }}-certificate.crt"
    keystore_path: "{{ store_path }}/{{ ansible_host }}/truststore.jks"
    keystore_pass: "{{ sip_keystore_password }}"
    keystore_create: yes
    state: present
